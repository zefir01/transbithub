// <auto-generated />
//
// To parse this JSON data, add NuGet 'Newtonsoft.Json' then do:
//
//    using Backend.Entitys.Json;
//
//    var bkexResponse = BkexResponse.FromJson(jsonString);

using System.Globalization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;

namespace CoreLib.Entitys.Json
{
    public partial class BkexResponse
    {
        [JsonProperty("code")]
        public long Code { get; set; }

        [JsonProperty("data")]
        public Data Data { get; set; }

        [JsonProperty("msg")]
        public string Msg { get; set; }
    }

    public class Data
    {
        [JsonProperty("pair")]
        public string Pair { get; set; }

        [JsonProperty("price")]
        public decimal Price { get; set; }
    }

    public partial class BkexResponse
    {
        public static BkexResponse FromJson(string json) => JsonConvert.DeserializeObject<BkexResponse>(json, BkexResponseConverter.Settings);
    }

    public static class BkexResponseSerialize
    {
        public static string ToJson(this BkexResponse self) => JsonConvert.SerializeObject(self, BkexResponseConverter.Settings);
    }

    internal static class BkexResponseConverter
    {
        public static readonly JsonSerializerSettings Settings = new JsonSerializerSettings
        {
            MetadataPropertyHandling = MetadataPropertyHandling.Ignore,
            DateParseHandling = DateParseHandling.None,
            Converters =
            {
                new IsoDateTimeConverter { DateTimeStyles = DateTimeStyles.AssumeUniversal }
            },
        };
    }
}