// <auto-generated />
//
// To parse this JSON data, add NuGet 'Newtonsoft.Json' then do:
//
//    using Aggregator.Services.Paxful;
//
//    var all = All.FromJson(jsonString);

namespace Aggregator.Services.Paxful.Json.All
{
    using System;
    using System.Collections.Generic;

    using System.Globalization;
    using Newtonsoft.Json;
    using Newtonsoft.Json.Converters;

    public partial class All
    {
        [JsonProperty("status")]
        public string Status { get; set; }

        [JsonProperty("timestamp")]
        public long Timestamp { get; set; }

        [JsonProperty("data")]
        public Data Data { get; set; }
    }

    public partial class Data
    {
        [JsonProperty("limit")]
        public long Limit { get; set; }

        [JsonProperty("offset")]
        public long Offset { get; set; }

        [JsonProperty("count")]
        public long Count { get; set; }

        [JsonProperty("totalCount")]
        public long TotalCount { get; set; }

        [JsonProperty("offers")]
        public List<Offer> Offers { get; set; }
    }

    public partial class Offer
    {
        [JsonProperty("offer_id")]
        public string OfferId { get; set; }

        [JsonProperty("offer_link")]
        public Uri OfferLink { get; set; }

        [JsonProperty("offer_type")]
        public string OfferType { get; set; }

        [JsonProperty("payment_window")]
        public long PaymentWindow { get; set; }

        [JsonProperty("currency_code")]
        public string CurrencyCode { get; set; }

        [JsonProperty("fiat_price_per_btc")]
        public decimal FiatPricePerBtc { get; set; }

        [JsonProperty("fiat_price_per_crypto")]
        public decimal FiatPricePerCrypto { get; set; }

        [JsonProperty("fiat_USD_price_per_btc")]
        public decimal FiatUsdPricePerBtc { get; set; }

        [JsonProperty("fiat_usd_price_per_crypto")]
        public decimal FiatUsdPricePerCrypto { get; set; }

        [JsonProperty("fiat_amount_range_min")]
        public long FiatAmountRangeMin { get; set; }

        [JsonProperty("fiat_amount_range_max")]
        public long FiatAmountRangeMax { get; set; }

        [JsonProperty("crypto_min")]
        public long CryptoMin { get; set; }

        [JsonProperty("crypto_max")]
        public long CryptoMax { get; set; }

        [JsonProperty("payment_method_name")]
        public string PaymentMethodName { get; set; }

        [JsonProperty("active")]
        public bool Active { get; set; }

        [JsonProperty("payment_method_slug")]
        public string PaymentMethodSlug { get; set; }

        [JsonProperty("payment_method_group", NullValueHandling = NullValueHandling.Ignore)]
        public string PaymentMethodGroup { get; set; }

        [JsonProperty("offer_owner_username")]
        public string OfferOwnerUsername { get; set; }

        [JsonProperty("offer_owner_profile_link")]
        public Uri OfferOwnerProfileLink { get; set; }

        [JsonProperty("offer_owner_feedback_positive", NullValueHandling = NullValueHandling.Ignore)]
        public long OfferOwnerFeedbackPositive { get; set; }

        [JsonProperty("offer_owner_feedback_negative", NullValueHandling = NullValueHandling.Ignore)]
        public long OfferOwnerFeedbackNegative { get; set; }

        [JsonProperty("offer_owner_country_iso", NullValueHandling = NullValueHandling.Ignore)]
        public object OfferOwnerCountryIso { get; set; }

        [JsonProperty("last_seen", NullValueHandling = NullValueHandling.Ignore)]
        public string LastSeen { get; set; }

        [JsonProperty("last_seen_timestamp", NullValueHandling = NullValueHandling.Ignore)]
        public long LastSeenTimestamp { get; set; }

        [JsonProperty("require_verified_email", NullValueHandling = NullValueHandling.Ignore)]
        public bool RequireVerifiedEmail { get; set; }

        [JsonProperty("require_verified_phone", NullValueHandling = NullValueHandling.Ignore)]
        public bool RequireVerifiedPhone { get; set; }

        [JsonProperty("require_min_past_trades", NullValueHandling = NullValueHandling.Ignore)]
        public object RequireMinPastTrades { get; set; }

        [JsonProperty("require_verified_id", NullValueHandling = NullValueHandling.Ignore)]
        public bool RequireVerifiedId { get; set; }

        [JsonProperty("country_name", NullValueHandling = NullValueHandling.Ignore)]
        public object CountryName { get; set; }

        [JsonProperty("city_name", NullValueHandling = NullValueHandling.Ignore)]
        public object CityName { get; set; }

        [JsonProperty("subdivision_name", NullValueHandling = NullValueHandling.Ignore)]
        public object SubdivisionName { get; set; }

        [JsonProperty("geoname_id", NullValueHandling = NullValueHandling.Ignore)]
        public object GeonameId { get; set; }

        [JsonProperty("seller_fee", NullValueHandling = NullValueHandling.Ignore)]
        public long SellerFee { get; set; }

        [JsonProperty("margin", NullValueHandling = NullValueHandling.Ignore)]
        public long Margin { get; set; }

        [JsonProperty("payment_method_label", NullValueHandling = NullValueHandling.Ignore)]
        public string PaymentMethodLabel { get; set; }

        [JsonProperty("offer_terms")]
        public string OfferTerms { get; set; }

        [JsonProperty("is_blocked")]
        public bool IsBlocked { get; set; }

        [JsonProperty("tags")]
        public List<Tag> Tags { get; set; }

        [JsonProperty("duty_hours")]
        public List<DutyHour> DutyHours { get; set; }
    }

    public partial class DutyHour
    {
        [JsonProperty("day")]
        public long Day { get; set; }

        [JsonProperty("active")]
        public long Active { get; set; }

        [JsonProperty("start_time")]
        public string StartTime { get; set; }

        [JsonProperty("end_time")]
        public string EndTime { get; set; }
    }

    public partial class Tag
    {
        [JsonProperty("name")]
        public string Name { get; set; }

        [JsonProperty("slug")]
        public string Slug { get; set; }

        [JsonProperty("description")]
        public string Description { get; set; }
    }

    public partial class All
    {
        public static All FromJson(string json) => JsonConvert.DeserializeObject<All>(json, Aggregator.Services.Paxful.Json.All.Converter.Settings);
    }

    public static class Serialize
    {
        public static string ToJson(this All self) => JsonConvert.SerializeObject(self, Aggregator.Services.Paxful.Json.All.Converter.Settings);
    }

    internal static class Converter
    {
        public static readonly JsonSerializerSettings Settings = new JsonSerializerSettings
        {
            MetadataPropertyHandling = MetadataPropertyHandling.Ignore,
            DateParseHandling = DateParseHandling.None,
            Converters =
            {
                new IsoDateTimeConverter { DateTimeStyles = DateTimeStyles.AssumeUniversal }
            },
        };
    }
}
