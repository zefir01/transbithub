admin:
  access_log_path: /tmp/admin_access.log
  address:
    socket_address:
      protocol: TCP
      address: 0.0.0.0
      port_value: 9901
static_resources:
  listeners:
    - address:
        socket_address:
          protocol: TCP
          address: 0.0.0.0
          port_value: 1001
      filter_chains:
        - filter_chain_match:
            destination_port: 1001
          filters:
            - name: envoy.http_connection_manager
              config:
                http_filters:
                  - name: envoy.router
                stat_prefix: ingress_http
                codec_type: auto
                use_remote_address: true
                access_log:
                  - name: envoy.file_access_log
                    typed_config:
                      "@type": "type.googleapis.com/envoy.extensions.access_loggers.file.v3.FileAccessLog"
                      path: /dev/stdout
                      json_format:
                        instance: "service"
                        proto: "%PROTOCOL%"
                        code: "%RESPONSE_CODE%"
                        route: "%ROUTE_NAME%"
                        host: "%UPSTREAM_HOST%"
                        cluster: "%UPSTREAM_CLUSTER%"
                        path: "%REQ(X-ENVOY-ORIGINAL-PATH?:PATH)%"
                route_config:
                  name: local_route
                  virtual_hosts:
                    - name: telegram_up
                      domains:
                        - "api.telegram.org"
                      routes:
                        - match:
                            prefix: "/"
                          route:
                            cluster: telegram_up
                    - name: health
                      domains:
                        - "envoy"
                      routes:
                        - match:
                            prefix: "/health"
                          direct_response:
                            status: 200


    - address:
        socket_address:
          protocol: TCP
          address: 0.0.0.0
          port_value: 9735
      filter_chains:
        - filter_chain_match:
            destination_port: 9735
          filters:
            - name: envoy.tcp_proxy
              config:
                stat_prefix: ingress_tcp
                cluster: lnd
                access_log:
                  - name: envoy.file_access_log
                    typed_config:
                      "@type": "type.googleapis.com/envoy.extensions.access_loggers.file.v3.FileAccessLog"
                      path: /dev/stdout
                      json_format:
                        proto: "%PROTOCOL%"
                        code: "%RESPONSE_CODE%"
                        route: "%ROUTE_NAME%"
                        host: "%UPSTREAM_HOST%"
                        cluster: "%UPSTREAM_CLUSTER%"
                        path: "%REQ(X-ENVOY-ORIGINAL-PATH?:PATH)%"

    - address:
        socket_address:
          protocol: TCP
          address: 0.0.0.0
          port_value: 80
      filter_chains:
        - filter_chain_match:
            destination_port: 80
          filters:
            - name: envoy.http_connection_manager
              config:
                http_filters:
                  - name: envoy.grpc_web
                  - name: envoy.router
                stat_prefix: ingress_http
                codec_type: auto
                use_remote_address: true
                stream_idle_timeout: 0s
                access_log:
                  - name: envoy.file_access_log
                    typed_config:
                      "@type": "type.googleapis.com/envoy.extensions.access_loggers.file.v3.FileAccessLog"
                      path: /dev/stdout
                      json_format:
                        proto: "%PROTOCOL%"
                        code: "%RESPONSE_CODE%"
                        route: "%ROUTE_NAME%"
                        host: "%UPSTREAM_HOST%"
                        cluster: "%UPSTREAM_CLUSTER%"
                        path: "%REQ(X-ENVOY-ORIGINAL-PATH?:PATH)%"
                route_config:
                  name: local_route
                  virtual_hosts:
                    - name: app
                      domains: [ "transbithub.com" ]
                      response_headers_to_add:
                        - header:
                            key: "Onion-Location"
                            value: "http://md5ytmyud45slls4li7crl7gudybjxz7lavd3bfaapm6ytdnun3wqvyd.onion"
                      routes:
                        - match:
                            prefix: "/"
                          redirect:
                            https_redirect: true
                            port_redirect: 443
                            path_redirect: "/"


    - address:
        socket_address:
          protocol: TCP
          address: 0.0.0.0
          port_value: 443
      listener_filters:
        - name: "envoy.filters.listener.tls_inspector"
          typed_config: { }
      filter_chains:
        - filter_chain_match:
            destination_port: 443
            server_names: [ "transbithub.com" ]
          transport_socket:
            name: envoy.transport_sockets.tls
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.DownstreamTlsContext
              common_tls_context:
                alpn_protocols: "h2,http/1.1"
                tls_certificates:
                  certificate_chain: { filename: "/etc/envoy/transbithub.com.pem" }
                  private_key: { filename: "/etc/envoy/transbithub.com.key" }
          filters:
            - name: envoy.http_connection_manager
              config:
                http_filters:
                  - name: envoy.filters.http.rbac
                    config:
                      rules:
                        action: ALLOW
                        policies:
                          "general-rules":
                            permissions:
                              - any: true
                            principals:
                              - any: true
                  - name: envoy.cors
                  - name: envoy.router
                stat_prefix: ingress_http
                stream_idle_timeout: 0s
                codec_type: auto
                use_remote_address: true
                access_log:
                  - name: envoy.file_access_log
                    typed_config:
                      "@type": "type.googleapis.com/envoy.extensions.access_loggers.file.v3.FileAccessLog"
                      path: /dev/stdout
                      json_format:
                        proto: "%PROTOCOL%"
                        code: "%RESPONSE_CODE%"
                        route: "%ROUTE_NAME%"
                        host: "%UPSTREAM_HOST%"
                        cluster: "%UPSTREAM_CLUSTER%"
                        path: "%REQ(X-ENVOY-ORIGINAL-PATH?:PATH)%"
                route_config:
                  name: local_route
                  virtual_hosts:
                    - name: app
                      domains: [ "transbithub.com" ]
                      require_tls: "EXTERNAL_ONLY"
                      retry_policy:
                        retry_host_predicate:
                          - name: envoy.retry_host_predicates.previous_hosts
                        host_selection_retry_max_attempts: 10
                        retry_on: "cancelled,connect-failure,gateway-error,refused-stream,reset,resource-exhausted,unavailable,5xx,internal"
                        num_retries: 15
                      response_headers_to_add:
                        - header:
                            key: "Onion-Location"
                            value: "http://md5ytmyud45slls4li7crl7gudybjxz7lavd3bfaapm6ytdnun3wqvyd.onion"
                      routes:
                        - match:
                            safe_regex:
                              google_re2: { }
                              regex: "\/.*\/Subscribe.*"
                          route:
                            cluster: tor_http
                            timeout: 0s
                        - match:
                            prefix: "/CoreSchema"
                          route:
                            cluster: tor_http
                            timeout: 40s
                        - match:
                            prefix: "/ProfileSchema"
                          route:
                            cluster: tor_http
                            timeout: 40s
                        - match:
                            prefix: "/connect/"
                          route:
                            cluster: tor_http
                            timeout: 40s
                        - match:
                            prefix: "/.well-known/"
                          route:
                            cluster: tor_http
                            timeout: 40s
                        - match:
                            prefix: "/confirm_email"
                          route:
                            cluster: tor_http
                            timeout: 40s
                        - match:
                            prefix: "/telegram-notify"
                          route:
                            cluster: tor_http
                            timeout: 40s
                          typed_per_filter_config:
                            envoy.filters.http.rbac:
                              "@type": "type.googleapis.com/envoy.extensions.filters.http.rbac.v3.RBACPerRoute"
                              rbac:
                                rules:
                                  action: ALLOW
                                  policies:
                                    "allow":
                                      permissions:
                                        - any: true
                                      principals:
                                        - remote_ip:
                                            address_prefix: 149.154.160.0
                                            prefix_len: 20
                                        - remote_ip:
                                            address_prefix: 91.108.4.0
                                            prefix_len: 22
                        - match:
                            prefix: "/telegram"
                          route:
                            cluster: tor_http
                            timeout: 40s
                          typed_per_filter_config:
                            envoy.filters.http.rbac:
                              "@type": "type.googleapis.com/envoy.extensions.filters.http.rbac.v3.RBACPerRoute"
                              rbac:
                                rules:
                                  action: ALLOW
                                  policies:
                                    "allow":
                                      permissions:
                                        - any: true
                                      principals:
                                        - remote_ip:
                                            address_prefix: 149.154.160.0
                                            prefix_len: 20
                                        - remote_ip:
                                            address_prefix: 91.108.4.0
                                            prefix_len: 22
                        - match:
                            prefix: "/docs-static"
                          route:
                            cluster: docs-static
                        - match:
                            prefix: "/app"
                          route:
                            prefix_rewrite: "/"
                            cluster: static
                        - match:
                            prefix: "/campaign"
                          route:
                            cluster: tor_http
                        - match:
                            prefix: "/subscription"
                          route:
                            cluster: tor_http
                        - match:
                            prefix: "/"
                          route:
                            cluster: landing
                      cors:
                        allow_origin_string_match:
                          exact: "transbithub.com"
                        allow_methods: GET, PUT, DELETE, POST, PATCH, OPTIONS
                        allow_headers: Authorization,authorization,keep-alive,user-agent,cache-control,content-type,content-transfer-encoding,custom-header-1,x-accept-content-transfer-encoding,x-accept-response-streaming,x-user-agent,x-grpc-web,grpc-timeout
                        allow_credentials: true
                        max_age: "1728000"
                        expose_headers: custom-header-1,grpc-status,grpc-message
        ##################################################################################################################
        - filter_chain_match:
            destination_port: 443
            server_names: [ "api.transbithub.com" ]
          transport_socket:
            name: envoy.transport_sockets.tls
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.DownstreamTlsContext
              common_tls_context:
                alpn_protocols: "h2"
                tls_certificates:
                  certificate_chain: { filename: "/etc/envoy/api.transbithub.com.pem" }
                  private_key: { filename: "/etc/envoy/api.transbithub.com.key" }
          filters:
            - name: envoy.http_connection_manager
              config:
                http_filters:
                  - name: envoy.cors
                  - name: envoy.router
                stat_prefix: ingress_http
                stream_idle_timeout: 0s
                codec_type: auto
                use_remote_address: true
                access_log:
                  - name: envoy.file_access_log
                    typed_config:
                      "@type": "type.googleapis.com/envoy.extensions.access_loggers.file.v3.FileAccessLog"
                      path: /dev/stdout
                      json_format:
                        proto: "%PROTOCOL%"
                        code: "%RESPONSE_CODE%"
                        route: "%ROUTE_NAME%"
                        host: "%UPSTREAM_HOST%"
                        cluster: "%UPSTREAM_CLUSTER%"
                        path: "%REQ(X-ENVOY-ORIGINAL-PATH?:PATH)%"
                route_config:
                  name: local_route
                  virtual_hosts:
                    - name: docs-ru
                      domains:
                        - "api.transbithub.com"
                      retry_policy:
                        retry_host_predicate:
                          - name: envoy.retry_host_predicates.previous_hosts
                        host_selection_retry_max_attempts: 10
                        retry_on: "cancelled,connect-failure,gateway-error,refused-stream,reset,resource-exhausted,unavailable"
                        num_retries: 5
                      routes:
                        - match:
                            safe_regex:
                              google_re2: { }
                              regex: "\/.*\/Subscribe.*"
                          route:
                            cluster: tor_http
                            timeout: 0s
                        - match:
                            prefix: "/CoreSchema"
                          route:
                            cluster: tor_api
                            timeout: 40s
                        - match:
                            prefix: "/ProfileSchema"
                          route:
                            cluster: tor_api
                            timeout: 40s
                      cors:
                        allow_origin_string_match:
                          exact: "api.transbithub.com"
                        allow_methods: GET, PUT, DELETE, POST, PATCH, OPTIONS
                        allow_headers: Authorization,authorization,keep-alive,user-agent,cache-control,content-type,content-transfer-encoding,custom-header-1,x-accept-content-transfer-encoding,x-accept-response-streaming,x-user-agent,x-grpc-web,grpc-timeout
                        allow_credentials: true
                        max_age: "1728000"
                        expose_headers: custom-header-1,grpc-status,grpc-message
####################################################################################################################################
        - filter_chain_match:
            destination_port: 443
            server_names: [ "mail.transbithub.com" ]
          transport_socket:
            name: envoy.transport_sockets.tls
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.DownstreamTlsContext
              common_tls_context:
                alpn_protocols: "h2,http/1.1"
                tls_certificates:
                  certificate_chain: { filename: "/etc/envoy/mail.transbithub.com.pem" }
                  private_key: { filename: "/etc/envoy/mail.transbithub.com.key" }
          filters:
            - name: envoy.http_connection_manager
              config:
                http_filters:
                  - name: envoy.cors
                  - name: envoy.router
                stat_prefix: ingress_http
                stream_idle_timeout: 0s
                codec_type: auto
                use_remote_address: true
                access_log:
                  - name: envoy.file_access_log
                    typed_config:
                      "@type": "type.googleapis.com/envoy.extensions.access_loggers.file.v3.FileAccessLog"
                      path: /dev/stdout
                      json_format:
                        proto: "%PROTOCOL%"
                        code: "%RESPONSE_CODE%"
                        route: "%ROUTE_NAME%"
                        host: "%UPSTREAM_HOST%"
                        cluster: "%UPSTREAM_CLUSTER%"
                        path: "%REQ(X-ENVOY-ORIGINAL-PATH?:PATH)%"
                route_config:
                  name: local_route
                  virtual_hosts:
                    - name: mail
                      domains:
                        - "mail.transbithub.com"
                      routes:
                        - match:
                            prefix: "/"
                          route:
                            cluster: tor_http
                            timeout: 40s
                      cors:
                        allow_origin_string_match:
                          exact: "mail.test.transbithub.com"
                        allow_methods: GET, PUT, DELETE, POST, PATCH, OPTIONS
                        allow_headers: Authorization,authorization,keep-alive,user-agent,cache-control,content-type,content-transfer-encoding,custom-header-1,x-accept-content-transfer-encoding,x-accept-response-streaming,x-user-agent,x-grpc-web,grpc-timeout
                        allow_credentials: true
                        max_age: "1728000"
                        expose_headers: custom-header-1,grpc-status,grpc-message

  clusters:
    - name: landing
      connect_timeout: 10s
      type: STRICT_DNS
      dns_lookup_family: V4_ONLY
      lb_policy: ROUND_ROBIN
      hosts: [ { socket_address: { address: landing, port_value: 3000 } } ]
    - name: lnd
      connect_timeout: 10s
      type: STRICT_DNS
      lb_policy: round_robin
      hosts:
        - socket_address:
            address: tor
            port_value: 9735
    - name: tor_http
      connect_timeout: 10s
      type: STRICT_DNS
      dns_lookup_family: V4_ONLY
      lb_policy: ROUND_ROBIN
      http2_protocol_options: { }
      hosts: [ { socket_address: { address: tor, port_value: 8080 } } ]
      health_checks:
        - timeout: 2s
          interval: 1s
          unhealthy_threshold: 1
          healthy_threshold: 1
          http_health_check:
            host: "envoy"
            path: "/health"
    - name: tor_api
      connect_timeout: 10s
      type: STRICT_DNS
      dns_lookup_family: V4_ONLY
      lb_policy: ROUND_ROBIN
      http2_protocol_options: { }
      hosts: [ { socket_address: { address: tor, port_value: 9000 } } ]
      health_checks:
        - timeout: 2s
          interval: 1s
          unhealthy_threshold: 1
          healthy_threshold: 1
          http_health_check:
            host: "envoy"
            path: "/health"
    - name: static
      connect_timeout: 10s
      type: STRICT_DNS
      dns_lookup_family: V4_ONLY
      lb_policy: ROUND_ROBIN
      hosts: [ { socket_address: { address: front, port_value: 80 } } ]
    - name: docs-static
      connect_timeout: 10s
      type: STRICT_DNS
      dns_lookup_family: V4_ONLY
      lb_policy: ROUND_ROBIN
      hosts: [ { socket_address: { address: docs-static, port_value: 80 } } ]
    - name: telegram_up
      connect_timeout: 5s
      type: LOGICAL_DNS
      dns_lookup_family: V4_ONLY
      lb_policy: ROUND_ROBIN
      hosts: [ { socket_address: { address: api.telegram.org, port_value: 443 } } ]
      transport_socket:
        name: envoy.transport_sockets.tls
        typed_config:
          "@type": type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.UpstreamTlsContext
     
#
