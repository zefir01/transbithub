version: '3.8'

x-x:
  LN_DB: &ln-db-user-pass "lightningd"
  DB_PASS: &db-user-pass "globalbitcoins"
  IDENTITY_DB: &identity-db "identity"
  TELEGRAM_DB: &telegram-db "telegram"
  DATA_DB: &data-db "data"
  BITCOIN_USER: &bitcoin-user "MyRpcUsername"
  BITCOIN_PASS: &bitcoin-pass "MyRpcPassword"
  BITCOIN_HOST: &bitcoin-host "btc-core"
  BITCOIN_PORT: &bitcoin-port "18334"

x-common-variables: &common-variables
  MIGRATE: "true"
  SMTP_SERVER: "mail"
  SMTP_PORT: "25"
  SMTP_USER: "support"
  SMTP_PASS: "shie1hioWieghah3"
  SMTP_FROM: "support@transbithub.com"
  SITE_NAME: &site-name "transbithub.com"
  SITE_NAME_ONION: &site-name-onion "md5ytmyud45slls4li7crl7gudybjxz7lavd3bfaapm6ytdnun3wqvyd.onion"
  BACKEND_API: "http://backend:50050"
  LOG_LEVEL: "Warning"
  FLUENTD_HOST: "fluentd"
  FLUENTD_UDP_PORT: "20001"
  TELEGRAM_BOT_NAME: &telegram-bot-name "@transbithub_bot"
  DATA_HOST: "postgres-data"
  DATA_PORT: "5432"
  DATA_DB: *data-db
  DATA_USER: *db-user-pass
  DATA_PASS: *db-user-pass
  NATS_URL: "nats://nats:4222"
  AUTH_HOST: "auth"
  AUTH_HTTP_PORT: "5001"
  AUTH_HTTP2_PORT: "5002"
  AUTH_HOST_INTERNAL: "auth"
  AUTH_HTTP2_PORT_INTERNAL: "5002"
  REDIS_URL: "redis:6379"
  BTC_SERVICE_URL: "http://btc-service:50060"
  BITCOIN_NETWORK: &bitcoin-network "mainnet"
  BITCOIN_NETWORK_SHORT: &bitcoin-network-short "main"
  TZ: "Etc/UTC"
  LND_URL: "lnd:10009"
  LND_CERT_PATH: "/lnd/tls.cert"
  LND_MACAROON_PATH: "/lnd/admin.macaroon"
  ENVIRONMENT: &environment "Release"

x-common-postgres-variables: &common-postgres-variables
  POSTGRESQL_POSTGRES_PASSWORD: "Batman01"
  POSTGRESQL_REPLICATION_MODE: "master"
  POSTGRESQL_REPLICATION_USER: "repl_user"
  POSTGRESQL_REPLICATION_PASSWORD: "repl_password"
  ALLOW_EMPTY_PASSWORD: "no"
  TZ: "Etc/UTC"

services:
  postgres-listmonk:
    image: bitnami/postgresql:13-debian-10
    restart: always
    environment:
      <<: *common-postgres-variables
      POSTGRESQL_USERNAME: listmonk
      POSTGRESQL_PASSWORD: listmonk
      POSTGRESQL_DATABASE: listmonk
    volumes:
      - postgres_listmonk:/data/postgres
    ports:
      - 5432

  postgres-identity:
    image: bitnami/postgresql:13-debian-10
    restart: always
    environment:
      <<: *common-postgres-variables
      POSTGRESQL_USERNAME: *db-user-pass
      POSTGRESQL_PASSWORD: *db-user-pass
      POSTGRESQL_DATABASE: *identity-db
    configs:
      - source: postgres-identity
        target: /bitnami/postgresql/conf/postgresql.conf
    volumes:
      - postgres_identity:/bitnami/postgresql
    ports:
      - "5433:5432"

  postgres-telegram:
    image: bitnami/postgresql:13-debian-10
    restart: always
    environment:
      <<: *common-postgres-variables
      POSTGRESQL_USERNAME: *db-user-pass
      POSTGRESQL_PASSWORD: *db-user-pass
      POSTGRESQL_DATABASE: *telegram-db
    configs:
      - source: postgres-telegram
        target: /bitnami/postgresql/conf/postgresql.conf
    volumes:
      - postgres_telegram:/bitnami/postgresql
    ports:
      - "5435:5432"

  postgres-telegram-notify:
    image: bitnami/postgresql:13-debian-10
    restart: always
    environment:
      <<: *common-postgres-variables
      POSTGRESQL_USERNAME: *db-user-pass
      POSTGRESQL_PASSWORD: *db-user-pass
      POSTGRESQL_DATABASE: *telegram-db
    configs:
      - source: postgres-telegram
        target: /bitnami/postgresql/conf/postgresql.conf
    volumes:
      - postgres_telegram_notify:/bitnami/postgresql
    ports:
      - "5432"

  postgres-data:
    image: bitnami/postgresql:13-debian-10
    restart: always
    environment:
      <<: *common-postgres-variables
      POSTGRESQL_USERNAME: *db-user-pass
      POSTGRESQL_PASSWORD: *db-user-pass
      POSTGRESQL_DATABASE: *data-db
    configs:
      - source: postgres-data
        target: /bitnami/postgresql/conf/postgresql.conf
    volumes:
      - postgres_data:/bitnami/postgresql
    ports:
      - "5434:5432"

  mail:
    restart: always
    image: ${MASTER_MAIL_TAG}
    environment:
      TZ: "Etc/UTC"
    ports:
      - target: 25
        published: 25
        protocol: tcp
        mode: host
      - target: 143
        published: 143
        protocol: tcp
        mode: host
    configs:
      - source: exim-master-conf
        target: /etc/exim4/exim.conf
      - source: dovecot-conf
        target: /etc/dovecot/dovecot.conf
      - source: dovecot-passwd
        target: /etc/dovecot/passwd
    volumes:
      - mail:/mail

  btc-core:
    restart: always
    image: ${BTC_CORE_TAG}
    stop_grace_period: 5m
    environment:
      BITCOIN_USER: *bitcoin-user
      BITCOIN_PASS: *bitcoin-pass
      BITCOIN_PORT: *bitcoin-port
      SITE_NAME_ONION: *site-name-onion
      BITCOIN_NETWORK_SHORT: *bitcoin-network-short
      TZ: "Etc/UTC"
    volumes:
      - btc_core:/opt/data
    ports:
      - "8333:8333"
      - *bitcoin-port
      - 28332



  lnd:
    restart: always
    image: ${LND_TAG}
    build:
      context: ../../Lnd/
      dockerfile: Dockerfile
    ports:
      - "9735:9735"
      - 10009
      - 10010
    environment:
      PORT: "9735"
      ALIAS: *site-name
      LND_PASSWORD: "Batman01"
      BTC_RPC_HOST: "btc-core:18334"
      BTC_RPC_USER: *bitcoin-user
      BTC_RPC_PASS: *bitcoin-pass
      BTC_ZMQ_RAW_BLOCKS: "btc-core:28334"
      BTC_ZMQ_RAW_TX: "btc-core:28335"
      TOR_PASSWORD: "Batman01"
      TOR_ENABLE: "yes"
    volumes:
      - lnd:/root/.lnd
      - btc_core:/bitcoin
      - ln_cli:/root/.lncli

  #password
  rtl:
    image: shahanafarooqui/rtl:0.10.1
    restart: unless-stopped
    depends_on:
      - lnd
    volumes:
      - lnd:/shared
    ports:
      - "8090:8090"
    environment:
      PORT: 8090
      HOST: "0.0.0.0"
      MACAROON_PATH: /shared
      LN_SERVER_URL: https://lnd:10010
      LN_IMPLEMENTATION: LND
      CONFIG_PATH: ''
      RTL_SSO: 0
      RTL_COOKIE_PATH: ''
      LOGOUT_REDIRECT_LINK: ''
      RTL_CONFIG_PATH: /RTL
      BITCOIND_CONFIG_PATH: ''
      CHANNEL_BACKUP_PATH: /backup

  lndmon:
    image: prod:5000/lndmon
    build: ../../LndMon
    command:
      - "--prometheus.listenaddr=0.0.0.0:9092"
      - "--lnd.network=mainnet"
      - "--lnd.host=lnd:10009"
    ports:
      - "9092:9092"
    restart: always
    volumes:
      - lnd:/root/.lnd
    depends_on:
      - lnd

  nats:
    image: 'nats:latest'
    ports:
      - 4222
    environment:
      TZ: "Etc/UTC"
    restart: always

  redis:
    restart: always
    image: redis
    environment:
      TZ: "Etc/UTC"
    ports:
      - 6379

  auth:
    restart: always
    image: ${AUTH_TAG}
    stop_grace_period: 5m
    deploy:
      endpoint_mode: dnsrr
    environment:
      IDENTITY_HOST: "postgres-identity"
      IDENTITY_PORT: "5432"
      IDENTITY_DB: *identity-db
      IDENTITY_USER: *db-user-pass
      IDENTITY_PASS: *db-user-pass
      <<: *common-variables
#    ports:
#      - 5001
#      - 5002
    depends_on:
      - postgres-identity
      - mail
      - fluentd

  backend:
    restart: always
    image: ${BACKEND_TAG}
    stop_grace_period: 5m
    deploy:
      endpoint_mode: dnsrr
#    ports:
#      - 50050
#      - 50051
#      - 50052
#      - "222:22"
    environment:
      DEBUG_BALANCES: "false"
      GPG_PUBLIC_KEY: "6314064DD0E2C02467726E918F315439B4D3D42A"
      <<: *common-variables
    volumes:
      - lnd:/lnd
    configs:
      - source: prod-keyring
        target: /opt/keyring.pgp
      - source: gpg-private-key
        target: /opt/private.pgp
    depends_on:
      - auth
      - btc-service
      - nats
      - postgres-data
      - redis
      - fluentd
      - lnd

  crons:
    restart: always
    image: ${CRONS_TAG}
    stop_grace_period: 5m
    deploy:
      endpoint_mode: dnsrr
#    ports:
#      - 50080
    environment:
      RATES_TOKEN: "bff092351f8bbbe8255cf862"
      RATES_DELAY_MINUTES: "5"
      PROXY_URL: "http://10.1.0.10:3128"
      GPG_PUBLIC_KEY: "6314064DD0E2C02467726E918F315439B4D3D42A"
      <<: *common-variables
    configs:
      - source: prod-keyring
        target: /opt/keyring.pgp
      - source: gpg-private-key
        target: /opt/private.pgp
    volumes:
      - lnd:/lnd
    depends_on:
      - btc-service
      - nats
      - postgres-data
      - mail
      - redis
      - fluentd
      - lnd

  btc-service:
    restart: always
    image: ${BTC_SERVICE_TAG}
    stop_grace_period: 5m
    deploy:
      endpoint_mode: dnsrr
#    ports:
#      - 50060
    environment:
      <<: *common-variables
      BTC_URL: "http://btc-core:18334"
      BTC_USER: *bitcoin-user
      BTC_PASS: *bitcoin-pass
      DISABLE_BACKUPER: "false"
    volumes:
      - btc_core:/bitcoin
    depends_on:
      - btc-core
      - postgres-data
      - fluentd

  telegram-service:
    restart: always
    image: ${TELEGRAM_SERVICE_TAG}
    stop_grace_period: 5m
    deploy:
      endpoint_mode: dnsrr
    environment:
      <<: *common-variables
      LOG_LEVEL: "Debug"
      TELEGRAM_HOST: "postgres-telegram"
      TELEGRAM_PORT: "5432"
      TELEGRAM_DB: *telegram-db
      TELEGRAM_USER: *db-user-pass
      TELEGRAM_PASS: *db-user-pass
      TELEGRAM_TOKEN: "1651206456:AAFInbAL_R-MhFyvraZ7ClnrBP6HB0NA_14"
      BACKEND_GRPC_URL: "https://envoy:9443"
      WEBHOOK_IP: *site-name
      WEBHOOK_PATH: "telegram"
      TELEGRAM_BOT_NAME: *telegram-bot-name
      TELEGRAM_BASE_URL: "http://envoy:1001/telegram"
    depends_on:
      - postgres-telegram
      - envoy

  telegram-notify-service:
    restart: always
    image: ${TELEGRAM_NOTIFY_TAG}
    stop_grace_period: 5m
    environment:
      <<: *common-variables
      LOG_LEVEL: "Debug"
      TELEGRAM_HOST: "postgres-telegram-notify"
      TELEGRAM_PORT: "5432"
      TELEGRAM_DB: *telegram-db
      TELEGRAM_USER: *db-user-pass
      TELEGRAM_PASS: *db-user-pass
      TELEGRAM_TOKEN: "1700441894:AAEd6pz9dlDvXXSgwlTiGeHTDPZK9x9mVQ0"
      BACKEND_GRPC_URL: "https://envoy:9443"
      WEBHOOK_IP: *site-name
      WEBHOOK_PATH: "telegram-notify"
      TELEGRAM_BOT_NAME: "@transbithub_notify_bot"
      TELEGRAM_BASE_URL: "http://envoy:1001/telegram"
    deploy:
      endpoint_mode: dnsrr
    depends_on:
      - postgres-telegram-notify
      - envoy


  adminka:
    restart: always
    image: ${ADMINKA_TAG}
    stop_grace_period: 5m
    deploy:
      endpoint_mode: dnsrr
    volumes:
      - lnd:/lnd
    environment:
      IDENTITY_HOST: "postgres-identity"
      IDENTITY_PORT: "5432"
      IDENTITY_DB: *identity-db
      IDENTITY_USER: *db-user-pass
      IDENTITY_PASS: *db-user-pass
      <<: *common-variables
    depends_on:
      - auth
      - nats
      - postgres-data
      - lnd

  cli:
    image: ${CLI_TAG}
    stop_grace_period: 5m
    environment:
      IDENTITY_HOST: "postgres-identity"
      IDENTITY_PORT: "5432"
      IDENTITY_DB: *identity-db
      IDENTITY_USER: *db-user-pass
      IDENTITY_PASS: *db-user-pass
      <<: *common-variables
    ports:
      - "3222:22"
    depends_on:
      - postgres-identity
      - postgres-data

  adminka-front:
    restart: always
    image: ${ADMINKA_FRONT_TAG}
    deploy:
      endpoint_mode: dnsrr
  #    ports:
  #      - 80

  front-static:
    restart: always
    image: ${FRONT_TAG}
    deploy:
      endpoint_mode: dnsrr
#    ports:
#      - 80
    depends_on:
      - backend

  docs-static:
    restart: always
    image: ${DOCS_TAG}
    deploy:
      endpoint_mode: dnsrr

  envoy:
    restart: always
    image: ${ENVOY_TAG}
    extra_hosts:
      - "front:10.3.0.2"
      - "front:10.3.0.6"
      - "front:10.3.0.10"
      - "front:10.3.0.14"
      - "front:10.3.0.18"
      - "front:10.3.0.22"
      - "front:10.3.0.26"
      - "front:10.3.0.30"
      - "front:10.3.0.34"
      - "front:10.3.0.38"
      - "front:10.3.0.42"
      - "front:10.3.0.46"
      - "front:10.3.0.50"
      - "front:10.3.0.54"
      - "front:10.3.0.58"
      - "front:10.3.0.62"
      - "front:10.3.0.66"
      - "front:10.3.0.70"
      - "front:10.3.0.74"
      - "front:10.3.0.78"
      - "front:10.3.0.82"
      - "front:10.3.0.86"
      - "front:10.3.0.90"
      - "front:10.3.0.94"
      - "front:10.3.0.98"
      - "front:10.3.0.102"
      - "front:10.3.0.106"
      - "front:10.3.0.110"
      - "front:10.3.0.114"
      - "front:10.3.0.118"
      - "front:10.3.0.122"
      - "front-test:10.3.0.130"
      - "front-test:10.3.0.134"
      - "front-test:10.3.0.138"
      - "front-test:10.3.0.142"
      - "front-test:10.3.0.146"
      - "front-test:10.3.0.150"
      - "front-test:10.3.0.154"
      - "front-test:10.3.0.158"
      - "front-test:10.3.0.162"
      - "front-test:10.3.0.166"
      - "front-test:10.3.0.170"
      - "front-test:10.3.0.174"
      - "front-test:10.3.0.178"
      - "front-test:10.3.0.182"
      - "front-test:10.3.0.186"
      - "front-test:10.3.0.190"
      - "front-test:10.3.0.194"
      - "front-test:10.3.0.198"
      - "front-test:10.3.0.202"
      - "front-test:10.3.0.206"
      - "front-test:10.3.0.210"
      - "front-test:10.3.0.214"
      - "front-test:10.3.0.218"
      - "front-test:10.3.0.222"
      - "front-test:10.3.0.226"
      - "front-test:10.3.0.230"
      - "front-test:10.3.0.234"
      - "front-test:10.3.0.238"
      - "front-test:10.3.0.242"
      - "front-test:10.3.0.246"
      - "front-test:10.3.0.250"
    configs:
      - source: envoy-onion-yaml
        target: /etc/envoy/envoy.yaml
      - source: onion-selfsigned-pem
        target: /etc/envoy/onion-selfsigned.pem
      - source: onion-selfsigned-key
        target: /etc/envoy/onion-selfsigned.key
      - source: envoy-pem
        target: /etc/envoy/envoy.pem
      - source: envoy-key
        target: /etc/envoy/envoy.key
    environment:
      - "ENVOY_UID=0"
    ports:
      - "80:80"
      - "443:443"
      - "8080:8080"
      - "9000:9000"
      - 9443
      - "8081:8081"
    depends_on:
      - front

        #  mariadb:
        #    image: mariadb:latest
        #    restart: always
        #    volumes:
        #      - mariadb:/var/lib/mysql
        #    environment:
        #      MYSQL_ROOT_PASSWORD: "Batman01"
        #      MYSQL_DATABASE: wordpress
        #      MYSQL_USER: wordpress
        #      MYSQL_PASSWORD: wordpress

        #  wordpress:
        #    depends_on:
        #      - mariadb
        #    image: wordpress:latest
        #    restart: always
        #    environment:
        #      WORDPRESS_DB_HOST: "mariadb:3306"
        #      WORDPRESS_DB_USER: wordpress
        #      WORDPRESS_DB_PASSWORD: wordpress
        #      WORDPRESS_DB_NAME: wordpress
        #    volumes:
        #      - wordpress:/var/www/html
  landing:
    restart: always
    image: ${LANDING_TAG}
    environment:
      NEXT_PUBLIC_YM_ID: "73005085"
      NEXT_PUBLIC_AGGREGATOR_DISABLE: "true"
    deploy:
      endpoint_mode: dnsrr


  fluentd:
    restart: always
    build: ./fluentd/
    image: prod:5000/fluentd
    configs:
      - source: fluent-master-conf
        target: /fluentd/etc/fluent.conf

  prometheus:
    restart: always
    image: prom/prometheus:latest
    ports:
      - "9090:9090"
    configs:
      - source: prometheus-yml
        target: /etc/prometheus/prometheus.yml
    volumes:
      - prometheus:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'

  grafana:
    image: grafana/grafana
    depends_on:
      - prometheus
    ports:
      - "6000:3000"
    volumes:
      - grafana:/var/lib/grafana
      - grafana_provisioning:/etc/grafana/provisioning/
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=foobar
      - GF_USERS_ALLOW_SIGN_UP=false
    restart: always

  #https://github.com/jvstein/bitcoin-prometheus-exporter
  bitcoind-exporter:
    restart: always
    image: jvstein/bitcoin-prometheus-exporter:latest
    ports:
      - 8334
    environment:
      BITCOIN_RPC_HOST: *bitcoin-host
      BITCOIN_RPC_PORT: *bitcoin-port
      BITCOIN_RPC_USER: *bitcoin-user
      BITCOIN_RPC_PASSWORD: *bitcoin-pass
      REFRESH_SECONDS: 5
      LOG_LEVEL: "INFO"
    depends_on:
      - btc-core

  postgres-exporter-data:
    restart: always
    image: wrouesnel/postgres_exporter
    environment:
      DATA_SOURCE_NAME: "postgresql://postgres:Batman01@postgres-data:5432/data?sslmode=disable"
      PG_EXPORTER_EXTEND_QUERY_PATH: "/queries.yaml"
    configs:
      - source: postgres-exporter-queries
        target: /queries.yaml
    ports:
      - 9187
    depends_on:
      - postgres-data

  postgres-exporter-identity:
    restart: always
    image: wrouesnel/postgres_exporter
    environment:
      DATA_SOURCE_NAME: "postgresql://postgres:Batman01@postgres-identity:5432/identity?sslmode=disable"
      PG_EXPORTER_EXTEND_QUERY_PATH: "/queries.yaml"
    configs:
      - source: postgres-exporter-queries
        target: /queries.yaml
    ports:
      - 9187
    depends_on:
      - postgres-identity

  postgres-exporter-telegram:
    restart: always
    image: wrouesnel/postgres_exporter
    environment:
      DATA_SOURCE_NAME: "postgresql://postgres:Batman01@postgres-telegram:5432/telegram?sslmode=disable"
      PG_EXPORTER_EXTEND_QUERY_PATH: "/queries.yaml"
    configs:
      - source: postgres-exporter-queries
        target: /queries.yaml
    ports:
      - 9187
    depends_on:
      - postgres-telegram
  
  node_exporter:
    restart: always
    image: quay.io/prometheus/node-exporter:latest
    command:
      - '--path.rootfs=/host'
    volumes:
      - '/:/host:ro,rslave'
    ports:
      - 9100
  
  docker-exporter:
    restart: always
    image: prom/container-exporter
    ports:
    - 9104
    volumes:
    - /sys/fs/cgroup:/cgroup
    - /var/run/docker.sock:/var/run/docker.sock

  pgadmin:
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_PASSWORD: "Batman01"
      PGADMIN_DEFAULT_EMAIL: "bugs@transbithub.com"
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    ports:
      - "5050:80"
    restart: always

#  listmonk:
#    restart: unless-stopped
#    image: listmonk/listmonk:latest
#    #command: [sh, -c, "./listmonk --install --yes"]
#    environment:
#      LISTMONK_app__address: "0.0.0.0:9000"
#      LISTMONK_app__admin_username: "listmonk"
#      LISTMONK_app__admin_password: "listmonk"
#      LISTMONK_db__host: "postgres-listmonk"
#      LISTMONK_db__user: "listmonk"
#      LISTMONK_db__password: "listmonk"
#      LISTMONK_db__database: "listmonk"
#      LISTMONK_db__ssl_mode: "disable"
#    ports:
#      - "9000"
#    depends_on:
#      - postgres-listmonk

  roundcube:
    image: instrumentisto/roundcube:fpm
    ports:
      - "9000"
    volumes:
      - roundcube:/app
      - roundcube_db:/var/db
    configs:
      - source: roundcube-config
        target: /app/config/config.inc.php
  roundcube-nginx:
    image: nginx:stable-alpine
    depends_on:
      - roundcube
    ports:
      - "80"
    volumes:
      - roundcube:/var/www
    configs:
      - source: roundcube-nginx-config
        target: /etc/nginx/conf.d/default.conf

  ping-exporter:
    image: travelping/ping-exporter
    ports:
      - "9427"
    configs:
      - source: ping-exporter-config
        target: /etc/ping-exporter/ping-exporter.yaml
    

configs:
  ping-exporter-config:
    file: ./PingExporter/config.yml
  roundcube-nginx-config:
    file: ./Roundcube/fpm.nginx.conf
  roundcube-config:
    file: ./Roundcube/roundcube.config.php.prod
  postgres-ln:
    file: ./postgres/postgresql-ln-backup.conf
  postgres-identity:
    file: ./postgres/postgresql-identity-backup.conf
  postgres-telegram:
    file: ./postgres/postgresql-telegram-backup.conf
  postgres-data:
    file: ./postgres/postgresql-data-backup.conf
  exim-master-conf:
    file: ./mail/exim-master.conf
  dovecot-conf:
    file: ./mail/dovecot.conf
  dovecot-passwd:
    file: ./mail/dovecot_passwd
  envoy-onion-yaml:
    file: ./envoy/envoy.onion.yaml
  onion-selfsigned-pem:
    file: ./envoy/onion-selfsigned.pem
  onion-selfsigned-key:
    file: ./envoy/onion-selfsigned.key
  envoy-pem:
    file: ./envoy/envoy.pem
  envoy-key:
    file: ./envoy/envoy.key
  fluent-master-conf:
    file: ./fluentd/fluent-master.conf
  prometheus-yml:
    file: ./prometheus/prometheus.yml
  prod-keyring:
    file: ./prod.keyring
  gpg-private-key:
    file: ./private.pgp
  postgres-exporter-queries:
    file: ./postgres-exporter-queries.yaml

volumes:
  btc_core:
  watchtower:
  postgres_identity:
  postgres_data:
  postgres_telegram:
  mail:
  prometheus:
  grafana:
  grafana_provisioning:
  lnd:
  mariadb:
  wordpress:
  postgres_listmonk:
  roundcube:
  roundcube_db:
  pgadmin_data:
  postgres_telegram_notify:
  ln_cli:
