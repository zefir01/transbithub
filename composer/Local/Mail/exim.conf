domainlist local_domains = fancrypto.ru
primary_hostname = mail.fancrypto.ru
hostlist   relay_from_hosts = 127.0.0.1 : 172.18.0.0/16
qualify_domain = fancrypto.ru

DKIM_DOMAIN                     = fancrypto.ru
DKIM_FILE                       = /etc/exim4/dkim_public
DKIM_PRIVATE_KEY                = /etc/exim4/dkim_key

acl_smtp_rcpt =         acl_check_rcpt
acl_smtp_data_prdr =    acl_check_prdr
acl_smtp_data =         acl_check_data
acl_smtp_dkim = acl_check_dkim

never_users = root
host_lookup = *
dns_dnssec_ok = 1
rfc1413_hosts = *
rfc1413_query_timeout = 0s
ignore_bounce_errors_after = 30m
freeze_tell = postmaster
auto_thaw = 1h
message_size_limit = 16M
smtp_accept_max = 50
smtp_accept_max_per_connection = 50
smtp_connect_backlog = 50
smtp_accept_max_per_host = 25
split_spool_directory = true
remote_max_parallel = 15
disable_ipv6=true
#dns_ipv4_lookup='*'
daemon_smtp_ports = 25 : 465 : 587
tls_on_connect_ports = 465

log_selector = \
        +all_parents \
        +lost_incoming_connection \
        +received_sender \
        +received_recipients \
        +smtp_confirmation \
        +smtp_syntax_error \
        +smtp_protocol_error \
        -queue_run
timeout_frozen_after = 7d



begin acl

acl_check_rcpt:
  accept  hosts = :
          control = dkim_disable_verify
  deny    message       = Restricted characters in address
          domains       = +local_domains
          local_parts   = ^.*[@%!/|]
  deny    message       = Restricted characters in address
          domains       = !+local_domains
          local_parts   = ^.*[@%!]

  accept  authenticated = *
#          control       = submission
          control       = dkim_disable_verify

  deny    message       = "HELO/EHLO обязано быть по SMTP RFC"
          condition     = ${if eq{}{}{yes}{no}}
  deny    !verify       = sender
	      hosts         = !+relay_from_hosts
  accept  hosts         = +relay_from_hosts
          control       = submission
          control       = dkim_disable_verify
  require message       = nice hosts say HELO first
          condition     = ${if def:sender_helo_name}
  require message = relay not permitted
          domains = +local_domains : +relay_to_domains
  deny    message       = "Не надо пихать свой IP в качестве HELO!"
          hosts         =  *:!+relay_from_hosts
          condition     = ${if eq{}\
                          {}{true}{false}}
  deny    condition     = ${if eq{}\
                          {}{yes}{no}}
          hosts         = !127.0.0.1 : !localhost : *
          message       = "Это мой IP-адрес! Пшёл прочь!"
  deny    condition     = ${if match{}\
                          {\N^\d+$\N}{yes}{no}}
          hosts         = !127.0.0.1:!localhost:*
          message       = "В HELO не могут быть тока цифры!"
  deny    message       = "Не нравится мне Ваш хост..."
          condition     = ${if match{} \
                               {adsl|dialup|pool|peer|dhcp} \
                               {yes}{no}}

  defer set acl_m_spf = ${run{/usr/bin/spfquery \
                      -ip "" \
                      -sender "" \
                      -helo ""}{}{}}
  set acl_m_spf     = 
      logwrite      = ++ spf= \
                      ip= \
                      sender= \
                      helo=
  message           = SPF record for  \
                      cannot be verified at the moment
  condition         = ${if ={}{6}}

  deny  message       = SPF policy prohibits sending from \
                      address 
      condition     = ${if ={}{3}}

  accept  domains       = +local_domains
          endpass
          message       = "В этом домене нет такого пользователя"
          verify        = recipient
  accept  hosts         = +relay_from_hosts
  deny    hosts         =!+relay_from_hosts
  accept

acl_check_prdr:
  warn  set acl_m_did_prdr = y
  accept

acl_check_data:
  deny    message    = maximum allowed line length is 998 octets, \
                       got 
          condition  = ${if > {}{998}}
  deny    !verify =     header_syntax
          message =     header syntax
	  !authenticated = *
          log_message = header syntax ()
  accept


acl_check_dkim:
      # Deny failures
      deny dkim_status = fail
           logwrite = DKIM test failed: 
           add_header = X-DKIM: DKIM test failed: (address= domain=), signature is bad.

      # Deny invalid signatures
      deny dkim_status = invalid
           add_header = X-DKIM:  (); 
           logwrite = DKIM test passed (address= domain=), but signature is invalid.

      # Accept valid/passed sigs
      accept dkim_status = pass
             logwrite = DKIM test passed
             add_header = X-DKIM: DKIM passed: (address= domain=), signature is good.


      # And anything else.
      accept


begin routers
dnslookup:
  driver = dnslookup
  domains = ! +local_domains
  transport = remote_smtp
  ignore_target_hosts = 0.0.0.0 : 127.0.0.0/8
  no_more
localuser:
  driver = accept
  domains       = +local_domains
  transport = local_delivery
  cannot_route_message = Unknown user
userforward:
  driver = redirect
  check_local_user
  file = /.forward
  no_verify
  no_expn
  check_ancestor
  file_transport = address_file
  pipe_transport = address_pipe
  reply_transport = address_reply

begin transports
remote_smtp:
  driver = smtp
#  message_size_limit = ${if > {}{998} {1}{0}}
#  hosts_try_prdr = *
  dkim_domain           = DKIM_DOMAIN
  dkim_selector         = dkim
  dkim_private_key      = DKIM_PRIVATE_KEY
local_delivery:
  driver = pipe  
  command = /usr/lib/dovecot/deliver -d @ -c /etc/dovecot/dovecot.conf 
  message_prefix =  
  message_suffix =  
  delivery_date_add  
  envelope_to_add  
  return_path_add  
  log_output  
  user = Debian-exim
address_pipe:
  driver = pipe
  return_output
address_file:
  driver = appendfile
  delivery_date_add
  envelope_to_add
  return_path_add
address_reply:
  driver = autoreply


begin retry

*                      *           F,2h,15m; G,16h,1h,1.5; F,4d,6h
begin rewrite

begin authenticators

dovecot_plain:
  driver = dovecot
  public_name = PLAIN
  server_socket = /var/run/dovecot/auth-client
  server_set_id = 

dovecot_login:
  driver = dovecot
  public_name = LOGIN
  server_socket = /var/run/dovecot/auth-client
  server_set_id = 

