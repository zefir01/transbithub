admin:
  access_log_path: /tmp/admin_access.log
  address:
    socket_address:
      protocol: TCP
      address: 0.0.0.0
      port_value: 9901
static_resources:
  listeners:


  - address:
      socket_address:
        protocol: TCP
        address: 0.0.0.0
        port_value: 80
    filter_chains:
    - filter_chain_match:
        destination_port: 80
      filters:
      - name: envoy.http_connection_manager
        config:
          http_filters:
          - name: envoy.router
          stat_prefix: ingress_http
          codec_type: auto
          use_remote_address: true
          access_log:
            - name: envoy.file_access_log
              typed_config:
                "@type": "type.googleapis.com/envoy.extensions.access_loggers.file.v3.FileAccessLog"
                path: /dev/stdout
                json_format:
                  proto: "%PROTOCOL%"
                  code: "%RESPONSE_CODE%"
                  route: "%ROUTE_NAME%"
                  host: "%UPSTREAM_HOST%"
                  cluster: "%UPSTREAM_CLUSTER%"
                  path: "%REQ(X-ENVOY-ORIGINAL-PATH?:PATH)%"
          route_config:
            name: local_route
            virtual_hosts:
            - name: app
              domains: ["fancrypto.ru"]
              require_tls: "EXTERNAL_ONLY"
              routes:
              - match:
                  prefix: "/"
                route:
                  cluster: static          
              - match:
                  prefix: "/"
                redirect:
      #               https_redirect: true
      #               port_redirect: 443
      #                  path_redirect: "/"
                    host_redirect: 'https://fancrypto.ru'
            - name: docs-ru
              domains:
              - "docs-ru.fancrypto.ru"
              routes:
              - match:
                  prefix: "/"
                route:
                  cluster: docs-ru                            
            

  - address:
      socket_address:
        protocol: TCP
        address: 0.0.0.0
        port_value: 443
    listener_filters:
    - name: "envoy.filters.listener.tls_inspector"
      typed_config: {}
    filter_chains:
    - filter_chain_match:
        destination_port: 443
      transport_socket:
        name: envoy.transport_sockets.tls
        typed_config:
          "@type": type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.DownstreamTlsContext
          common_tls_context:
            tls_certificates:
              certificate_chain: { filename: "/etc/site.pem" }
              private_key: { filename: "/etc/site.key" }
      filters:
      - name: envoy.http_connection_manager
        config:
          http_filters:
          - name: envoy.grpc_web
          - name: envoy.cors
          - name: envoy.router
          stat_prefix: ingress_http
          stream_idle_timeout: 0s
          codec_type: auto
          use_remote_address: true
          access_log:
            - name: envoy.file_access_log
              typed_config:
                "@type": "type.googleapis.com/envoy.extensions.access_loggers.file.v3.FileAccessLog"
                path: /dev/stdout
                json_format: 
                  proto: "%PROTOCOL%"
                  code: "%RESPONSE_CODE%"
                  route: "%ROUTE_NAME%"
                  host: "%UPSTREAM_HOST%"
                  cluster: "%UPSTREAM_CLUSTER%"
                  path: "%REQ(X-ENVOY-ORIGINAL-PATH?:PATH)%"
          route_config:
            name: local_route
            virtual_hosts:
            - name: app
              domains: ["fancrypto.ru"]
              require_tls: "EXTERNAL_ONLY"
              routes:
              - match:
                  prefix: "/CoreSchema"
                route:
                  cluster: backend_grpc
                  max_grpc_timeout: 0s
                  idle_timeout: 90s
              - match:
                  prefix: "/ProfileSchema"
                route:
                  cluster: auth_grpc
                  max_grpc_timeout: 0s
                  idle_timeout: 90s                  
              - match:
                  prefix: "/connect/"
                route:
                  cluster: auth_http
              - match:
                  prefix: "/.well-known/"
                route:
                  cluster: auth_http
              - match:
                  prefix: "/confirm_email"
                route:
                  cluster: backend_http
              - match:
                  prefix: "/telegram"
                route:
                  cluster: telegram_http
              - match:
                  prefix: "/AdminkaSchema"
                route:
                  cluster: adminka_grpc
              - match:
                  prefix: "/"
                route:
                  cluster: static            
              cors:
                allow_origin_string_match:
                  exact: "fancrypto.ru"
                allow_methods: GET, PUT, DELETE, POST, PATCH, OPTIONS
                allow_headers: Authorization,authorization,keep-alive,user-agent,cache-control,content-type,content-transfer-encoding,custom-header-1,x-accept-content-transfer-encoding,x-accept-response-streaming,x-user-agent,x-grpc-web,grpc-timeout
                allow_credentials: true
                max_age: "1728000"
                expose_headers: custom-header-1,grpc-status,grpc-message
                


  - address:
      socket_address:
        protocol: TCP
        address: 0.0.0.0
        port_value: 9000
    listener_filters:
      - name: "envoy.filters.listener.tls_inspector"
        typed_config: {}
    filter_chains:
      - filter_chain_match:
          destination_port: 9000
        transport_socket:
          name: envoy.transport_sockets.tls
          typed_config:
            "@type": type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.DownstreamTlsContext
            common_tls_context:
              alpn_protocols: "h2"
              tls_certificates:
                certificate_chain: { filename: "/etc/site.pem" }
                private_key: { filename: "/etc/site.key" }
        filters:
          - name: envoy.http_connection_manager
            config:
              http_filters:
                - name: envoy.router
              stat_prefix: ingress_http
              stream_idle_timeout: 0s
              codec_type: auto
              use_remote_address: true
              access_log:
                - name: envoy.file_access_log
                  typed_config:
                    "@type": "type.googleapis.com/envoy.extensions.access_loggers.file.v3.FileAccessLog"
                    path: /dev/stdout
                    json_format:
                      proto: "%PROTOCOL%"
                      code: "%RESPONSE_CODE%"
                      route: "%ROUTE_NAME%"
                      host: "%UPSTREAM_HOST%"
                      cluster: "%UPSTREAM_CLUSTER%"
                      path: "%REQ(X-ENVOY-ORIGINAL-PATH?:PATH)%"
              route_config:
                name: local_route
                virtual_hosts:
                  - name: local_service
                    domains: ["fancrypto.ru:*"]
                    require_tls: "EXTERNAL_ONLY"
                    routes:
                      - match:
                          prefix: "/CoreSchema"
                        route:
                          cluster: backend_grpc
                          max_grpc_timeout: 0s
                          idle_timeout: 90s              

  clusters:
  - name: backend_grpc
    connect_timeout: 5s
    type: LOGICAL_DNS
    dns_lookup_family: V4_ONLY
    http2_protocol_options: {}
    hosts: [{ socket_address: { address: backend, port_value: 50051 }}]
  - name: auth_grpc
    connect_timeout: 5s
    type: LOGICAL_DNS
    dns_lookup_family: V4_ONLY
    http2_protocol_options: { }
    hosts: [ { socket_address: { address: auth, port_value: 5002 } } ]
  - name: auth_http
    connect_timeout: 5s
    type: LOGICAL_DNS
    dns_lookup_family: V4_ONLY
    hosts: [ { socket_address: { address: auth, port_value: 5001 } } ]
  - name: backend_http
    connect_timeout: 5s
    type: LOGICAL_DNS
    dns_lookup_family: V4_ONLY
    lb_policy: ROUND_ROBIN
    hosts: [{ socket_address: { address: backend, port_value: 50052 }}]
  - name: static
    connect_timeout: 5s
    type: LOGICAL_DNS
    dns_lookup_family: V4_ONLY
    lb_policy: ROUND_ROBIN
    hosts: [{ socket_address: { address: front, port_value: 80 }}]
  - name: docs-ru
    connect_timeout: 5s
    type: LOGICAL_DNS
    dns_lookup_family: V4_ONLY
    lb_policy: ROUND_ROBIN
    hosts: [{ socket_address: { address: docs-ru, port_value: 80 }}]
  - name: telegram_http
    connect_timeout: 5s
    type: LOGICAL_DNS
    dns_lookup_family: V4_ONLY
    lb_policy: ROUND_ROBIN
    hosts: [{ socket_address: { address: telegram-service, port_value: 50071 }}]
  - name: adminka_grpc
    connect_timeout: 5s
    type: LOGICAL_DNS
    dns_lookup_family: V4_ONLY
    http2_protocol_options: { }
    hosts: [ { socket_address: { address: adminka, port_value: 50053 } } ]
  - name: adminka_static
    connect_timeout: 5s
    type: LOGICAL_DNS
    dns_lookup_family: V4_ONLY
    http2_protocol_options: { }
    hosts: [ { socket_address: { address: adminka, port_value: 50053 } } ]

     
