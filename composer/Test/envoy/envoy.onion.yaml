admin:
  access_log_path: /tmp/admin_access.log
  address:
    socket_address:
      protocol: TCP
      address: 0.0.0.0
      port_value: 9901
static_resources:
  listeners:
    - address:
        socket_address:
          protocol: TCP
          address: 0.0.0.0
          port_value: 1001
      filter_chains:
        - filter_chain_match:
            destination_port: 1001
          filters:
            - name: envoy.http_connection_manager
              config:
                http_filters:
                  - name: envoy.router
                stat_prefix: ingress_http
                codec_type: auto
                use_remote_address: true
                access_log:
                  - name: envoy.file_access_log
                    typed_config:
                      "@type": "type.googleapis.com/envoy.extensions.access_loggers.file.v3.FileAccessLog"
                      path: /dev/stdout
                      json_format:
                        proto: "%PROTOCOL%"
                        code: "%RESPONSE_CODE%"
                        route: "%ROUTE_NAME%"
                        host: "%UPSTREAM_HOST%"
                        cluster: "%UPSTREAM_CLUSTER%"
                        path: "%REQ(X-ENVOY-ORIGINAL-PATH?:PATH)%"
                route_config:
                  name: local_route
                  virtual_hosts:
                    - name: telegram
                      domains:
                        - "*"
                      routes:
                        - match:
                            prefix: "/telegram/"
                          route:
                            prefix_rewrite: "/"
                            cluster: front-test-service
                          request_headers_to_add:
                            - header:
                                key: "host"
                                value: "api.telegram.org"
                              append: false

    - address:
        socket_address:
          protocol: TCP
          address: 0.0.0.0
          port_value: 18081
      filter_chains:
        - filter_chain_match:
            destination_port: 18081
          filters:
            - name: envoy.http_connection_manager
              config:
                http_filters:
                  - name: envoy.grpc_web
                  - name: envoy.router
                stat_prefix: ingress_http
                codec_type: auto
                use_remote_address: true
                stream_idle_timeout: 180s
                access_log:
                  - name: envoy.file_access_log
                    typed_config:
                      "@type": "type.googleapis.com/envoy.extensions.access_loggers.file.v3.FileAccessLog"
                      path: /dev/stdout
                      json_format:
                        instance: "adminka"
                        proto: "%PROTOCOL%"
                        code: "%RESPONSE_CODE%"
                        route: "%ROUTE_NAME%"
                        host: "%UPSTREAM_HOST%"
                        cluster: "%UPSTREAM_CLUSTER%"
                        path: "%REQ(X-ENVOY-ORIGINAL-PATH?:PATH)%"
                route_config:
                  name: local_route
                  virtual_hosts:
                    - name: app
                      domains:
                        - "prod:18081"
                      require_tls: "EXTERNAL_ONLY"
                      routes:
                        - match:
                            safe_regex:
                              google_re2: { }
                              regex: "\/.*\/Subscribe.*"
                          route:
                            cluster: adminka_grpc
                            max_grpc_timeout: 0s
                            idle_timeout: 180s
                        - match:
                            prefix: "/AdminkaSchema"
                          route:
                            cluster: adminka_grpc
                            max_grpc_timeout: 120s
                            idle_timeout: 180s
                        - match:
                            prefix: "/connect/"
                          route:
                            cluster: auth_http
                        - match:
                            prefix: "/.well-known/"
                          route:
                            cluster: auth_http
                        - match:
                            prefix: "/adminka"
                          route:
                            prefix_rewrite: "/"
                            cluster: adminka-static
                      cors:
                        allow_origin_string_match:
                          exact: "prod:18081"
                        allow_methods: GET, PUT, DELETE, POST, PATCH, OPTIONS
                        allow_headers: Authorization,authorization,keep-alive,user-agent,cache-control,content-type,content-transfer-encoding,custom-header-1,x-accept-content-transfer-encoding,x-accept-response-streaming,x-user-agent,x-grpc-web,grpc-timeout
                        allow_credentials: true
                        max_age: "1728000"
                        expose_headers: custom-header-1,grpc-status,grpc-message
                        

    - address:
        socket_address:
          protocol: TCP
          address: 0.0.0.0
          port_value: 8080
      filter_chains:
        - filter_chain_match:
            destination_port: 8080
          filters:
            - name: envoy.http_connection_manager
              config:
                http_filters:
                  - name: envoy.grpc_web
                  - name: envoy.router
                stat_prefix: ingress_http
                codec_type: auto
                use_remote_address: false
                stream_idle_timeout: 90s
                access_log:
                  - name: envoy.file_access_log
                    typed_config:
                      "@type": "type.googleapis.com/envoy.extensions.access_loggers.file.v3.FileAccessLog"
                      path: /dev/stdout
                      json_format:
                        instance: "front"
                        proto: "%PROTOCOL%"
                        code: "%RESPONSE_CODE%"
                        route: "%ROUTE_NAME%"
                        host: "%UPSTREAM_HOST%"
                        cluster: "%UPSTREAM_CLUSTER%"
                        path: "%REQ(X-ENVOY-ORIGINAL-PATH?:PATH)%"
                route_config:
                  name: local_route
                  virtual_hosts:
                    - name: app
                      domains: [ "test.transbithub.com" ]
                      routes:
                        - match:
                            safe_regex:
                              google_re2: { }
                              regex: "\/.*\/Subscribe.*"
                          route:
                            cluster: backend_grpc
                            max_grpc_timeout: 0s
                            idle_timeout: 180s
                        - match:
                            prefix: "/CoreSchema"
                          route:
                            cluster: backend_grpc
                            max_grpc_timeout: 120s
                            idle_timeout: 180s
                        - match:
                            prefix: "/ProfileSchema"
                          route:
                            cluster: auth_grpc
                            max_grpc_timeout: 120s
                            idle_timeout: 180s
                        - match:
                            prefix: "/connect/"
                          route:
                            cluster: auth_http
                        - match:
                            prefix: "/.well-known/"
                          route:
                            cluster: auth_http
                        - match:
                            prefix: "/confirm_email"
                          route:
                            cluster: auth_http
                        - match:
                            prefix: "/telegram-notify"
                          route:
                            cluster: telegram_notify_http
                        - match:
                            prefix: "/telegram"
                          route:
                            cluster: telegram_http
                    - name: mail
                      domains:
                        - "mail.test.transbithub.com"
                      require_tls: "EXTERNAL_ONLY"
                      routes:
                        - match:
                            prefix: "/"
                          route:
                            cluster: roundcube
                    - name: envoy
                      domains:
                        - "envoy"
                      routes:
                        - match:
                            prefix: "/health"
                          direct_response:
                            status: 200


    - address:
        socket_address:
          protocol: TCP
          address: 0.0.0.0
          port_value: 9000
      filter_chains:
        - filter_chain_match:
            destination_port: 9000
          filters:
            - name: envoy.http_connection_manager
              config:
                http_filters:
                  - name: envoy.router
                stat_prefix: ingress_http
                codec_type: auto
                use_remote_address: false
                stream_idle_timeout: 90s
                access_log:
                  - name: envoy.file_access_log
                    typed_config:
                      "@type": "type.googleapis.com/envoy.extensions.access_loggers.file.v3.FileAccessLog"
                      path: /dev/stdout
                      json_format:
                        instance: "front-api"
                        proto: "%PROTOCOL%"
                        code: "%RESPONSE_CODE%"
                        route: "%ROUTE_NAME%"
                        host: "%UPSTREAM_HOST%"
                        cluster: "%UPSTREAM_CLUSTER%"
                        path: "%REQ(X-ENVOY-ORIGINAL-PATH?:PATH)%"
                route_config:
                  name: local_route
                  virtual_hosts:
                    - name: local_service
                      domains: [ "api.test.transbithub.com" ]
                      routes:
                        - match:
                            safe_regex:
                              google_re2: { }
                              regex: "\/.*\/Subscribe.*"
                          route:
                            cluster: backend_grpc
                            max_grpc_timeout: 0s
                            idle_timeout: 180s
                        - match:
                            prefix: "/CoreSchema"
                          route:
                            cluster: backend_grpc
                            max_grpc_timeout: 120s
                            idle_timeout: 180s
                    - name: envoy
                      domains:
                        - "envoy"
                      routes:
                        - match:
                            prefix: "/health"
                          direct_response:
                            status: 200

    - address:
        socket_address:
          protocol: TCP
          address: 0.0.0.0
          port_value: 9443
      filter_chains:
        - filter_chain_match:
            destination_port: 9443
          transport_socket:
            name: envoy.transport_sockets.tls
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.DownstreamTlsContext
              common_tls_context:
                alpn_protocols: "h2,http/1.1"
                tls_certificates:
                  certificate_chain: { filename: "/etc/envoy/envoy.pem" }
                  private_key: { filename: "/etc/envoy/envoy.key" }
          filters:
            - name: envoy.http_connection_manager
              config:
                http_filters:
                  - name: envoy.router
                stat_prefix: ingress_http
                codec_type: "HTTP2"
                use_remote_address: false
                stream_idle_timeout: 90s
                access_log:
                  - name: envoy.file_access_log
                    typed_config:
                      "@type": "type.googleapis.com/envoy.extensions.access_loggers.file.v3.FileAccessLog"
                      path: /dev/stdout
                      json_format:
                        instance: "internal-api"
                        proto: "%PROTOCOL%"
                        code: "%RESPONSE_CODE%"
                        route: "%ROUTE_NAME%"
                        host: "%UPSTREAM_HOST%"
                        cluster: "%UPSTREAM_CLUSTER%"
                        path: "%REQ(X-ENVOY-ORIGINAL-PATH?:PATH)%"
                route_config:
                  name: local_route
                  virtual_hosts:
                    - name: local_service
                      domains: [ "envoy:9443" ]
                      routes:
                        - match:
                            safe_regex:
                              google_re2: { }
                              regex: "\/.*\/Subscribe.*"
                          route:
                            cluster: backend_grpc
                            max_grpc_timeout: 0s
                            idle_timeout: 180s
                        - match:
                            prefix: "/CoreSchema"
                          route:
                            cluster: backend_grpc
                            max_grpc_timeout: 120s
                            idle_timeout: 180s
                        - match:
                            prefix: "/ProfileSchema"
                          route:
                            cluster: auth_grpc
                            max_grpc_timeout: 120s
                            idle_timeout: 180s
  clusters:
    - name: roundcube
      connect_timeout: 5s
      type: strict_dns
      dns_lookup_family: V4_ONLY
      lb_policy: ROUND_ROBIN
      hosts: [ { socket_address: { address: roundcube-nginx, port_value: 80 } } ]
    - name: adminka-static
      connect_timeout: 5s
      type: strict_dns
      dns_lookup_family: V4_ONLY
      lb_policy: ROUND_ROBIN
      hosts: [ { socket_address: { address: adminka-front, port_value: 80 } } ]
    - name: adminka_grpc
      connect_timeout: 5s
      type: LOGICAL_DNS
      dns_lookup_family: V4_ONLY
      http2_protocol_options: { }
      hosts: [ { socket_address: { address: adminka, port_value: 50053 } } ]
    - name: backend_grpc
      connect_timeout: 5s
      type: strict_dns
      dns_lookup_family: V4_ONLY
      http2_protocol_options: { }
      lb_policy: ROUND_ROBIN
      hosts: [ { socket_address: { address: backend, port_value: 50051 } } ]
    - name: auth_grpc
      connect_timeout: 5s
      type: strict_dns
      dns_lookup_family: V4_ONLY
      http2_protocol_options: { }
      lb_policy: ROUND_ROBIN
      hosts: [ { socket_address: { address: auth, port_value: 5002 } } ]
    - name: auth_http
      connect_timeout: 5s
      type: strict_dns
      dns_lookup_family: V4_ONLY
      lb_policy: ROUND_ROBIN
      hosts: [ { socket_address: { address: auth, port_value: 5001 } } ]
    - name: backend_http
      connect_timeout: 5s
      type: strict_dns
      dns_lookup_family: V4_ONLY
      lb_policy: ROUND_ROBIN
      hosts: [ { socket_address: { address: backend, port_value: 50052 } } ]
    - name: static
      connect_timeout: 5s
      type: strict_dns
      dns_lookup_family: V4_ONLY
      lb_policy: ROUND_ROBIN
      hosts: [ { socket_address: { address: front, port_value: 80 } } ]
    - name: docs-ru
      connect_timeout: 5s
      type: strict_dns
      dns_lookup_family: V4_ONLY
      lb_policy: ROUND_ROBIN
      hosts: [ { socket_address: { address: docs-ru, port_value: 80 } } ]
    - name: telegram_http
      connect_timeout: 5s
      type: strict_dns
      dns_lookup_family: V4_ONLY
      lb_policy: ROUND_ROBIN
      hosts: [ { socket_address: { address: telegram-service, port_value: 50071 } } ]
    - name: front-test-service
      connect_timeout: 5s
      type: strict_dns
      dns_lookup_family: V4_ONLY
      lb_policy: ROUND_ROBIN
      hosts: [ { socket_address: { address: front-test, port_value: 1001 } } ]
      health_checks:
        - timeout: 2s
          interval: 1s
          unhealthy_threshold: 1
          healthy_threshold: 1
          http_health_check:
            host: "envoy"
            path: "/health"
    - name: telegram_notify_http
      connect_timeout: 5s
      type: strict_dns
      dns_lookup_family: V4_ONLY
      lb_policy: ROUND_ROBIN
      hosts: [ { socket_address: { address: telegram-notify-service, port_value: 50071 } } ]
     
