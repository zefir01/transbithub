/* eslint-disable */
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var google_protobuf_timestamp_pb = require('google-protobuf/google/protobuf/timestamp_pb.js');
var google_protobuf_empty_pb = require('google-protobuf/google/protobuf/empty_pb.js');
goog.exportSymbol('proto.CoreSchema.V1.AdCurrentStatus', null, global);
goog.exportSymbol('proto.CoreSchema.V1.AddUserToTrustedRequest', null, global);
goog.exportSymbol('proto.CoreSchema.V1.Advertisement', null, global);
goog.exportSymbol('proto.CoreSchema.V1.AdvertisementData', null, global);
goog.exportSymbol('proto.CoreSchema.V1.AllAdvertisementsStatus', null, global);
goog.exportSymbol('proto.CoreSchema.V1.Balance', null, global);
goog.exportSymbol('proto.CoreSchema.V1.BlockUserRequest', null, global);
goog.exportSymbol('proto.CoreSchema.V1.BoughtOptions', null, global);
goog.exportSymbol('proto.CoreSchema.V1.BtcAddress', null, global);
goog.exportSymbol('proto.CoreSchema.V1.BuyAutoPriceRecalcsRequest', null, global);
goog.exportSymbol('proto.CoreSchema.V1.CancelDealRequest', null, global);
goog.exportSymbol('proto.CoreSchema.V1.CancelDealResponse', null, global);
goog.exportSymbol('proto.CoreSchema.V1.CancelInvoicePaymentRequest', null, global);
goog.exportSymbol('proto.CoreSchema.V1.ChangeAdvertisementStatusRequest', null, global);
goog.exportSymbol('proto.CoreSchema.V1.ChangeAdvertisementStatusResponse', null, global);
goog.exportSymbol('proto.CoreSchema.V1.ChangeInvoiceSecretRequest', null, global);
goog.exportSymbol('proto.CoreSchema.V1.ChangeInvoiceSecretRequest.SecretOperations', null, global);
goog.exportSymbol('proto.CoreSchema.V1.Conversation', null, global);
goog.exportSymbol('proto.CoreSchema.V1.ConversationMessage', null, global);
goog.exportSymbol('proto.CoreSchema.V1.CreateDealLnBuyRequest', null, global);
goog.exportSymbol('proto.CoreSchema.V1.CreateDealLnSellRequest', null, global);
goog.exportSymbol('proto.CoreSchema.V1.CreateDealRequest', null, global);
goog.exportSymbol('proto.CoreSchema.V1.CreateDisputeRequest', null, global);
goog.exportSymbol('proto.CoreSchema.V1.CreateDisputeResponse', null, global);
goog.exportSymbol('proto.CoreSchema.V1.CreateInvoiceRequest', null, global);
goog.exportSymbol('proto.CoreSchema.V1.CreateInvoiceSecretRequest', null, global);
goog.exportSymbol('proto.CoreSchema.V1.CreatePromiseRequest', null, global);
goog.exportSymbol('proto.CoreSchema.V1.CreatePromiseResponse', null, global);
goog.exportSymbol('proto.CoreSchema.V1.CreateRefundRequest', null, global);
goog.exportSymbol('proto.CoreSchema.V1.CreateRefundResponse', null, global);
goog.exportSymbol('proto.CoreSchema.V1.CreateTransactionRequest', null, global);
goog.exportSymbol('proto.CoreSchema.V1.CreateUserComplaintRequest', null, global);
goog.exportSymbol('proto.CoreSchema.V1.Deal', null, global);
goog.exportSymbol('proto.CoreSchema.V1.Deal.WithdrawalStatusMsg', null, global);
goog.exportSymbol('proto.CoreSchema.V1.Deal.WithdrawalStatusMsg.StatusEnum', null, global);
goog.exportSymbol('proto.CoreSchema.V1.DealMessage', null, global);
goog.exportSymbol('proto.CoreSchema.V1.DealStatus', null, global);
goog.exportSymbol('proto.CoreSchema.V1.Decimal', null, global);
goog.exportSymbol('proto.CoreSchema.V1.DeleteAdvertisementRequest', null, global);
goog.exportSymbol('proto.CoreSchema.V1.DeleteConversationRequest', null, global);
goog.exportSymbol('proto.CoreSchema.V1.DeleteInvoiceRequest', null, global);
goog.exportSymbol('proto.CoreSchema.V1.DeleteInvoiceResponse', null, global);
goog.exportSymbol('proto.CoreSchema.V1.Event', null, global);
goog.exportSymbol('proto.CoreSchema.V1.Feedback', null, global);
goog.exportSymbol('proto.CoreSchema.V1.FindAdvertisementsRequest', null, global);
goog.exportSymbol('proto.CoreSchema.V1.FindAdvertisementsResponse', null, global);
goog.exportSymbol('proto.CoreSchema.V1.GetAdvertisementsByIdRequest', null, global);
goog.exportSymbol('proto.CoreSchema.V1.GetConversationsByIdRequest', null, global);
goog.exportSymbol('proto.CoreSchema.V1.GetConversationsResponse', null, global);
goog.exportSymbol('proto.CoreSchema.V1.GetDealByIdRequest', null, global);
goog.exportSymbol('proto.CoreSchema.V1.GetFeesResponse', null, global);
goog.exportSymbol('proto.CoreSchema.V1.GetImageRequest', null, global);
goog.exportSymbol('proto.CoreSchema.V1.GetInputAddressResponse', null, global);
goog.exportSymbol('proto.CoreSchema.V1.GetInvoiceByIdRequest', null, global);
goog.exportSymbol('proto.CoreSchema.V1.GetInvoicePaymentsRequest', null, global);
goog.exportSymbol('proto.CoreSchema.V1.GetInvoicePaymentsResponse', null, global);
goog.exportSymbol('proto.CoreSchema.V1.GetInvoiceSecretsRequest', null, global);
goog.exportSymbol('proto.CoreSchema.V1.GetInvoiceSuitableAdvertisementResponse', null, global);
goog.exportSymbol('proto.CoreSchema.V1.GetInvoiceSuitableAdvertisementsRequest', null, global);
goog.exportSymbol('proto.CoreSchema.V1.GetInvoicesRequest', null, global);
goog.exportSymbol('proto.CoreSchema.V1.GetInvoicesResponse', null, global);
goog.exportSymbol('proto.CoreSchema.V1.GetLastAdSearchParamsResponse', null, global);
goog.exportSymbol('proto.CoreSchema.V1.GetMyBlockedUsersResponse', null, global);
goog.exportSymbol('proto.CoreSchema.V1.GetMyDealsRequest', null, global);
goog.exportSymbol('proto.CoreSchema.V1.GetMyDealsResponse', null, global);
goog.exportSymbol('proto.CoreSchema.V1.GetMyTrustedUsersResponse', null, global);
goog.exportSymbol('proto.CoreSchema.V1.GetPromiseSuitableAdvertisementsRequest', null, global);
goog.exportSymbol('proto.CoreSchema.V1.GetPromiseSuitableAdvertisementsResponse', null, global);
goog.exportSymbol('proto.CoreSchema.V1.GetTransactionByIdRequest', null, global);
goog.exportSymbol('proto.CoreSchema.V1.GetTransactionsRequest', null, global);
goog.exportSymbol('proto.CoreSchema.V1.GetTransactionsResponse', null, global);
goog.exportSymbol('proto.CoreSchema.V1.GetUserEventsResponse', null, global);
goog.exportSymbol('proto.CoreSchema.V1.GetUserFeedbacksRequest', null, global);
goog.exportSymbol('proto.CoreSchema.V1.GetUserFeedbacksResponse', null, global);
goog.exportSymbol('proto.CoreSchema.V1.GetUserInfoRequest', null, global);
goog.exportSymbol('proto.CoreSchema.V1.GetUserInfoResponse', null, global);
goog.exportSymbol('proto.CoreSchema.V1.IPayedRequest', null, global);
goog.exportSymbol('proto.CoreSchema.V1.IPayedResponse', null, global);
goog.exportSymbol('proto.CoreSchema.V1.Image', null, global);
goog.exportSymbol('proto.CoreSchema.V1.Invoice', null, global);
goog.exportSymbol('proto.CoreSchema.V1.Invoice.InvoiceStatus', null, global);
goog.exportSymbol('proto.CoreSchema.V1.Invoice.ServiceType', null, global);
goog.exportSymbol('proto.CoreSchema.V1.InvoicePayment', null, global);
goog.exportSymbol('proto.CoreSchema.V1.InvoicePayment.InvoicePaymentStatus', null, global);
goog.exportSymbol('proto.CoreSchema.V1.InvoiceSecret', null, global);
goog.exportSymbol('proto.CoreSchema.V1.InvoiceSecretsList', null, global);
goog.exportSymbol('proto.CoreSchema.V1.IsUserBlockedRequest', null, global);
goog.exportSymbol('proto.CoreSchema.V1.IsUserBlockedResponse', null, global);
goog.exportSymbol('proto.CoreSchema.V1.IsUserExistRequest', null, global);
goog.exportSymbol('proto.CoreSchema.V1.IsUserExistResponse', null, global);
goog.exportSymbol('proto.CoreSchema.V1.IsUserTrustedRequest', null, global);
goog.exportSymbol('proto.CoreSchema.V1.IsUserTrustedResponse', null, global);
goog.exportSymbol('proto.CoreSchema.V1.LNDepositRequest', null, global);
goog.exportSymbol('proto.CoreSchema.V1.LNDepositResponse', null, global);
goog.exportSymbol('proto.CoreSchema.V1.LNGetInvoicesRequest', null, global);
goog.exportSymbol('proto.CoreSchema.V1.LNGetInvoicesResponse', null, global);
goog.exportSymbol('proto.CoreSchema.V1.LNGetPaymentsRequest', null, global);
goog.exportSymbol('proto.CoreSchema.V1.LNGetPaymentsResponse', null, global);
goog.exportSymbol('proto.CoreSchema.V1.LNInvoice', null, global);
goog.exportSymbol('proto.CoreSchema.V1.LNPayment', null, global);
goog.exportSymbol('proto.CoreSchema.V1.LNPaymentStatus', null, global);
goog.exportSymbol('proto.CoreSchema.V1.LNWithdrawalRequest', null, global);
goog.exportSymbol('proto.CoreSchema.V1.LastAdSearchParams', null, global);
goog.exportSymbol('proto.CoreSchema.V1.MarkEventsAsReadRequest', null, global);
goog.exportSymbol('proto.CoreSchema.V1.ModifyAdvertisementRequest', null, global);
goog.exportSymbol('proto.CoreSchema.V1.MyProfileResponse', null, global);
goog.exportSymbol('proto.CoreSchema.V1.PayInvoiceByBestDealRequest', null, global);
goog.exportSymbol('proto.CoreSchema.V1.PayInvoiceByDealRequest', null, global);
goog.exportSymbol('proto.CoreSchema.V1.PayInvoiceByPromiseRequest', null, global);
goog.exportSymbol('proto.CoreSchema.V1.PayInvoiceByPromiseRequest.OddTypes', null, global);
goog.exportSymbol('proto.CoreSchema.V1.PayInvoiceFromBalanceRequest', null, global);
goog.exportSymbol('proto.CoreSchema.V1.PayInvoiceFromLNRequest', null, global);
goog.exportSymbol('proto.CoreSchema.V1.PromiseSellByBestDealRequest', null, global);
goog.exportSymbol('proto.CoreSchema.V1.PromiseSellByDealRequest', null, global);
goog.exportSymbol('proto.CoreSchema.V1.PromiseToBalanceRequest', null, global);
goog.exportSymbol('proto.CoreSchema.V1.RemoveFromTrustedRequest', null, global);
goog.exportSymbol('proto.CoreSchema.V1.SendFeedbackRequest', null, global);
goog.exportSymbol('proto.CoreSchema.V1.SendInvoiceMessageRequest', null, global);
goog.exportSymbol('proto.CoreSchema.V1.SendInvoicePaymentFeedbackRequest', null, global);
goog.exportSymbol('proto.CoreSchema.V1.SendInvoicePaymentMessageRequest', null, global);
goog.exportSymbol('proto.CoreSchema.V1.SendMessageRequest', null, global);
goog.exportSymbol('proto.CoreSchema.V1.SendMessageResponse', null, global);
goog.exportSymbol('proto.CoreSchema.V1.StoreImageRequest', null, global);
goog.exportSymbol('proto.CoreSchema.V1.SubscribeAdvertisementChangesResponse', null, global);
goog.exportSymbol('proto.CoreSchema.V1.SubscribePublicInvoiceRequest', null, global);
goog.exportSymbol('proto.CoreSchema.V1.SubscribePublicInvoiceResponse', null, global);
goog.exportSymbol('proto.CoreSchema.V1.TimeTableItem', null, global);
goog.exportSymbol('proto.CoreSchema.V1.Transaction', null, global);
goog.exportSymbol('proto.CoreSchema.V1.UnBlockUserRequest', null, global);
goog.exportSymbol('proto.CoreSchema.V1.UpdateInvoiceSecretRequest', null, global);
goog.exportSymbol('proto.CoreSchema.V1.UpdateMyProfileRequest', null, global);
goog.exportSymbol('proto.CoreSchema.V1.UpdatePublicInvoiceRequest', null, global);
goog.exportSymbol('proto.CoreSchema.V1.UserInfo', null, global);
goog.exportSymbol('proto.CoreSchema.V1.Variables', null, global);
goog.exportSymbol('proto.CoreSchema.V1.Webhook', null, global);

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.CoreSchema.V1.Decimal = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.CoreSchema.V1.Decimal, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.CoreSchema.V1.Decimal.displayName = 'proto.CoreSchema.V1.Decimal';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.CoreSchema.V1.Decimal.prototype.toObject = function(opt_includeInstance) {
  return proto.CoreSchema.V1.Decimal.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.CoreSchema.V1.Decimal} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.CoreSchema.V1.Decimal.toObject = function(includeInstance, msg) {
  var f, obj = {
    units: jspb.Message.getFieldWithDefault(msg, 1, 0),
    nanos: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.CoreSchema.V1.Decimal}
 */
proto.CoreSchema.V1.Decimal.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.CoreSchema.V1.Decimal;
  return proto.CoreSchema.V1.Decimal.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.CoreSchema.V1.Decimal} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.CoreSchema.V1.Decimal}
 */
proto.CoreSchema.V1.Decimal.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setUnits(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readSfixed32());
      msg.setNanos(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.CoreSchema.V1.Decimal.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.CoreSchema.V1.Decimal.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.CoreSchema.V1.Decimal} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.CoreSchema.V1.Decimal.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUnits();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getNanos();
  if (f !== 0) {
    writer.writeSfixed32(
      2,
      f
    );
  }
};


/**
 * optional int64 units = 1;
 * @return {number}
 */
proto.CoreSchema.V1.Decimal.prototype.getUnits = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.CoreSchema.V1.Decimal.prototype.setUnits = function(value) {
  jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional sfixed32 nanos = 2;
 * @return {number}
 */
proto.CoreSchema.V1.Decimal.prototype.getNanos = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.CoreSchema.V1.Decimal.prototype.setNanos = function(value) {
  jspb.Message.setProto3IntField(this, 2, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.CoreSchema.V1.BoughtOptions = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.CoreSchema.V1.BoughtOptions, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.CoreSchema.V1.BoughtOptions.displayName = 'proto.CoreSchema.V1.BoughtOptions';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.CoreSchema.V1.BoughtOptions.prototype.toObject = function(opt_includeInstance) {
  return proto.CoreSchema.V1.BoughtOptions.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.CoreSchema.V1.BoughtOptions} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.CoreSchema.V1.BoughtOptions.toObject = function(includeInstance, msg) {
  var f, obj = {
    autopricerecalcs: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.CoreSchema.V1.BoughtOptions}
 */
proto.CoreSchema.V1.BoughtOptions.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.CoreSchema.V1.BoughtOptions;
  return proto.CoreSchema.V1.BoughtOptions.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.CoreSchema.V1.BoughtOptions} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.CoreSchema.V1.BoughtOptions}
 */
proto.CoreSchema.V1.BoughtOptions.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setAutopricerecalcs(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.CoreSchema.V1.BoughtOptions.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.CoreSchema.V1.BoughtOptions.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.CoreSchema.V1.BoughtOptions} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.CoreSchema.V1.BoughtOptions.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAutopricerecalcs();
  if (f !== 0) {
    writer.writeUint32(
      1,
      f
    );
  }
};


/**
 * optional uint32 AutoPriceRecalcs = 1;
 * @return {number}
 */
proto.CoreSchema.V1.BoughtOptions.prototype.getAutopricerecalcs = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.CoreSchema.V1.BoughtOptions.prototype.setAutopricerecalcs = function(value) {
  jspb.Message.setProto3IntField(this, 1, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.CoreSchema.V1.Variables = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.CoreSchema.V1.Variables, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.CoreSchema.V1.Variables.displayName = 'proto.CoreSchema.V1.Variables';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.CoreSchema.V1.Variables.prototype.toObject = function(opt_includeInstance) {
  return proto.CoreSchema.V1.Variables.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.CoreSchema.V1.Variables} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.CoreSchema.V1.Variables.toObject = function(includeInstance, msg) {
  var f, obj = {
    variablesMap: (f = msg.getVariablesMap()) ? f.toObject(includeInstance, proto.CoreSchema.V1.Decimal.toObject) : [],
    keepalive: jspb.Message.getFieldWithDefault(msg, 2, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.CoreSchema.V1.Variables}
 */
proto.CoreSchema.V1.Variables.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.CoreSchema.V1.Variables;
  return proto.CoreSchema.V1.Variables.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.CoreSchema.V1.Variables} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.CoreSchema.V1.Variables}
 */
proto.CoreSchema.V1.Variables.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = msg.getVariablesMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readMessage, proto.CoreSchema.V1.Decimal.deserializeBinaryFromReader, "");
         });
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setKeepalive(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.CoreSchema.V1.Variables.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.CoreSchema.V1.Variables.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.CoreSchema.V1.Variables} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.CoreSchema.V1.Variables.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getVariablesMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(1, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeMessage, proto.CoreSchema.V1.Decimal.serializeBinaryToWriter);
  }
  f = message.getKeepalive();
  if (f) {
    writer.writeBool(
      2,
      f
    );
  }
};


/**
 * map<string, Decimal> Variables = 1;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,!proto.CoreSchema.V1.Decimal>}
 */
proto.CoreSchema.V1.Variables.prototype.getVariablesMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,!proto.CoreSchema.V1.Decimal>} */ (
      jspb.Message.getMapField(this, 1, opt_noLazyCreate,
      proto.CoreSchema.V1.Decimal));
};


proto.CoreSchema.V1.Variables.prototype.clearVariablesMap = function() {
  this.getVariablesMap().clear();
};


/**
 * optional bool KeepAlive = 2;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.CoreSchema.V1.Variables.prototype.getKeepalive = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 2, false));
};


/** @param {boolean} value */
proto.CoreSchema.V1.Variables.prototype.setKeepalive = function(value) {
  jspb.Message.setProto3BooleanField(this, 2, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.CoreSchema.V1.TimeTableItem = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.CoreSchema.V1.TimeTableItem, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.CoreSchema.V1.TimeTableItem.displayName = 'proto.CoreSchema.V1.TimeTableItem';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.CoreSchema.V1.TimeTableItem.prototype.toObject = function(opt_includeInstance) {
  return proto.CoreSchema.V1.TimeTableItem.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.CoreSchema.V1.TimeTableItem} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.CoreSchema.V1.TimeTableItem.toObject = function(includeInstance, msg) {
  var f, obj = {
    day: jspb.Message.getFieldWithDefault(msg, 1, ""),
    start: jspb.Message.getFieldWithDefault(msg, 2, 0),
    end: jspb.Message.getFieldWithDefault(msg, 3, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.CoreSchema.V1.TimeTableItem}
 */
proto.CoreSchema.V1.TimeTableItem.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.CoreSchema.V1.TimeTableItem;
  return proto.CoreSchema.V1.TimeTableItem.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.CoreSchema.V1.TimeTableItem} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.CoreSchema.V1.TimeTableItem}
 */
proto.CoreSchema.V1.TimeTableItem.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setDay(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setStart(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setEnd(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.CoreSchema.V1.TimeTableItem.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.CoreSchema.V1.TimeTableItem.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.CoreSchema.V1.TimeTableItem} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.CoreSchema.V1.TimeTableItem.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDay();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getStart();
  if (f !== 0) {
    writer.writeUint32(
      2,
      f
    );
  }
  f = message.getEnd();
  if (f !== 0) {
    writer.writeUint32(
      3,
      f
    );
  }
};


/**
 * optional string day = 1;
 * @return {string}
 */
proto.CoreSchema.V1.TimeTableItem.prototype.getDay = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.CoreSchema.V1.TimeTableItem.prototype.setDay = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional uint32 start = 2;
 * @return {number}
 */
proto.CoreSchema.V1.TimeTableItem.prototype.getStart = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.CoreSchema.V1.TimeTableItem.prototype.setStart = function(value) {
  jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional uint32 end = 3;
 * @return {number}
 */
proto.CoreSchema.V1.TimeTableItem.prototype.getEnd = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/** @param {number} value */
proto.CoreSchema.V1.TimeTableItem.prototype.setEnd = function(value) {
  jspb.Message.setProto3IntField(this, 3, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.CoreSchema.V1.AdvertisementData = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.CoreSchema.V1.AdvertisementData.repeatedFields_, proto.CoreSchema.V1.AdvertisementData.oneofGroups_);
};
goog.inherits(proto.CoreSchema.V1.AdvertisementData, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.CoreSchema.V1.AdvertisementData.displayName = 'proto.CoreSchema.V1.AdvertisementData';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.CoreSchema.V1.AdvertisementData.repeatedFields_ = [15];

/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.CoreSchema.V1.AdvertisementData.oneofGroups_ = [[21,22]];

/**
 * @enum {number}
 */
proto.CoreSchema.V1.AdvertisementData.AutopriceCase = {
  AUTOPRICE_NOT_SET: 0,
  AUTOPRICEDELAYISNULL: 21,
  AUTOPRICEDELAY: 22
};

/**
 * @return {proto.CoreSchema.V1.AdvertisementData.AutopriceCase}
 */
proto.CoreSchema.V1.AdvertisementData.prototype.getAutopriceCase = function() {
  return /** @type {proto.CoreSchema.V1.AdvertisementData.AutopriceCase} */(jspb.Message.computeOneofCase(this, proto.CoreSchema.V1.AdvertisementData.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.CoreSchema.V1.AdvertisementData.prototype.toObject = function(opt_includeInstance) {
  return proto.CoreSchema.V1.AdvertisementData.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.CoreSchema.V1.AdvertisementData} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.CoreSchema.V1.AdvertisementData.toObject = function(includeInstance, msg) {
  var f, obj = {
    equation: jspb.Message.getFieldWithDefault(msg, 2, ""),
    minamount: (f = msg.getMinamount()) && proto.CoreSchema.V1.Decimal.toObject(includeInstance, f),
    maxamount: (f = msg.getMaxamount()) && proto.CoreSchema.V1.Decimal.toObject(includeInstance, f),
    message: jspb.Message.getFieldWithDefault(msg, 6, ""),
    createdat: (f = msg.getCreatedat()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    country: jspb.Message.getFieldWithDefault(msg, 8, ""),
    paymenttype: jspb.Message.getFieldWithDefault(msg, 9, ""),
    fiatcurrency: jspb.Message.getFieldWithDefault(msg, 10, ""),
    isbuy: jspb.Message.getFieldWithDefault(msg, 12, false),
    isenabled: jspb.Message.getFieldWithDefault(msg, 13, false),
    timetableList: jspb.Message.toObjectList(msg.getTimetableList(),
    proto.CoreSchema.V1.TimeTableItem.toObject, includeInstance),
    monitorliquidity: jspb.Message.getFieldWithDefault(msg, 16, false),
    notanonymous: jspb.Message.getFieldWithDefault(msg, 17, false),
    trusted: jspb.Message.getFieldWithDefault(msg, 18, false),
    title: jspb.Message.getFieldWithDefault(msg, 19, ""),
    window: jspb.Message.getFieldWithDefault(msg, 20, 0),
    autopricedelayisnull: jspb.Message.getFieldWithDefault(msg, 21, false),
    autopricedelay: jspb.Message.getFieldWithDefault(msg, 22, 0),
    lnfunding: jspb.Message.getFieldWithDefault(msg, 23, false),
    lndisablebalance: jspb.Message.getFieldWithDefault(msg, 24, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.CoreSchema.V1.AdvertisementData}
 */
proto.CoreSchema.V1.AdvertisementData.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.CoreSchema.V1.AdvertisementData;
  return proto.CoreSchema.V1.AdvertisementData.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.CoreSchema.V1.AdvertisementData} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.CoreSchema.V1.AdvertisementData}
 */
proto.CoreSchema.V1.AdvertisementData.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setEquation(value);
      break;
    case 3:
      var value = new proto.CoreSchema.V1.Decimal;
      reader.readMessage(value,proto.CoreSchema.V1.Decimal.deserializeBinaryFromReader);
      msg.setMinamount(value);
      break;
    case 4:
      var value = new proto.CoreSchema.V1.Decimal;
      reader.readMessage(value,proto.CoreSchema.V1.Decimal.deserializeBinaryFromReader);
      msg.setMaxamount(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setMessage(value);
      break;
    case 7:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setCreatedat(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setCountry(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setPaymenttype(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.setFiatcurrency(value);
      break;
    case 12:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsbuy(value);
      break;
    case 13:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsenabled(value);
      break;
    case 15:
      var value = new proto.CoreSchema.V1.TimeTableItem;
      reader.readMessage(value,proto.CoreSchema.V1.TimeTableItem.deserializeBinaryFromReader);
      msg.addTimetable(value);
      break;
    case 16:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setMonitorliquidity(value);
      break;
    case 17:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setNotanonymous(value);
      break;
    case 18:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setTrusted(value);
      break;
    case 19:
      var value = /** @type {string} */ (reader.readString());
      msg.setTitle(value);
      break;
    case 20:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setWindow(value);
      break;
    case 21:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setAutopricedelayisnull(value);
      break;
    case 22:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setAutopricedelay(value);
      break;
    case 23:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setLnfunding(value);
      break;
    case 24:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setLndisablebalance(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.CoreSchema.V1.AdvertisementData.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.CoreSchema.V1.AdvertisementData.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.CoreSchema.V1.AdvertisementData} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.CoreSchema.V1.AdvertisementData.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEquation();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getMinamount();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.CoreSchema.V1.Decimal.serializeBinaryToWriter
    );
  }
  f = message.getMaxamount();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.CoreSchema.V1.Decimal.serializeBinaryToWriter
    );
  }
  f = message.getMessage();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getCreatedat();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getCountry();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getPaymenttype();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
  f = message.getFiatcurrency();
  if (f.length > 0) {
    writer.writeString(
      10,
      f
    );
  }
  f = message.getIsbuy();
  if (f) {
    writer.writeBool(
      12,
      f
    );
  }
  f = message.getIsenabled();
  if (f) {
    writer.writeBool(
      13,
      f
    );
  }
  f = message.getTimetableList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      15,
      f,
      proto.CoreSchema.V1.TimeTableItem.serializeBinaryToWriter
    );
  }
  f = message.getMonitorliquidity();
  if (f) {
    writer.writeBool(
      16,
      f
    );
  }
  f = message.getNotanonymous();
  if (f) {
    writer.writeBool(
      17,
      f
    );
  }
  f = message.getTrusted();
  if (f) {
    writer.writeBool(
      18,
      f
    );
  }
  f = message.getTitle();
  if (f.length > 0) {
    writer.writeString(
      19,
      f
    );
  }
  f = message.getWindow();
  if (f !== 0) {
    writer.writeUint32(
      20,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 21));
  if (f != null) {
    writer.writeBool(
      21,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 22));
  if (f != null) {
    writer.writeUint32(
      22,
      f
    );
  }
  f = message.getLnfunding();
  if (f) {
    writer.writeBool(
      23,
      f
    );
  }
  f = message.getLndisablebalance();
  if (f) {
    writer.writeBool(
      24,
      f
    );
  }
};


/**
 * optional string Equation = 2;
 * @return {string}
 */
proto.CoreSchema.V1.AdvertisementData.prototype.getEquation = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.CoreSchema.V1.AdvertisementData.prototype.setEquation = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional Decimal MinAmount = 3;
 * @return {?proto.CoreSchema.V1.Decimal}
 */
proto.CoreSchema.V1.AdvertisementData.prototype.getMinamount = function() {
  return /** @type{?proto.CoreSchema.V1.Decimal} */ (
    jspb.Message.getWrapperField(this, proto.CoreSchema.V1.Decimal, 3));
};


/** @param {?proto.CoreSchema.V1.Decimal|undefined} value */
proto.CoreSchema.V1.AdvertisementData.prototype.setMinamount = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


proto.CoreSchema.V1.AdvertisementData.prototype.clearMinamount = function() {
  this.setMinamount(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.CoreSchema.V1.AdvertisementData.prototype.hasMinamount = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional Decimal MaxAmount = 4;
 * @return {?proto.CoreSchema.V1.Decimal}
 */
proto.CoreSchema.V1.AdvertisementData.prototype.getMaxamount = function() {
  return /** @type{?proto.CoreSchema.V1.Decimal} */ (
    jspb.Message.getWrapperField(this, proto.CoreSchema.V1.Decimal, 4));
};


/** @param {?proto.CoreSchema.V1.Decimal|undefined} value */
proto.CoreSchema.V1.AdvertisementData.prototype.setMaxamount = function(value) {
  jspb.Message.setWrapperField(this, 4, value);
};


proto.CoreSchema.V1.AdvertisementData.prototype.clearMaxamount = function() {
  this.setMaxamount(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.CoreSchema.V1.AdvertisementData.prototype.hasMaxamount = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional string Message = 6;
 * @return {string}
 */
proto.CoreSchema.V1.AdvertisementData.prototype.getMessage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/** @param {string} value */
proto.CoreSchema.V1.AdvertisementData.prototype.setMessage = function(value) {
  jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional google.protobuf.Timestamp CreatedAt = 7;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.CoreSchema.V1.AdvertisementData.prototype.getCreatedat = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 7));
};


/** @param {?proto.google.protobuf.Timestamp|undefined} value */
proto.CoreSchema.V1.AdvertisementData.prototype.setCreatedat = function(value) {
  jspb.Message.setWrapperField(this, 7, value);
};


proto.CoreSchema.V1.AdvertisementData.prototype.clearCreatedat = function() {
  this.setCreatedat(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.CoreSchema.V1.AdvertisementData.prototype.hasCreatedat = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional string Country = 8;
 * @return {string}
 */
proto.CoreSchema.V1.AdvertisementData.prototype.getCountry = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/** @param {string} value */
proto.CoreSchema.V1.AdvertisementData.prototype.setCountry = function(value) {
  jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * optional string PaymentType = 9;
 * @return {string}
 */
proto.CoreSchema.V1.AdvertisementData.prototype.getPaymenttype = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/** @param {string} value */
proto.CoreSchema.V1.AdvertisementData.prototype.setPaymenttype = function(value) {
  jspb.Message.setProto3StringField(this, 9, value);
};


/**
 * optional string FiatCurrency = 10;
 * @return {string}
 */
proto.CoreSchema.V1.AdvertisementData.prototype.getFiatcurrency = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/** @param {string} value */
proto.CoreSchema.V1.AdvertisementData.prototype.setFiatcurrency = function(value) {
  jspb.Message.setProto3StringField(this, 10, value);
};


/**
 * optional bool IsBuy = 12;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.CoreSchema.V1.AdvertisementData.prototype.getIsbuy = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 12, false));
};


/** @param {boolean} value */
proto.CoreSchema.V1.AdvertisementData.prototype.setIsbuy = function(value) {
  jspb.Message.setProto3BooleanField(this, 12, value);
};


/**
 * optional bool IsEnabled = 13;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.CoreSchema.V1.AdvertisementData.prototype.getIsenabled = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 13, false));
};


/** @param {boolean} value */
proto.CoreSchema.V1.AdvertisementData.prototype.setIsenabled = function(value) {
  jspb.Message.setProto3BooleanField(this, 13, value);
};


/**
 * repeated TimeTableItem TimeTable = 15;
 * @return {!Array<!proto.CoreSchema.V1.TimeTableItem>}
 */
proto.CoreSchema.V1.AdvertisementData.prototype.getTimetableList = function() {
  return /** @type{!Array<!proto.CoreSchema.V1.TimeTableItem>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.CoreSchema.V1.TimeTableItem, 15));
};


/** @param {!Array<!proto.CoreSchema.V1.TimeTableItem>} value */
proto.CoreSchema.V1.AdvertisementData.prototype.setTimetableList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 15, value);
};


/**
 * @param {!proto.CoreSchema.V1.TimeTableItem=} opt_value
 * @param {number=} opt_index
 * @return {!proto.CoreSchema.V1.TimeTableItem}
 */
proto.CoreSchema.V1.AdvertisementData.prototype.addTimetable = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 15, opt_value, proto.CoreSchema.V1.TimeTableItem, opt_index);
};


proto.CoreSchema.V1.AdvertisementData.prototype.clearTimetableList = function() {
  this.setTimetableList([]);
};


/**
 * optional bool MonitorLiquidity = 16;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.CoreSchema.V1.AdvertisementData.prototype.getMonitorliquidity = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 16, false));
};


/** @param {boolean} value */
proto.CoreSchema.V1.AdvertisementData.prototype.setMonitorliquidity = function(value) {
  jspb.Message.setProto3BooleanField(this, 16, value);
};


/**
 * optional bool NotAnonymous = 17;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.CoreSchema.V1.AdvertisementData.prototype.getNotanonymous = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 17, false));
};


/** @param {boolean} value */
proto.CoreSchema.V1.AdvertisementData.prototype.setNotanonymous = function(value) {
  jspb.Message.setProto3BooleanField(this, 17, value);
};


/**
 * optional bool Trusted = 18;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.CoreSchema.V1.AdvertisementData.prototype.getTrusted = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 18, false));
};


/** @param {boolean} value */
proto.CoreSchema.V1.AdvertisementData.prototype.setTrusted = function(value) {
  jspb.Message.setProto3BooleanField(this, 18, value);
};


/**
 * optional string Title = 19;
 * @return {string}
 */
proto.CoreSchema.V1.AdvertisementData.prototype.getTitle = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 19, ""));
};


/** @param {string} value */
proto.CoreSchema.V1.AdvertisementData.prototype.setTitle = function(value) {
  jspb.Message.setProto3StringField(this, 19, value);
};


/**
 * optional uint32 window = 20;
 * @return {number}
 */
proto.CoreSchema.V1.AdvertisementData.prototype.getWindow = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 20, 0));
};


/** @param {number} value */
proto.CoreSchema.V1.AdvertisementData.prototype.setWindow = function(value) {
  jspb.Message.setProto3IntField(this, 20, value);
};


/**
 * optional bool AutoPriceDelayIsNull = 21;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.CoreSchema.V1.AdvertisementData.prototype.getAutopricedelayisnull = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 21, false));
};


/** @param {boolean} value */
proto.CoreSchema.V1.AdvertisementData.prototype.setAutopricedelayisnull = function(value) {
  jspb.Message.setOneofField(this, 21, proto.CoreSchema.V1.AdvertisementData.oneofGroups_[0], value);
};


proto.CoreSchema.V1.AdvertisementData.prototype.clearAutopricedelayisnull = function() {
  jspb.Message.setOneofField(this, 21, proto.CoreSchema.V1.AdvertisementData.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.CoreSchema.V1.AdvertisementData.prototype.hasAutopricedelayisnull = function() {
  return jspb.Message.getField(this, 21) != null;
};


/**
 * optional uint32 AutoPriceDelay = 22;
 * @return {number}
 */
proto.CoreSchema.V1.AdvertisementData.prototype.getAutopricedelay = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 22, 0));
};


/** @param {number} value */
proto.CoreSchema.V1.AdvertisementData.prototype.setAutopricedelay = function(value) {
  jspb.Message.setOneofField(this, 22, proto.CoreSchema.V1.AdvertisementData.oneofGroups_[0], value);
};


proto.CoreSchema.V1.AdvertisementData.prototype.clearAutopricedelay = function() {
  jspb.Message.setOneofField(this, 22, proto.CoreSchema.V1.AdvertisementData.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.CoreSchema.V1.AdvertisementData.prototype.hasAutopricedelay = function() {
  return jspb.Message.getField(this, 22) != null;
};


/**
 * optional bool LnFunding = 23;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.CoreSchema.V1.AdvertisementData.prototype.getLnfunding = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 23, false));
};


/** @param {boolean} value */
proto.CoreSchema.V1.AdvertisementData.prototype.setLnfunding = function(value) {
  jspb.Message.setProto3BooleanField(this, 23, value);
};


/**
 * optional bool LnDisableBalance = 24;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.CoreSchema.V1.AdvertisementData.prototype.getLndisablebalance = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 24, false));
};


/** @param {boolean} value */
proto.CoreSchema.V1.AdvertisementData.prototype.setLndisablebalance = function(value) {
  jspb.Message.setProto3BooleanField(this, 24, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.CoreSchema.V1.ModifyAdvertisementRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.CoreSchema.V1.ModifyAdvertisementRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.CoreSchema.V1.ModifyAdvertisementRequest.displayName = 'proto.CoreSchema.V1.ModifyAdvertisementRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.CoreSchema.V1.ModifyAdvertisementRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.CoreSchema.V1.ModifyAdvertisementRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.CoreSchema.V1.ModifyAdvertisementRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.CoreSchema.V1.ModifyAdvertisementRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    advertisementid: jspb.Message.getFieldWithDefault(msg, 1, 0),
    data: (f = msg.getData()) && proto.CoreSchema.V1.AdvertisementData.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.CoreSchema.V1.ModifyAdvertisementRequest}
 */
proto.CoreSchema.V1.ModifyAdvertisementRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.CoreSchema.V1.ModifyAdvertisementRequest;
  return proto.CoreSchema.V1.ModifyAdvertisementRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.CoreSchema.V1.ModifyAdvertisementRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.CoreSchema.V1.ModifyAdvertisementRequest}
 */
proto.CoreSchema.V1.ModifyAdvertisementRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setAdvertisementid(value);
      break;
    case 2:
      var value = new proto.CoreSchema.V1.AdvertisementData;
      reader.readMessage(value,proto.CoreSchema.V1.AdvertisementData.deserializeBinaryFromReader);
      msg.setData(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.CoreSchema.V1.ModifyAdvertisementRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.CoreSchema.V1.ModifyAdvertisementRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.CoreSchema.V1.ModifyAdvertisementRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.CoreSchema.V1.ModifyAdvertisementRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAdvertisementid();
  if (f !== 0) {
    writer.writeUint64(
      1,
      f
    );
  }
  f = message.getData();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.CoreSchema.V1.AdvertisementData.serializeBinaryToWriter
    );
  }
};


/**
 * optional uint64 AdvertisementId = 1;
 * @return {number}
 */
proto.CoreSchema.V1.ModifyAdvertisementRequest.prototype.getAdvertisementid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.CoreSchema.V1.ModifyAdvertisementRequest.prototype.setAdvertisementid = function(value) {
  jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional AdvertisementData Data = 2;
 * @return {?proto.CoreSchema.V1.AdvertisementData}
 */
proto.CoreSchema.V1.ModifyAdvertisementRequest.prototype.getData = function() {
  return /** @type{?proto.CoreSchema.V1.AdvertisementData} */ (
    jspb.Message.getWrapperField(this, proto.CoreSchema.V1.AdvertisementData, 2));
};


/** @param {?proto.CoreSchema.V1.AdvertisementData|undefined} value */
proto.CoreSchema.V1.ModifyAdvertisementRequest.prototype.setData = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.CoreSchema.V1.ModifyAdvertisementRequest.prototype.clearData = function() {
  this.setData(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.CoreSchema.V1.ModifyAdvertisementRequest.prototype.hasData = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.CoreSchema.V1.Advertisement = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.CoreSchema.V1.Advertisement.repeatedFields_, proto.CoreSchema.V1.Advertisement.oneofGroups_);
};
goog.inherits(proto.CoreSchema.V1.Advertisement, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.CoreSchema.V1.Advertisement.displayName = 'proto.CoreSchema.V1.Advertisement';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.CoreSchema.V1.Advertisement.repeatedFields_ = [15];

/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.CoreSchema.V1.Advertisement.oneofGroups_ = [[23,24]];

/**
 * @enum {number}
 */
proto.CoreSchema.V1.Advertisement.AutopriceCase = {
  AUTOPRICE_NOT_SET: 0,
  AUTOPRICEDELAYISNULL: 23,
  AUTOPRICEDELAY: 24
};

/**
 * @return {proto.CoreSchema.V1.Advertisement.AutopriceCase}
 */
proto.CoreSchema.V1.Advertisement.prototype.getAutopriceCase = function() {
  return /** @type {proto.CoreSchema.V1.Advertisement.AutopriceCase} */(jspb.Message.computeOneofCase(this, proto.CoreSchema.V1.Advertisement.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.CoreSchema.V1.Advertisement.prototype.toObject = function(opt_includeInstance) {
  return proto.CoreSchema.V1.Advertisement.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.CoreSchema.V1.Advertisement} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.CoreSchema.V1.Advertisement.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0),
    equation: jspb.Message.getFieldWithDefault(msg, 2, ""),
    minamount: (f = msg.getMinamount()) && proto.CoreSchema.V1.Decimal.toObject(includeInstance, f),
    maxamountrequested: (f = msg.getMaxamountrequested()) && proto.CoreSchema.V1.Decimal.toObject(includeInstance, f),
    maxamountcalculated: (f = msg.getMaxamountcalculated()) && proto.CoreSchema.V1.Decimal.toObject(includeInstance, f),
    message: jspb.Message.getFieldWithDefault(msg, 6, ""),
    createdat: (f = msg.getCreatedat()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    country: jspb.Message.getFieldWithDefault(msg, 8, ""),
    paymenttype: jspb.Message.getFieldWithDefault(msg, 9, ""),
    fiatcurrency: jspb.Message.getFieldWithDefault(msg, 10, ""),
    isbuy: jspb.Message.getFieldWithDefault(msg, 12, false),
    isenabled: jspb.Message.getFieldWithDefault(msg, 13, false),
    owner: (f = msg.getOwner()) && proto.CoreSchema.V1.UserInfo.toObject(includeInstance, f),
    timetableList: jspb.Message.toObjectList(msg.getTimetableList(),
    proto.CoreSchema.V1.TimeTableItem.toObject, includeInstance),
    monitorliquidity: jspb.Message.getFieldWithDefault(msg, 16, false),
    notanonymous: jspb.Message.getFieldWithDefault(msg, 17, false),
    trusted: jspb.Message.getFieldWithDefault(msg, 18, false),
    title: jspb.Message.getFieldWithDefault(msg, 19, ""),
    window: jspb.Message.getFieldWithDefault(msg, 20, 0),
    price: (f = msg.getPrice()) && proto.CoreSchema.V1.Decimal.toObject(includeInstance, f),
    currentstatus: jspb.Message.getFieldWithDefault(msg, 22, 0),
    autopricedelayisnull: jspb.Message.getFieldWithDefault(msg, 23, false),
    autopricedelay: jspb.Message.getFieldWithDefault(msg, 24, 0),
    lnenabled: jspb.Message.getFieldWithDefault(msg, 25, false),
    lndisablebalance: jspb.Message.getFieldWithDefault(msg, 26, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.CoreSchema.V1.Advertisement}
 */
proto.CoreSchema.V1.Advertisement.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.CoreSchema.V1.Advertisement;
  return proto.CoreSchema.V1.Advertisement.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.CoreSchema.V1.Advertisement} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.CoreSchema.V1.Advertisement}
 */
proto.CoreSchema.V1.Advertisement.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setEquation(value);
      break;
    case 3:
      var value = new proto.CoreSchema.V1.Decimal;
      reader.readMessage(value,proto.CoreSchema.V1.Decimal.deserializeBinaryFromReader);
      msg.setMinamount(value);
      break;
    case 4:
      var value = new proto.CoreSchema.V1.Decimal;
      reader.readMessage(value,proto.CoreSchema.V1.Decimal.deserializeBinaryFromReader);
      msg.setMaxamountrequested(value);
      break;
    case 5:
      var value = new proto.CoreSchema.V1.Decimal;
      reader.readMessage(value,proto.CoreSchema.V1.Decimal.deserializeBinaryFromReader);
      msg.setMaxamountcalculated(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setMessage(value);
      break;
    case 7:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setCreatedat(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setCountry(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setPaymenttype(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.setFiatcurrency(value);
      break;
    case 12:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsbuy(value);
      break;
    case 13:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsenabled(value);
      break;
    case 14:
      var value = new proto.CoreSchema.V1.UserInfo;
      reader.readMessage(value,proto.CoreSchema.V1.UserInfo.deserializeBinaryFromReader);
      msg.setOwner(value);
      break;
    case 15:
      var value = new proto.CoreSchema.V1.TimeTableItem;
      reader.readMessage(value,proto.CoreSchema.V1.TimeTableItem.deserializeBinaryFromReader);
      msg.addTimetable(value);
      break;
    case 16:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setMonitorliquidity(value);
      break;
    case 17:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setNotanonymous(value);
      break;
    case 18:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setTrusted(value);
      break;
    case 19:
      var value = /** @type {string} */ (reader.readString());
      msg.setTitle(value);
      break;
    case 20:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setWindow(value);
      break;
    case 21:
      var value = new proto.CoreSchema.V1.Decimal;
      reader.readMessage(value,proto.CoreSchema.V1.Decimal.deserializeBinaryFromReader);
      msg.setPrice(value);
      break;
    case 22:
      var value = /** @type {!proto.CoreSchema.V1.AdCurrentStatus} */ (reader.readEnum());
      msg.setCurrentstatus(value);
      break;
    case 23:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setAutopricedelayisnull(value);
      break;
    case 24:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setAutopricedelay(value);
      break;
    case 25:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setLnenabled(value);
      break;
    case 26:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setLndisablebalance(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.CoreSchema.V1.Advertisement.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.CoreSchema.V1.Advertisement.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.CoreSchema.V1.Advertisement} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.CoreSchema.V1.Advertisement.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeUint64(
      1,
      f
    );
  }
  f = message.getEquation();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getMinamount();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.CoreSchema.V1.Decimal.serializeBinaryToWriter
    );
  }
  f = message.getMaxamountrequested();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.CoreSchema.V1.Decimal.serializeBinaryToWriter
    );
  }
  f = message.getMaxamountcalculated();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.CoreSchema.V1.Decimal.serializeBinaryToWriter
    );
  }
  f = message.getMessage();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getCreatedat();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getCountry();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getPaymenttype();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
  f = message.getFiatcurrency();
  if (f.length > 0) {
    writer.writeString(
      10,
      f
    );
  }
  f = message.getIsbuy();
  if (f) {
    writer.writeBool(
      12,
      f
    );
  }
  f = message.getIsenabled();
  if (f) {
    writer.writeBool(
      13,
      f
    );
  }
  f = message.getOwner();
  if (f != null) {
    writer.writeMessage(
      14,
      f,
      proto.CoreSchema.V1.UserInfo.serializeBinaryToWriter
    );
  }
  f = message.getTimetableList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      15,
      f,
      proto.CoreSchema.V1.TimeTableItem.serializeBinaryToWriter
    );
  }
  f = message.getMonitorliquidity();
  if (f) {
    writer.writeBool(
      16,
      f
    );
  }
  f = message.getNotanonymous();
  if (f) {
    writer.writeBool(
      17,
      f
    );
  }
  f = message.getTrusted();
  if (f) {
    writer.writeBool(
      18,
      f
    );
  }
  f = message.getTitle();
  if (f.length > 0) {
    writer.writeString(
      19,
      f
    );
  }
  f = message.getWindow();
  if (f !== 0) {
    writer.writeUint32(
      20,
      f
    );
  }
  f = message.getPrice();
  if (f != null) {
    writer.writeMessage(
      21,
      f,
      proto.CoreSchema.V1.Decimal.serializeBinaryToWriter
    );
  }
  f = message.getCurrentstatus();
  if (f !== 0.0) {
    writer.writeEnum(
      22,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 23));
  if (f != null) {
    writer.writeBool(
      23,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 24));
  if (f != null) {
    writer.writeUint32(
      24,
      f
    );
  }
  f = message.getLnenabled();
  if (f) {
    writer.writeBool(
      25,
      f
    );
  }
  f = message.getLndisablebalance();
  if (f) {
    writer.writeBool(
      26,
      f
    );
  }
};


/**
 * optional uint64 Id = 1;
 * @return {number}
 */
proto.CoreSchema.V1.Advertisement.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.CoreSchema.V1.Advertisement.prototype.setId = function(value) {
  jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string Equation = 2;
 * @return {string}
 */
proto.CoreSchema.V1.Advertisement.prototype.getEquation = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.CoreSchema.V1.Advertisement.prototype.setEquation = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional Decimal MinAmount = 3;
 * @return {?proto.CoreSchema.V1.Decimal}
 */
proto.CoreSchema.V1.Advertisement.prototype.getMinamount = function() {
  return /** @type{?proto.CoreSchema.V1.Decimal} */ (
    jspb.Message.getWrapperField(this, proto.CoreSchema.V1.Decimal, 3));
};


/** @param {?proto.CoreSchema.V1.Decimal|undefined} value */
proto.CoreSchema.V1.Advertisement.prototype.setMinamount = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


proto.CoreSchema.V1.Advertisement.prototype.clearMinamount = function() {
  this.setMinamount(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.CoreSchema.V1.Advertisement.prototype.hasMinamount = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional Decimal MaxAmountRequested = 4;
 * @return {?proto.CoreSchema.V1.Decimal}
 */
proto.CoreSchema.V1.Advertisement.prototype.getMaxamountrequested = function() {
  return /** @type{?proto.CoreSchema.V1.Decimal} */ (
    jspb.Message.getWrapperField(this, proto.CoreSchema.V1.Decimal, 4));
};


/** @param {?proto.CoreSchema.V1.Decimal|undefined} value */
proto.CoreSchema.V1.Advertisement.prototype.setMaxamountrequested = function(value) {
  jspb.Message.setWrapperField(this, 4, value);
};


proto.CoreSchema.V1.Advertisement.prototype.clearMaxamountrequested = function() {
  this.setMaxamountrequested(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.CoreSchema.V1.Advertisement.prototype.hasMaxamountrequested = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional Decimal MaxAmountCalculated = 5;
 * @return {?proto.CoreSchema.V1.Decimal}
 */
proto.CoreSchema.V1.Advertisement.prototype.getMaxamountcalculated = function() {
  return /** @type{?proto.CoreSchema.V1.Decimal} */ (
    jspb.Message.getWrapperField(this, proto.CoreSchema.V1.Decimal, 5));
};


/** @param {?proto.CoreSchema.V1.Decimal|undefined} value */
proto.CoreSchema.V1.Advertisement.prototype.setMaxamountcalculated = function(value) {
  jspb.Message.setWrapperField(this, 5, value);
};


proto.CoreSchema.V1.Advertisement.prototype.clearMaxamountcalculated = function() {
  this.setMaxamountcalculated(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.CoreSchema.V1.Advertisement.prototype.hasMaxamountcalculated = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional string Message = 6;
 * @return {string}
 */
proto.CoreSchema.V1.Advertisement.prototype.getMessage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/** @param {string} value */
proto.CoreSchema.V1.Advertisement.prototype.setMessage = function(value) {
  jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional google.protobuf.Timestamp CreatedAt = 7;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.CoreSchema.V1.Advertisement.prototype.getCreatedat = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 7));
};


/** @param {?proto.google.protobuf.Timestamp|undefined} value */
proto.CoreSchema.V1.Advertisement.prototype.setCreatedat = function(value) {
  jspb.Message.setWrapperField(this, 7, value);
};


proto.CoreSchema.V1.Advertisement.prototype.clearCreatedat = function() {
  this.setCreatedat(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.CoreSchema.V1.Advertisement.prototype.hasCreatedat = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional string Country = 8;
 * @return {string}
 */
proto.CoreSchema.V1.Advertisement.prototype.getCountry = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/** @param {string} value */
proto.CoreSchema.V1.Advertisement.prototype.setCountry = function(value) {
  jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * optional string PaymentType = 9;
 * @return {string}
 */
proto.CoreSchema.V1.Advertisement.prototype.getPaymenttype = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/** @param {string} value */
proto.CoreSchema.V1.Advertisement.prototype.setPaymenttype = function(value) {
  jspb.Message.setProto3StringField(this, 9, value);
};


/**
 * optional string FiatCurrency = 10;
 * @return {string}
 */
proto.CoreSchema.V1.Advertisement.prototype.getFiatcurrency = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/** @param {string} value */
proto.CoreSchema.V1.Advertisement.prototype.setFiatcurrency = function(value) {
  jspb.Message.setProto3StringField(this, 10, value);
};


/**
 * optional bool IsBuy = 12;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.CoreSchema.V1.Advertisement.prototype.getIsbuy = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 12, false));
};


/** @param {boolean} value */
proto.CoreSchema.V1.Advertisement.prototype.setIsbuy = function(value) {
  jspb.Message.setProto3BooleanField(this, 12, value);
};


/**
 * optional bool IsEnabled = 13;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.CoreSchema.V1.Advertisement.prototype.getIsenabled = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 13, false));
};


/** @param {boolean} value */
proto.CoreSchema.V1.Advertisement.prototype.setIsenabled = function(value) {
  jspb.Message.setProto3BooleanField(this, 13, value);
};


/**
 * optional UserInfo Owner = 14;
 * @return {?proto.CoreSchema.V1.UserInfo}
 */
proto.CoreSchema.V1.Advertisement.prototype.getOwner = function() {
  return /** @type{?proto.CoreSchema.V1.UserInfo} */ (
    jspb.Message.getWrapperField(this, proto.CoreSchema.V1.UserInfo, 14));
};


/** @param {?proto.CoreSchema.V1.UserInfo|undefined} value */
proto.CoreSchema.V1.Advertisement.prototype.setOwner = function(value) {
  jspb.Message.setWrapperField(this, 14, value);
};


proto.CoreSchema.V1.Advertisement.prototype.clearOwner = function() {
  this.setOwner(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.CoreSchema.V1.Advertisement.prototype.hasOwner = function() {
  return jspb.Message.getField(this, 14) != null;
};


/**
 * repeated TimeTableItem TimeTable = 15;
 * @return {!Array<!proto.CoreSchema.V1.TimeTableItem>}
 */
proto.CoreSchema.V1.Advertisement.prototype.getTimetableList = function() {
  return /** @type{!Array<!proto.CoreSchema.V1.TimeTableItem>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.CoreSchema.V1.TimeTableItem, 15));
};


/** @param {!Array<!proto.CoreSchema.V1.TimeTableItem>} value */
proto.CoreSchema.V1.Advertisement.prototype.setTimetableList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 15, value);
};


/**
 * @param {!proto.CoreSchema.V1.TimeTableItem=} opt_value
 * @param {number=} opt_index
 * @return {!proto.CoreSchema.V1.TimeTableItem}
 */
proto.CoreSchema.V1.Advertisement.prototype.addTimetable = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 15, opt_value, proto.CoreSchema.V1.TimeTableItem, opt_index);
};


proto.CoreSchema.V1.Advertisement.prototype.clearTimetableList = function() {
  this.setTimetableList([]);
};


/**
 * optional bool MonitorLiquidity = 16;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.CoreSchema.V1.Advertisement.prototype.getMonitorliquidity = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 16, false));
};


/** @param {boolean} value */
proto.CoreSchema.V1.Advertisement.prototype.setMonitorliquidity = function(value) {
  jspb.Message.setProto3BooleanField(this, 16, value);
};


/**
 * optional bool NotAnonymous = 17;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.CoreSchema.V1.Advertisement.prototype.getNotanonymous = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 17, false));
};


/** @param {boolean} value */
proto.CoreSchema.V1.Advertisement.prototype.setNotanonymous = function(value) {
  jspb.Message.setProto3BooleanField(this, 17, value);
};


/**
 * optional bool Trusted = 18;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.CoreSchema.V1.Advertisement.prototype.getTrusted = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 18, false));
};


/** @param {boolean} value */
proto.CoreSchema.V1.Advertisement.prototype.setTrusted = function(value) {
  jspb.Message.setProto3BooleanField(this, 18, value);
};


/**
 * optional string Title = 19;
 * @return {string}
 */
proto.CoreSchema.V1.Advertisement.prototype.getTitle = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 19, ""));
};


/** @param {string} value */
proto.CoreSchema.V1.Advertisement.prototype.setTitle = function(value) {
  jspb.Message.setProto3StringField(this, 19, value);
};


/**
 * optional uint32 window = 20;
 * @return {number}
 */
proto.CoreSchema.V1.Advertisement.prototype.getWindow = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 20, 0));
};


/** @param {number} value */
proto.CoreSchema.V1.Advertisement.prototype.setWindow = function(value) {
  jspb.Message.setProto3IntField(this, 20, value);
};


/**
 * optional Decimal Price = 21;
 * @return {?proto.CoreSchema.V1.Decimal}
 */
proto.CoreSchema.V1.Advertisement.prototype.getPrice = function() {
  return /** @type{?proto.CoreSchema.V1.Decimal} */ (
    jspb.Message.getWrapperField(this, proto.CoreSchema.V1.Decimal, 21));
};


/** @param {?proto.CoreSchema.V1.Decimal|undefined} value */
proto.CoreSchema.V1.Advertisement.prototype.setPrice = function(value) {
  jspb.Message.setWrapperField(this, 21, value);
};


proto.CoreSchema.V1.Advertisement.prototype.clearPrice = function() {
  this.setPrice(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.CoreSchema.V1.Advertisement.prototype.hasPrice = function() {
  return jspb.Message.getField(this, 21) != null;
};


/**
 * optional AdCurrentStatus CurrentStatus = 22;
 * @return {!proto.CoreSchema.V1.AdCurrentStatus}
 */
proto.CoreSchema.V1.Advertisement.prototype.getCurrentstatus = function() {
  return /** @type {!proto.CoreSchema.V1.AdCurrentStatus} */ (jspb.Message.getFieldWithDefault(this, 22, 0));
};


/** @param {!proto.CoreSchema.V1.AdCurrentStatus} value */
proto.CoreSchema.V1.Advertisement.prototype.setCurrentstatus = function(value) {
  jspb.Message.setProto3EnumField(this, 22, value);
};


/**
 * optional bool AutoPriceDelayIsNull = 23;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.CoreSchema.V1.Advertisement.prototype.getAutopricedelayisnull = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 23, false));
};


/** @param {boolean} value */
proto.CoreSchema.V1.Advertisement.prototype.setAutopricedelayisnull = function(value) {
  jspb.Message.setOneofField(this, 23, proto.CoreSchema.V1.Advertisement.oneofGroups_[0], value);
};


proto.CoreSchema.V1.Advertisement.prototype.clearAutopricedelayisnull = function() {
  jspb.Message.setOneofField(this, 23, proto.CoreSchema.V1.Advertisement.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.CoreSchema.V1.Advertisement.prototype.hasAutopricedelayisnull = function() {
  return jspb.Message.getField(this, 23) != null;
};


/**
 * optional uint32 AutoPriceDelay = 24;
 * @return {number}
 */
proto.CoreSchema.V1.Advertisement.prototype.getAutopricedelay = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 24, 0));
};


/** @param {number} value */
proto.CoreSchema.V1.Advertisement.prototype.setAutopricedelay = function(value) {
  jspb.Message.setOneofField(this, 24, proto.CoreSchema.V1.Advertisement.oneofGroups_[0], value);
};


proto.CoreSchema.V1.Advertisement.prototype.clearAutopricedelay = function() {
  jspb.Message.setOneofField(this, 24, proto.CoreSchema.V1.Advertisement.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.CoreSchema.V1.Advertisement.prototype.hasAutopricedelay = function() {
  return jspb.Message.getField(this, 24) != null;
};


/**
 * optional bool LnEnabled = 25;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.CoreSchema.V1.Advertisement.prototype.getLnenabled = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 25, false));
};


/** @param {boolean} value */
proto.CoreSchema.V1.Advertisement.prototype.setLnenabled = function(value) {
  jspb.Message.setProto3BooleanField(this, 25, value);
};


/**
 * optional bool LnDisableBalance = 26;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.CoreSchema.V1.Advertisement.prototype.getLndisablebalance = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 26, false));
};


/** @param {boolean} value */
proto.CoreSchema.V1.Advertisement.prototype.setLndisablebalance = function(value) {
  jspb.Message.setProto3BooleanField(this, 26, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.CoreSchema.V1.DeleteAdvertisementRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.CoreSchema.V1.DeleteAdvertisementRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.CoreSchema.V1.DeleteAdvertisementRequest.displayName = 'proto.CoreSchema.V1.DeleteAdvertisementRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.CoreSchema.V1.DeleteAdvertisementRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.CoreSchema.V1.DeleteAdvertisementRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.CoreSchema.V1.DeleteAdvertisementRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.CoreSchema.V1.DeleteAdvertisementRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 9, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.CoreSchema.V1.DeleteAdvertisementRequest}
 */
proto.CoreSchema.V1.DeleteAdvertisementRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.CoreSchema.V1.DeleteAdvertisementRequest;
  return proto.CoreSchema.V1.DeleteAdvertisementRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.CoreSchema.V1.DeleteAdvertisementRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.CoreSchema.V1.DeleteAdvertisementRequest}
 */
proto.CoreSchema.V1.DeleteAdvertisementRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 9:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.CoreSchema.V1.DeleteAdvertisementRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.CoreSchema.V1.DeleteAdvertisementRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.CoreSchema.V1.DeleteAdvertisementRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.CoreSchema.V1.DeleteAdvertisementRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeUint64(
      9,
      f
    );
  }
};


/**
 * optional uint64 Id = 9;
 * @return {number}
 */
proto.CoreSchema.V1.DeleteAdvertisementRequest.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/** @param {number} value */
proto.CoreSchema.V1.DeleteAdvertisementRequest.prototype.setId = function(value) {
  jspb.Message.setProto3IntField(this, 9, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.CoreSchema.V1.ChangeAdvertisementStatusRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.CoreSchema.V1.ChangeAdvertisementStatusRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.CoreSchema.V1.ChangeAdvertisementStatusRequest.displayName = 'proto.CoreSchema.V1.ChangeAdvertisementStatusRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.CoreSchema.V1.ChangeAdvertisementStatusRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.CoreSchema.V1.ChangeAdvertisementStatusRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.CoreSchema.V1.ChangeAdvertisementStatusRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.CoreSchema.V1.ChangeAdvertisementStatusRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    advertisementid: jspb.Message.getFieldWithDefault(msg, 1, 0),
    isenabled: jspb.Message.getFieldWithDefault(msg, 2, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.CoreSchema.V1.ChangeAdvertisementStatusRequest}
 */
proto.CoreSchema.V1.ChangeAdvertisementStatusRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.CoreSchema.V1.ChangeAdvertisementStatusRequest;
  return proto.CoreSchema.V1.ChangeAdvertisementStatusRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.CoreSchema.V1.ChangeAdvertisementStatusRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.CoreSchema.V1.ChangeAdvertisementStatusRequest}
 */
proto.CoreSchema.V1.ChangeAdvertisementStatusRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setAdvertisementid(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsenabled(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.CoreSchema.V1.ChangeAdvertisementStatusRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.CoreSchema.V1.ChangeAdvertisementStatusRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.CoreSchema.V1.ChangeAdvertisementStatusRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.CoreSchema.V1.ChangeAdvertisementStatusRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAdvertisementid();
  if (f !== 0) {
    writer.writeUint64(
      1,
      f
    );
  }
  f = message.getIsenabled();
  if (f) {
    writer.writeBool(
      2,
      f
    );
  }
};


/**
 * optional uint64 AdvertisementId = 1;
 * @return {number}
 */
proto.CoreSchema.V1.ChangeAdvertisementStatusRequest.prototype.getAdvertisementid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.CoreSchema.V1.ChangeAdvertisementStatusRequest.prototype.setAdvertisementid = function(value) {
  jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional bool IsEnabled = 2;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.CoreSchema.V1.ChangeAdvertisementStatusRequest.prototype.getIsenabled = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 2, false));
};


/** @param {boolean} value */
proto.CoreSchema.V1.ChangeAdvertisementStatusRequest.prototype.setIsenabled = function(value) {
  jspb.Message.setProto3BooleanField(this, 2, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.CoreSchema.V1.ChangeAdvertisementStatusResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.CoreSchema.V1.ChangeAdvertisementStatusResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.CoreSchema.V1.ChangeAdvertisementStatusResponse.displayName = 'proto.CoreSchema.V1.ChangeAdvertisementStatusResponse';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.CoreSchema.V1.ChangeAdvertisementStatusResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.CoreSchema.V1.ChangeAdvertisementStatusResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.CoreSchema.V1.ChangeAdvertisementStatusResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.CoreSchema.V1.ChangeAdvertisementStatusResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    currentstatus: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.CoreSchema.V1.ChangeAdvertisementStatusResponse}
 */
proto.CoreSchema.V1.ChangeAdvertisementStatusResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.CoreSchema.V1.ChangeAdvertisementStatusResponse;
  return proto.CoreSchema.V1.ChangeAdvertisementStatusResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.CoreSchema.V1.ChangeAdvertisementStatusResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.CoreSchema.V1.ChangeAdvertisementStatusResponse}
 */
proto.CoreSchema.V1.ChangeAdvertisementStatusResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.CoreSchema.V1.AdCurrentStatus} */ (reader.readEnum());
      msg.setCurrentstatus(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.CoreSchema.V1.ChangeAdvertisementStatusResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.CoreSchema.V1.ChangeAdvertisementStatusResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.CoreSchema.V1.ChangeAdvertisementStatusResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.CoreSchema.V1.ChangeAdvertisementStatusResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCurrentstatus();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
};


/**
 * optional AdCurrentStatus CurrentStatus = 1;
 * @return {!proto.CoreSchema.V1.AdCurrentStatus}
 */
proto.CoreSchema.V1.ChangeAdvertisementStatusResponse.prototype.getCurrentstatus = function() {
  return /** @type {!proto.CoreSchema.V1.AdCurrentStatus} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {!proto.CoreSchema.V1.AdCurrentStatus} value */
proto.CoreSchema.V1.ChangeAdvertisementStatusResponse.prototype.setCurrentstatus = function(value) {
  jspb.Message.setProto3EnumField(this, 1, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.CoreSchema.V1.FindAdvertisementsRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.CoreSchema.V1.FindAdvertisementsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.CoreSchema.V1.FindAdvertisementsRequest.displayName = 'proto.CoreSchema.V1.FindAdvertisementsRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.CoreSchema.V1.FindAdvertisementsRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.CoreSchema.V1.FindAdvertisementsRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.CoreSchema.V1.FindAdvertisementsRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.CoreSchema.V1.FindAdvertisementsRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    country: jspb.Message.getFieldWithDefault(msg, 1, ""),
    currency: jspb.Message.getFieldWithDefault(msg, 2, ""),
    paymenttype: jspb.Message.getFieldWithDefault(msg, 3, ""),
    fiatamount: (f = msg.getFiatamount()) && proto.CoreSchema.V1.Decimal.toObject(includeInstance, f),
    cryptoamount: (f = msg.getCryptoamount()) && proto.CoreSchema.V1.Decimal.toObject(includeInstance, f),
    isbuy: jspb.Message.getFieldWithDefault(msg, 6, false),
    userid: jspb.Message.getFieldWithDefault(msg, 7, ""),
    skip: jspb.Message.getFieldWithDefault(msg, 8, 0),
    take: jspb.Message.getFieldWithDefault(msg, 9, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.CoreSchema.V1.FindAdvertisementsRequest}
 */
proto.CoreSchema.V1.FindAdvertisementsRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.CoreSchema.V1.FindAdvertisementsRequest;
  return proto.CoreSchema.V1.FindAdvertisementsRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.CoreSchema.V1.FindAdvertisementsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.CoreSchema.V1.FindAdvertisementsRequest}
 */
proto.CoreSchema.V1.FindAdvertisementsRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setCountry(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setCurrency(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setPaymenttype(value);
      break;
    case 4:
      var value = new proto.CoreSchema.V1.Decimal;
      reader.readMessage(value,proto.CoreSchema.V1.Decimal.deserializeBinaryFromReader);
      msg.setFiatamount(value);
      break;
    case 5:
      var value = new proto.CoreSchema.V1.Decimal;
      reader.readMessage(value,proto.CoreSchema.V1.Decimal.deserializeBinaryFromReader);
      msg.setCryptoamount(value);
      break;
    case 6:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsbuy(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserid(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setSkip(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setTake(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.CoreSchema.V1.FindAdvertisementsRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.CoreSchema.V1.FindAdvertisementsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.CoreSchema.V1.FindAdvertisementsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.CoreSchema.V1.FindAdvertisementsRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCountry();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getCurrency();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getPaymenttype();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getFiatamount();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.CoreSchema.V1.Decimal.serializeBinaryToWriter
    );
  }
  f = message.getCryptoamount();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.CoreSchema.V1.Decimal.serializeBinaryToWriter
    );
  }
  f = message.getIsbuy();
  if (f) {
    writer.writeBool(
      6,
      f
    );
  }
  f = message.getUserid();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getSkip();
  if (f !== 0) {
    writer.writeUint32(
      8,
      f
    );
  }
  f = message.getTake();
  if (f !== 0) {
    writer.writeUint32(
      9,
      f
    );
  }
};


/**
 * optional string Country = 1;
 * @return {string}
 */
proto.CoreSchema.V1.FindAdvertisementsRequest.prototype.getCountry = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.CoreSchema.V1.FindAdvertisementsRequest.prototype.setCountry = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string Currency = 2;
 * @return {string}
 */
proto.CoreSchema.V1.FindAdvertisementsRequest.prototype.getCurrency = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.CoreSchema.V1.FindAdvertisementsRequest.prototype.setCurrency = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string PaymentType = 3;
 * @return {string}
 */
proto.CoreSchema.V1.FindAdvertisementsRequest.prototype.getPaymenttype = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.CoreSchema.V1.FindAdvertisementsRequest.prototype.setPaymenttype = function(value) {
  jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional Decimal FiatAmount = 4;
 * @return {?proto.CoreSchema.V1.Decimal}
 */
proto.CoreSchema.V1.FindAdvertisementsRequest.prototype.getFiatamount = function() {
  return /** @type{?proto.CoreSchema.V1.Decimal} */ (
    jspb.Message.getWrapperField(this, proto.CoreSchema.V1.Decimal, 4));
};


/** @param {?proto.CoreSchema.V1.Decimal|undefined} value */
proto.CoreSchema.V1.FindAdvertisementsRequest.prototype.setFiatamount = function(value) {
  jspb.Message.setWrapperField(this, 4, value);
};


proto.CoreSchema.V1.FindAdvertisementsRequest.prototype.clearFiatamount = function() {
  this.setFiatamount(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.CoreSchema.V1.FindAdvertisementsRequest.prototype.hasFiatamount = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional Decimal CryptoAmount = 5;
 * @return {?proto.CoreSchema.V1.Decimal}
 */
proto.CoreSchema.V1.FindAdvertisementsRequest.prototype.getCryptoamount = function() {
  return /** @type{?proto.CoreSchema.V1.Decimal} */ (
    jspb.Message.getWrapperField(this, proto.CoreSchema.V1.Decimal, 5));
};


/** @param {?proto.CoreSchema.V1.Decimal|undefined} value */
proto.CoreSchema.V1.FindAdvertisementsRequest.prototype.setCryptoamount = function(value) {
  jspb.Message.setWrapperField(this, 5, value);
};


proto.CoreSchema.V1.FindAdvertisementsRequest.prototype.clearCryptoamount = function() {
  this.setCryptoamount(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.CoreSchema.V1.FindAdvertisementsRequest.prototype.hasCryptoamount = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional bool IsBuy = 6;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.CoreSchema.V1.FindAdvertisementsRequest.prototype.getIsbuy = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 6, false));
};


/** @param {boolean} value */
proto.CoreSchema.V1.FindAdvertisementsRequest.prototype.setIsbuy = function(value) {
  jspb.Message.setProto3BooleanField(this, 6, value);
};


/**
 * optional string UserId = 7;
 * @return {string}
 */
proto.CoreSchema.V1.FindAdvertisementsRequest.prototype.getUserid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/** @param {string} value */
proto.CoreSchema.V1.FindAdvertisementsRequest.prototype.setUserid = function(value) {
  jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional uint32 Skip = 8;
 * @return {number}
 */
proto.CoreSchema.V1.FindAdvertisementsRequest.prototype.getSkip = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/** @param {number} value */
proto.CoreSchema.V1.FindAdvertisementsRequest.prototype.setSkip = function(value) {
  jspb.Message.setProto3IntField(this, 8, value);
};


/**
 * optional uint32 Take = 9;
 * @return {number}
 */
proto.CoreSchema.V1.FindAdvertisementsRequest.prototype.getTake = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/** @param {number} value */
proto.CoreSchema.V1.FindAdvertisementsRequest.prototype.setTake = function(value) {
  jspb.Message.setProto3IntField(this, 9, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.CoreSchema.V1.FindAdvertisementsResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.CoreSchema.V1.FindAdvertisementsResponse.repeatedFields_, null);
};
goog.inherits(proto.CoreSchema.V1.FindAdvertisementsResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.CoreSchema.V1.FindAdvertisementsResponse.displayName = 'proto.CoreSchema.V1.FindAdvertisementsResponse';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.CoreSchema.V1.FindAdvertisementsResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.CoreSchema.V1.FindAdvertisementsResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.CoreSchema.V1.FindAdvertisementsResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.CoreSchema.V1.FindAdvertisementsResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.CoreSchema.V1.FindAdvertisementsResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    advertisementsList: jspb.Message.toObjectList(msg.getAdvertisementsList(),
    proto.CoreSchema.V1.Advertisement.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.CoreSchema.V1.FindAdvertisementsResponse}
 */
proto.CoreSchema.V1.FindAdvertisementsResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.CoreSchema.V1.FindAdvertisementsResponse;
  return proto.CoreSchema.V1.FindAdvertisementsResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.CoreSchema.V1.FindAdvertisementsResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.CoreSchema.V1.FindAdvertisementsResponse}
 */
proto.CoreSchema.V1.FindAdvertisementsResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.CoreSchema.V1.Advertisement;
      reader.readMessage(value,proto.CoreSchema.V1.Advertisement.deserializeBinaryFromReader);
      msg.addAdvertisements(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.CoreSchema.V1.FindAdvertisementsResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.CoreSchema.V1.FindAdvertisementsResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.CoreSchema.V1.FindAdvertisementsResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.CoreSchema.V1.FindAdvertisementsResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAdvertisementsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.CoreSchema.V1.Advertisement.serializeBinaryToWriter
    );
  }
};


/**
 * repeated Advertisement Advertisements = 1;
 * @return {!Array<!proto.CoreSchema.V1.Advertisement>}
 */
proto.CoreSchema.V1.FindAdvertisementsResponse.prototype.getAdvertisementsList = function() {
  return /** @type{!Array<!proto.CoreSchema.V1.Advertisement>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.CoreSchema.V1.Advertisement, 1));
};


/** @param {!Array<!proto.CoreSchema.V1.Advertisement>} value */
proto.CoreSchema.V1.FindAdvertisementsResponse.prototype.setAdvertisementsList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.CoreSchema.V1.Advertisement=} opt_value
 * @param {number=} opt_index
 * @return {!proto.CoreSchema.V1.Advertisement}
 */
proto.CoreSchema.V1.FindAdvertisementsResponse.prototype.addAdvertisements = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.CoreSchema.V1.Advertisement, opt_index);
};


proto.CoreSchema.V1.FindAdvertisementsResponse.prototype.clearAdvertisementsList = function() {
  this.setAdvertisementsList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.CoreSchema.V1.GetAdvertisementsByIdRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.CoreSchema.V1.GetAdvertisementsByIdRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.CoreSchema.V1.GetAdvertisementsByIdRequest.displayName = 'proto.CoreSchema.V1.GetAdvertisementsByIdRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.CoreSchema.V1.GetAdvertisementsByIdRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.CoreSchema.V1.GetAdvertisementsByIdRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.CoreSchema.V1.GetAdvertisementsByIdRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.CoreSchema.V1.GetAdvertisementsByIdRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.CoreSchema.V1.GetAdvertisementsByIdRequest}
 */
proto.CoreSchema.V1.GetAdvertisementsByIdRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.CoreSchema.V1.GetAdvertisementsByIdRequest;
  return proto.CoreSchema.V1.GetAdvertisementsByIdRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.CoreSchema.V1.GetAdvertisementsByIdRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.CoreSchema.V1.GetAdvertisementsByIdRequest}
 */
proto.CoreSchema.V1.GetAdvertisementsByIdRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.CoreSchema.V1.GetAdvertisementsByIdRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.CoreSchema.V1.GetAdvertisementsByIdRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.CoreSchema.V1.GetAdvertisementsByIdRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.CoreSchema.V1.GetAdvertisementsByIdRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeUint64(
      1,
      f
    );
  }
};


/**
 * optional uint64 Id = 1;
 * @return {number}
 */
proto.CoreSchema.V1.GetAdvertisementsByIdRequest.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.CoreSchema.V1.GetAdvertisementsByIdRequest.prototype.setId = function(value) {
  jspb.Message.setProto3IntField(this, 1, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.CoreSchema.V1.UserInfo = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.CoreSchema.V1.UserInfo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.CoreSchema.V1.UserInfo.displayName = 'proto.CoreSchema.V1.UserInfo';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.CoreSchema.V1.UserInfo.prototype.toObject = function(opt_includeInstance) {
  return proto.CoreSchema.V1.UserInfo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.CoreSchema.V1.UserInfo} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.CoreSchema.V1.UserInfo.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    username: jspb.Message.getFieldWithDefault(msg, 2, ""),
    tradesavgamount: (f = msg.getTradesavgamount()) && proto.CoreSchema.V1.Decimal.toObject(includeInstance, f),
    tradescount: jspb.Message.getFieldWithDefault(msg, 4, 0),
    counterpartyscount: jspb.Message.getFieldWithDefault(msg, 5, 0),
    responserate: (f = msg.getResponserate()) && proto.CoreSchema.V1.Decimal.toObject(includeInstance, f),
    firsttradedate: (f = msg.getFirsttradedate()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    createdat: (f = msg.getCreatedat()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    lastonline: (f = msg.getLastonline()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    trustedcount: jspb.Message.getFieldWithDefault(msg, 10, 0),
    blockedcount: jspb.Message.getFieldWithDefault(msg, 11, 0),
    avgdelayseconds: jspb.Message.getFieldWithDefault(msg, 12, 0),
    mediandelayseconds: jspb.Message.getFieldWithDefault(msg, 13, 0),
    introduction: jspb.Message.getFieldWithDefault(msg, 14, ""),
    site: jspb.Message.getFieldWithDefault(msg, 15, ""),
    timezone: jspb.Message.getFieldWithDefault(msg, 16, ""),
    istrusted: jspb.Message.getFieldWithDefault(msg, 17, false),
    isblocked: jspb.Message.getFieldWithDefault(msg, 18, false),
    invoicescreatedcount: jspb.Message.getFieldWithDefault(msg, 19, 0),
    paymentspayedavgamount: (f = msg.getPaymentspayedavgamount()) && proto.CoreSchema.V1.Decimal.toObject(includeInstance, f),
    paymentspayedcount: jspb.Message.getFieldWithDefault(msg, 21, 0),
    paymentsreceivedavgamount: (f = msg.getPaymentsreceivedavgamount()) && proto.CoreSchema.V1.Decimal.toObject(includeInstance, f),
    paymentsreceivedcount: jspb.Message.getFieldWithDefault(msg, 23, 0),
    invoiceresponserate: (f = msg.getInvoiceresponserate()) && proto.CoreSchema.V1.Decimal.toObject(includeInstance, f),
    isanonymous: jspb.Message.getFieldWithDefault(msg, 25, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.CoreSchema.V1.UserInfo}
 */
proto.CoreSchema.V1.UserInfo.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.CoreSchema.V1.UserInfo;
  return proto.CoreSchema.V1.UserInfo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.CoreSchema.V1.UserInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.CoreSchema.V1.UserInfo}
 */
proto.CoreSchema.V1.UserInfo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setUsername(value);
      break;
    case 3:
      var value = new proto.CoreSchema.V1.Decimal;
      reader.readMessage(value,proto.CoreSchema.V1.Decimal.deserializeBinaryFromReader);
      msg.setTradesavgamount(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setTradescount(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setCounterpartyscount(value);
      break;
    case 6:
      var value = new proto.CoreSchema.V1.Decimal;
      reader.readMessage(value,proto.CoreSchema.V1.Decimal.deserializeBinaryFromReader);
      msg.setResponserate(value);
      break;
    case 7:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setFirsttradedate(value);
      break;
    case 8:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setCreatedat(value);
      break;
    case 9:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setLastonline(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setTrustedcount(value);
      break;
    case 11:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setBlockedcount(value);
      break;
    case 12:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setAvgdelayseconds(value);
      break;
    case 13:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setMediandelayseconds(value);
      break;
    case 14:
      var value = /** @type {string} */ (reader.readString());
      msg.setIntroduction(value);
      break;
    case 15:
      var value = /** @type {string} */ (reader.readString());
      msg.setSite(value);
      break;
    case 16:
      var value = /** @type {string} */ (reader.readString());
      msg.setTimezone(value);
      break;
    case 17:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIstrusted(value);
      break;
    case 18:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsblocked(value);
      break;
    case 19:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setInvoicescreatedcount(value);
      break;
    case 20:
      var value = new proto.CoreSchema.V1.Decimal;
      reader.readMessage(value,proto.CoreSchema.V1.Decimal.deserializeBinaryFromReader);
      msg.setPaymentspayedavgamount(value);
      break;
    case 21:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setPaymentspayedcount(value);
      break;
    case 22:
      var value = new proto.CoreSchema.V1.Decimal;
      reader.readMessage(value,proto.CoreSchema.V1.Decimal.deserializeBinaryFromReader);
      msg.setPaymentsreceivedavgamount(value);
      break;
    case 23:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setPaymentsreceivedcount(value);
      break;
    case 24:
      var value = new proto.CoreSchema.V1.Decimal;
      reader.readMessage(value,proto.CoreSchema.V1.Decimal.deserializeBinaryFromReader);
      msg.setInvoiceresponserate(value);
      break;
    case 25:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsanonymous(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.CoreSchema.V1.UserInfo.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.CoreSchema.V1.UserInfo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.CoreSchema.V1.UserInfo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.CoreSchema.V1.UserInfo.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getUsername();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getTradesavgamount();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.CoreSchema.V1.Decimal.serializeBinaryToWriter
    );
  }
  f = message.getTradescount();
  if (f !== 0) {
    writer.writeUint32(
      4,
      f
    );
  }
  f = message.getCounterpartyscount();
  if (f !== 0) {
    writer.writeUint32(
      5,
      f
    );
  }
  f = message.getResponserate();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      proto.CoreSchema.V1.Decimal.serializeBinaryToWriter
    );
  }
  f = message.getFirsttradedate();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getCreatedat();
  if (f != null) {
    writer.writeMessage(
      8,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getLastonline();
  if (f != null) {
    writer.writeMessage(
      9,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getTrustedcount();
  if (f !== 0) {
    writer.writeUint32(
      10,
      f
    );
  }
  f = message.getBlockedcount();
  if (f !== 0) {
    writer.writeUint32(
      11,
      f
    );
  }
  f = message.getAvgdelayseconds();
  if (f !== 0) {
    writer.writeUint32(
      12,
      f
    );
  }
  f = message.getMediandelayseconds();
  if (f !== 0) {
    writer.writeUint32(
      13,
      f
    );
  }
  f = message.getIntroduction();
  if (f.length > 0) {
    writer.writeString(
      14,
      f
    );
  }
  f = message.getSite();
  if (f.length > 0) {
    writer.writeString(
      15,
      f
    );
  }
  f = message.getTimezone();
  if (f.length > 0) {
    writer.writeString(
      16,
      f
    );
  }
  f = message.getIstrusted();
  if (f) {
    writer.writeBool(
      17,
      f
    );
  }
  f = message.getIsblocked();
  if (f) {
    writer.writeBool(
      18,
      f
    );
  }
  f = message.getInvoicescreatedcount();
  if (f !== 0) {
    writer.writeUint32(
      19,
      f
    );
  }
  f = message.getPaymentspayedavgamount();
  if (f != null) {
    writer.writeMessage(
      20,
      f,
      proto.CoreSchema.V1.Decimal.serializeBinaryToWriter
    );
  }
  f = message.getPaymentspayedcount();
  if (f !== 0) {
    writer.writeUint32(
      21,
      f
    );
  }
  f = message.getPaymentsreceivedavgamount();
  if (f != null) {
    writer.writeMessage(
      22,
      f,
      proto.CoreSchema.V1.Decimal.serializeBinaryToWriter
    );
  }
  f = message.getPaymentsreceivedcount();
  if (f !== 0) {
    writer.writeUint32(
      23,
      f
    );
  }
  f = message.getInvoiceresponserate();
  if (f != null) {
    writer.writeMessage(
      24,
      f,
      proto.CoreSchema.V1.Decimal.serializeBinaryToWriter
    );
  }
  f = message.getIsanonymous();
  if (f) {
    writer.writeBool(
      25,
      f
    );
  }
};


/**
 * optional string Id = 1;
 * @return {string}
 */
proto.CoreSchema.V1.UserInfo.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.CoreSchema.V1.UserInfo.prototype.setId = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string Username = 2;
 * @return {string}
 */
proto.CoreSchema.V1.UserInfo.prototype.getUsername = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.CoreSchema.V1.UserInfo.prototype.setUsername = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional Decimal TradesAvgAmount = 3;
 * @return {?proto.CoreSchema.V1.Decimal}
 */
proto.CoreSchema.V1.UserInfo.prototype.getTradesavgamount = function() {
  return /** @type{?proto.CoreSchema.V1.Decimal} */ (
    jspb.Message.getWrapperField(this, proto.CoreSchema.V1.Decimal, 3));
};


/** @param {?proto.CoreSchema.V1.Decimal|undefined} value */
proto.CoreSchema.V1.UserInfo.prototype.setTradesavgamount = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


proto.CoreSchema.V1.UserInfo.prototype.clearTradesavgamount = function() {
  this.setTradesavgamount(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.CoreSchema.V1.UserInfo.prototype.hasTradesavgamount = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional uint32 TradesCount = 4;
 * @return {number}
 */
proto.CoreSchema.V1.UserInfo.prototype.getTradescount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/** @param {number} value */
proto.CoreSchema.V1.UserInfo.prototype.setTradescount = function(value) {
  jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional uint32 CounterpartysCount = 5;
 * @return {number}
 */
proto.CoreSchema.V1.UserInfo.prototype.getCounterpartyscount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/** @param {number} value */
proto.CoreSchema.V1.UserInfo.prototype.setCounterpartyscount = function(value) {
  jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional Decimal ResponseRate = 6;
 * @return {?proto.CoreSchema.V1.Decimal}
 */
proto.CoreSchema.V1.UserInfo.prototype.getResponserate = function() {
  return /** @type{?proto.CoreSchema.V1.Decimal} */ (
    jspb.Message.getWrapperField(this, proto.CoreSchema.V1.Decimal, 6));
};


/** @param {?proto.CoreSchema.V1.Decimal|undefined} value */
proto.CoreSchema.V1.UserInfo.prototype.setResponserate = function(value) {
  jspb.Message.setWrapperField(this, 6, value);
};


proto.CoreSchema.V1.UserInfo.prototype.clearResponserate = function() {
  this.setResponserate(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.CoreSchema.V1.UserInfo.prototype.hasResponserate = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional google.protobuf.Timestamp FirstTradeDate = 7;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.CoreSchema.V1.UserInfo.prototype.getFirsttradedate = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 7));
};


/** @param {?proto.google.protobuf.Timestamp|undefined} value */
proto.CoreSchema.V1.UserInfo.prototype.setFirsttradedate = function(value) {
  jspb.Message.setWrapperField(this, 7, value);
};


proto.CoreSchema.V1.UserInfo.prototype.clearFirsttradedate = function() {
  this.setFirsttradedate(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.CoreSchema.V1.UserInfo.prototype.hasFirsttradedate = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional google.protobuf.Timestamp CreatedAt = 8;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.CoreSchema.V1.UserInfo.prototype.getCreatedat = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 8));
};


/** @param {?proto.google.protobuf.Timestamp|undefined} value */
proto.CoreSchema.V1.UserInfo.prototype.setCreatedat = function(value) {
  jspb.Message.setWrapperField(this, 8, value);
};


proto.CoreSchema.V1.UserInfo.prototype.clearCreatedat = function() {
  this.setCreatedat(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.CoreSchema.V1.UserInfo.prototype.hasCreatedat = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional google.protobuf.Timestamp LastOnline = 9;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.CoreSchema.V1.UserInfo.prototype.getLastonline = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 9));
};


/** @param {?proto.google.protobuf.Timestamp|undefined} value */
proto.CoreSchema.V1.UserInfo.prototype.setLastonline = function(value) {
  jspb.Message.setWrapperField(this, 9, value);
};


proto.CoreSchema.V1.UserInfo.prototype.clearLastonline = function() {
  this.setLastonline(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.CoreSchema.V1.UserInfo.prototype.hasLastonline = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional uint32 TrustedCount = 10;
 * @return {number}
 */
proto.CoreSchema.V1.UserInfo.prototype.getTrustedcount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 10, 0));
};


/** @param {number} value */
proto.CoreSchema.V1.UserInfo.prototype.setTrustedcount = function(value) {
  jspb.Message.setProto3IntField(this, 10, value);
};


/**
 * optional uint32 BlockedCount = 11;
 * @return {number}
 */
proto.CoreSchema.V1.UserInfo.prototype.getBlockedcount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 11, 0));
};


/** @param {number} value */
proto.CoreSchema.V1.UserInfo.prototype.setBlockedcount = function(value) {
  jspb.Message.setProto3IntField(this, 11, value);
};


/**
 * optional uint32 AvgDelaySeconds = 12;
 * @return {number}
 */
proto.CoreSchema.V1.UserInfo.prototype.getAvgdelayseconds = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 12, 0));
};


/** @param {number} value */
proto.CoreSchema.V1.UserInfo.prototype.setAvgdelayseconds = function(value) {
  jspb.Message.setProto3IntField(this, 12, value);
};


/**
 * optional uint32 MedianDelaySeconds = 13;
 * @return {number}
 */
proto.CoreSchema.V1.UserInfo.prototype.getMediandelayseconds = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 13, 0));
};


/** @param {number} value */
proto.CoreSchema.V1.UserInfo.prototype.setMediandelayseconds = function(value) {
  jspb.Message.setProto3IntField(this, 13, value);
};


/**
 * optional string Introduction = 14;
 * @return {string}
 */
proto.CoreSchema.V1.UserInfo.prototype.getIntroduction = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 14, ""));
};


/** @param {string} value */
proto.CoreSchema.V1.UserInfo.prototype.setIntroduction = function(value) {
  jspb.Message.setProto3StringField(this, 14, value);
};


/**
 * optional string Site = 15;
 * @return {string}
 */
proto.CoreSchema.V1.UserInfo.prototype.getSite = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 15, ""));
};


/** @param {string} value */
proto.CoreSchema.V1.UserInfo.prototype.setSite = function(value) {
  jspb.Message.setProto3StringField(this, 15, value);
};


/**
 * optional string Timezone = 16;
 * @return {string}
 */
proto.CoreSchema.V1.UserInfo.prototype.getTimezone = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 16, ""));
};


/** @param {string} value */
proto.CoreSchema.V1.UserInfo.prototype.setTimezone = function(value) {
  jspb.Message.setProto3StringField(this, 16, value);
};


/**
 * optional bool IsTrusted = 17;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.CoreSchema.V1.UserInfo.prototype.getIstrusted = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 17, false));
};


/** @param {boolean} value */
proto.CoreSchema.V1.UserInfo.prototype.setIstrusted = function(value) {
  jspb.Message.setProto3BooleanField(this, 17, value);
};


/**
 * optional bool IsBlocked = 18;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.CoreSchema.V1.UserInfo.prototype.getIsblocked = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 18, false));
};


/** @param {boolean} value */
proto.CoreSchema.V1.UserInfo.prototype.setIsblocked = function(value) {
  jspb.Message.setProto3BooleanField(this, 18, value);
};


/**
 * optional uint32 InvoicesCreatedCount = 19;
 * @return {number}
 */
proto.CoreSchema.V1.UserInfo.prototype.getInvoicescreatedcount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 19, 0));
};


/** @param {number} value */
proto.CoreSchema.V1.UserInfo.prototype.setInvoicescreatedcount = function(value) {
  jspb.Message.setProto3IntField(this, 19, value);
};


/**
 * optional Decimal PaymentsPayedAvgAmount = 20;
 * @return {?proto.CoreSchema.V1.Decimal}
 */
proto.CoreSchema.V1.UserInfo.prototype.getPaymentspayedavgamount = function() {
  return /** @type{?proto.CoreSchema.V1.Decimal} */ (
    jspb.Message.getWrapperField(this, proto.CoreSchema.V1.Decimal, 20));
};


/** @param {?proto.CoreSchema.V1.Decimal|undefined} value */
proto.CoreSchema.V1.UserInfo.prototype.setPaymentspayedavgamount = function(value) {
  jspb.Message.setWrapperField(this, 20, value);
};


proto.CoreSchema.V1.UserInfo.prototype.clearPaymentspayedavgamount = function() {
  this.setPaymentspayedavgamount(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.CoreSchema.V1.UserInfo.prototype.hasPaymentspayedavgamount = function() {
  return jspb.Message.getField(this, 20) != null;
};


/**
 * optional uint32 PaymentsPayedCount = 21;
 * @return {number}
 */
proto.CoreSchema.V1.UserInfo.prototype.getPaymentspayedcount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 21, 0));
};


/** @param {number} value */
proto.CoreSchema.V1.UserInfo.prototype.setPaymentspayedcount = function(value) {
  jspb.Message.setProto3IntField(this, 21, value);
};


/**
 * optional Decimal PaymentsReceivedAvgAmount = 22;
 * @return {?proto.CoreSchema.V1.Decimal}
 */
proto.CoreSchema.V1.UserInfo.prototype.getPaymentsreceivedavgamount = function() {
  return /** @type{?proto.CoreSchema.V1.Decimal} */ (
    jspb.Message.getWrapperField(this, proto.CoreSchema.V1.Decimal, 22));
};


/** @param {?proto.CoreSchema.V1.Decimal|undefined} value */
proto.CoreSchema.V1.UserInfo.prototype.setPaymentsreceivedavgamount = function(value) {
  jspb.Message.setWrapperField(this, 22, value);
};


proto.CoreSchema.V1.UserInfo.prototype.clearPaymentsreceivedavgamount = function() {
  this.setPaymentsreceivedavgamount(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.CoreSchema.V1.UserInfo.prototype.hasPaymentsreceivedavgamount = function() {
  return jspb.Message.getField(this, 22) != null;
};


/**
 * optional uint32 PaymentsReceivedCount = 23;
 * @return {number}
 */
proto.CoreSchema.V1.UserInfo.prototype.getPaymentsreceivedcount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 23, 0));
};


/** @param {number} value */
proto.CoreSchema.V1.UserInfo.prototype.setPaymentsreceivedcount = function(value) {
  jspb.Message.setProto3IntField(this, 23, value);
};


/**
 * optional Decimal InvoiceResponseRate = 24;
 * @return {?proto.CoreSchema.V1.Decimal}
 */
proto.CoreSchema.V1.UserInfo.prototype.getInvoiceresponserate = function() {
  return /** @type{?proto.CoreSchema.V1.Decimal} */ (
    jspb.Message.getWrapperField(this, proto.CoreSchema.V1.Decimal, 24));
};


/** @param {?proto.CoreSchema.V1.Decimal|undefined} value */
proto.CoreSchema.V1.UserInfo.prototype.setInvoiceresponserate = function(value) {
  jspb.Message.setWrapperField(this, 24, value);
};


proto.CoreSchema.V1.UserInfo.prototype.clearInvoiceresponserate = function() {
  this.setInvoiceresponserate(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.CoreSchema.V1.UserInfo.prototype.hasInvoiceresponserate = function() {
  return jspb.Message.getField(this, 24) != null;
};


/**
 * optional bool IsAnonymous = 25;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.CoreSchema.V1.UserInfo.prototype.getIsanonymous = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 25, false));
};


/** @param {boolean} value */
proto.CoreSchema.V1.UserInfo.prototype.setIsanonymous = function(value) {
  jspb.Message.setProto3BooleanField(this, 25, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.CoreSchema.V1.GetUserInfoRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.CoreSchema.V1.GetUserInfoRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.CoreSchema.V1.GetUserInfoRequest.displayName = 'proto.CoreSchema.V1.GetUserInfoRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.CoreSchema.V1.GetUserInfoRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.CoreSchema.V1.GetUserInfoRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.CoreSchema.V1.GetUserInfoRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.CoreSchema.V1.GetUserInfoRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.CoreSchema.V1.GetUserInfoRequest}
 */
proto.CoreSchema.V1.GetUserInfoRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.CoreSchema.V1.GetUserInfoRequest;
  return proto.CoreSchema.V1.GetUserInfoRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.CoreSchema.V1.GetUserInfoRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.CoreSchema.V1.GetUserInfoRequest}
 */
proto.CoreSchema.V1.GetUserInfoRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.CoreSchema.V1.GetUserInfoRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.CoreSchema.V1.GetUserInfoRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.CoreSchema.V1.GetUserInfoRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.CoreSchema.V1.GetUserInfoRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string Id = 1;
 * @return {string}
 */
proto.CoreSchema.V1.GetUserInfoRequest.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.CoreSchema.V1.GetUserInfoRequest.prototype.setId = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.CoreSchema.V1.GetUserInfoResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.CoreSchema.V1.GetUserInfoResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.CoreSchema.V1.GetUserInfoResponse.displayName = 'proto.CoreSchema.V1.GetUserInfoResponse';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.CoreSchema.V1.GetUserInfoResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.CoreSchema.V1.GetUserInfoResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.CoreSchema.V1.GetUserInfoResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.CoreSchema.V1.GetUserInfoResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    userinfo: (f = msg.getUserinfo()) && proto.CoreSchema.V1.UserInfo.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.CoreSchema.V1.GetUserInfoResponse}
 */
proto.CoreSchema.V1.GetUserInfoResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.CoreSchema.V1.GetUserInfoResponse;
  return proto.CoreSchema.V1.GetUserInfoResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.CoreSchema.V1.GetUserInfoResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.CoreSchema.V1.GetUserInfoResponse}
 */
proto.CoreSchema.V1.GetUserInfoResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.CoreSchema.V1.UserInfo;
      reader.readMessage(value,proto.CoreSchema.V1.UserInfo.deserializeBinaryFromReader);
      msg.setUserinfo(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.CoreSchema.V1.GetUserInfoResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.CoreSchema.V1.GetUserInfoResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.CoreSchema.V1.GetUserInfoResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.CoreSchema.V1.GetUserInfoResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUserinfo();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.CoreSchema.V1.UserInfo.serializeBinaryToWriter
    );
  }
};


/**
 * optional UserInfo UserInfo = 1;
 * @return {?proto.CoreSchema.V1.UserInfo}
 */
proto.CoreSchema.V1.GetUserInfoResponse.prototype.getUserinfo = function() {
  return /** @type{?proto.CoreSchema.V1.UserInfo} */ (
    jspb.Message.getWrapperField(this, proto.CoreSchema.V1.UserInfo, 1));
};


/** @param {?proto.CoreSchema.V1.UserInfo|undefined} value */
proto.CoreSchema.V1.GetUserInfoResponse.prototype.setUserinfo = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.CoreSchema.V1.GetUserInfoResponse.prototype.clearUserinfo = function() {
  this.setUserinfo(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.CoreSchema.V1.GetUserInfoResponse.prototype.hasUserinfo = function() {
  return jspb.Message.getField(this, 1) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.CoreSchema.V1.DealMessage = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.CoreSchema.V1.DealMessage.repeatedFields_, null);
};
goog.inherits(proto.CoreSchema.V1.DealMessage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.CoreSchema.V1.DealMessage.displayName = 'proto.CoreSchema.V1.DealMessage';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.CoreSchema.V1.DealMessage.repeatedFields_ = [5];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.CoreSchema.V1.DealMessage.prototype.toObject = function(opt_includeInstance) {
  return proto.CoreSchema.V1.DealMessage.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.CoreSchema.V1.DealMessage} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.CoreSchema.V1.DealMessage.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0),
    createdat: (f = msg.getCreatedat()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    ownerid: jspb.Message.getFieldWithDefault(msg, 3, ""),
    text: jspb.Message.getFieldWithDefault(msg, 4, ""),
    imageidsList: jspb.Message.getRepeatedField(msg, 5)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.CoreSchema.V1.DealMessage}
 */
proto.CoreSchema.V1.DealMessage.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.CoreSchema.V1.DealMessage;
  return proto.CoreSchema.V1.DealMessage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.CoreSchema.V1.DealMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.CoreSchema.V1.DealMessage}
 */
proto.CoreSchema.V1.DealMessage.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setId(value);
      break;
    case 2:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setCreatedat(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setOwnerid(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setText(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.addImageids(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.CoreSchema.V1.DealMessage.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.CoreSchema.V1.DealMessage.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.CoreSchema.V1.DealMessage} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.CoreSchema.V1.DealMessage.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeUint64(
      1,
      f
    );
  }
  f = message.getCreatedat();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getOwnerid();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getText();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getImageidsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      5,
      f
    );
  }
};


/**
 * optional uint64 Id = 1;
 * @return {number}
 */
proto.CoreSchema.V1.DealMessage.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.CoreSchema.V1.DealMessage.prototype.setId = function(value) {
  jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional google.protobuf.Timestamp CreatedAt = 2;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.CoreSchema.V1.DealMessage.prototype.getCreatedat = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 2));
};


/** @param {?proto.google.protobuf.Timestamp|undefined} value */
proto.CoreSchema.V1.DealMessage.prototype.setCreatedat = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.CoreSchema.V1.DealMessage.prototype.clearCreatedat = function() {
  this.setCreatedat(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.CoreSchema.V1.DealMessage.prototype.hasCreatedat = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string OwnerId = 3;
 * @return {string}
 */
proto.CoreSchema.V1.DealMessage.prototype.getOwnerid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.CoreSchema.V1.DealMessage.prototype.setOwnerid = function(value) {
  jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string Text = 4;
 * @return {string}
 */
proto.CoreSchema.V1.DealMessage.prototype.getText = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/** @param {string} value */
proto.CoreSchema.V1.DealMessage.prototype.setText = function(value) {
  jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * repeated string ImageIds = 5;
 * @return {!Array<string>}
 */
proto.CoreSchema.V1.DealMessage.prototype.getImageidsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 5));
};


/** @param {!Array<string>} value */
proto.CoreSchema.V1.DealMessage.prototype.setImageidsList = function(value) {
  jspb.Message.setField(this, 5, value || []);
};


/**
 * @param {!string} value
 * @param {number=} opt_index
 */
proto.CoreSchema.V1.DealMessage.prototype.addImageids = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 5, value, opt_index);
};


proto.CoreSchema.V1.DealMessage.prototype.clearImageidsList = function() {
  this.setImageidsList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.CoreSchema.V1.Feedback = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.CoreSchema.V1.Feedback, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.CoreSchema.V1.Feedback.displayName = 'proto.CoreSchema.V1.Feedback';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.CoreSchema.V1.Feedback.prototype.toObject = function(opt_includeInstance) {
  return proto.CoreSchema.V1.Feedback.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.CoreSchema.V1.Feedback} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.CoreSchema.V1.Feedback.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0),
    ispositive: jspb.Message.getFieldWithDefault(msg, 2, false),
    text: jspb.Message.getFieldWithDefault(msg, 3, ""),
    createdat: (f = msg.getCreatedat()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.CoreSchema.V1.Feedback}
 */
proto.CoreSchema.V1.Feedback.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.CoreSchema.V1.Feedback;
  return proto.CoreSchema.V1.Feedback.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.CoreSchema.V1.Feedback} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.CoreSchema.V1.Feedback}
 */
proto.CoreSchema.V1.Feedback.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIspositive(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setText(value);
      break;
    case 4:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setCreatedat(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.CoreSchema.V1.Feedback.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.CoreSchema.V1.Feedback.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.CoreSchema.V1.Feedback} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.CoreSchema.V1.Feedback.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeUint64(
      1,
      f
    );
  }
  f = message.getIspositive();
  if (f) {
    writer.writeBool(
      2,
      f
    );
  }
  f = message.getText();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getCreatedat();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
};


/**
 * optional uint64 Id = 1;
 * @return {number}
 */
proto.CoreSchema.V1.Feedback.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.CoreSchema.V1.Feedback.prototype.setId = function(value) {
  jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional bool IsPositive = 2;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.CoreSchema.V1.Feedback.prototype.getIspositive = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 2, false));
};


/** @param {boolean} value */
proto.CoreSchema.V1.Feedback.prototype.setIspositive = function(value) {
  jspb.Message.setProto3BooleanField(this, 2, value);
};


/**
 * optional string Text = 3;
 * @return {string}
 */
proto.CoreSchema.V1.Feedback.prototype.getText = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.CoreSchema.V1.Feedback.prototype.setText = function(value) {
  jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional google.protobuf.Timestamp CreatedAt = 4;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.CoreSchema.V1.Feedback.prototype.getCreatedat = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 4));
};


/** @param {?proto.google.protobuf.Timestamp|undefined} value */
proto.CoreSchema.V1.Feedback.prototype.setCreatedat = function(value) {
  jspb.Message.setWrapperField(this, 4, value);
};


proto.CoreSchema.V1.Feedback.prototype.clearCreatedat = function() {
  this.setCreatedat(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.CoreSchema.V1.Feedback.prototype.hasCreatedat = function() {
  return jspb.Message.getField(this, 4) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.CoreSchema.V1.Deal = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.CoreSchema.V1.Deal.repeatedFields_, proto.CoreSchema.V1.Deal.oneofGroups_);
};
goog.inherits(proto.CoreSchema.V1.Deal, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.CoreSchema.V1.Deal.displayName = 'proto.CoreSchema.V1.Deal';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.CoreSchema.V1.Deal.repeatedFields_ = [15];

/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.CoreSchema.V1.Deal.oneofGroups_ = [[17,18],[19,20],[22,23],[24,25,26,27]];

/**
 * @enum {number}
 */
proto.CoreSchema.V1.Deal.AdownerfeedbacknullableCase = {
  ADOWNERFEEDBACKNULLABLE_NOT_SET: 0,
  ADOWNERFEEDBACKISNULL: 17,
  ADOWNERFEEDBACK: 18
};

/**
 * @return {proto.CoreSchema.V1.Deal.AdownerfeedbacknullableCase}
 */
proto.CoreSchema.V1.Deal.prototype.getAdownerfeedbacknullableCase = function() {
  return /** @type {proto.CoreSchema.V1.Deal.AdownerfeedbacknullableCase} */(jspb.Message.computeOneofCase(this, proto.CoreSchema.V1.Deal.oneofGroups_[0]));
};

/**
 * @enum {number}
 */
proto.CoreSchema.V1.Deal.InitiatorfeedbacknullableCase = {
  INITIATORFEEDBACKNULLABLE_NOT_SET: 0,
  INITIATORFEEDBACKISNULL: 19,
  INITIATORFEEDBACK: 20
};

/**
 * @return {proto.CoreSchema.V1.Deal.InitiatorfeedbacknullableCase}
 */
proto.CoreSchema.V1.Deal.prototype.getInitiatorfeedbacknullableCase = function() {
  return /** @type {proto.CoreSchema.V1.Deal.InitiatorfeedbacknullableCase} */(jspb.Message.computeOneofCase(this, proto.CoreSchema.V1.Deal.oneofGroups_[1]));
};

/**
 * @enum {number}
 */
proto.CoreSchema.V1.Deal.NullablepaymentCase = {
  NULLABLEPAYMENT_NOT_SET: 0,
  PAYMENTISNULL: 22,
  PAYMENT: 23
};

/**
 * @return {proto.CoreSchema.V1.Deal.NullablepaymentCase}
 */
proto.CoreSchema.V1.Deal.prototype.getNullablepaymentCase = function() {
  return /** @type {proto.CoreSchema.V1.Deal.NullablepaymentCase} */(jspb.Message.computeOneofCase(this, proto.CoreSchema.V1.Deal.oneofGroups_[2]));
};

/**
 * @enum {number}
 */
proto.CoreSchema.V1.Deal.WithdrawalCase = {
  WITHDRAWAL_NOT_SET: 0,
  NOWITHDRAWAL: 24,
  PROMISEWITHDRAWAL: 25,
  BITCOINWITHDRAWAL: 26,
  LNWITHDRAWAL: 27
};

/**
 * @return {proto.CoreSchema.V1.Deal.WithdrawalCase}
 */
proto.CoreSchema.V1.Deal.prototype.getWithdrawalCase = function() {
  return /** @type {proto.CoreSchema.V1.Deal.WithdrawalCase} */(jspb.Message.computeOneofCase(this, proto.CoreSchema.V1.Deal.oneofGroups_[3]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.CoreSchema.V1.Deal.prototype.toObject = function(opt_includeInstance) {
  return proto.CoreSchema.V1.Deal.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.CoreSchema.V1.Deal} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.CoreSchema.V1.Deal.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0),
    fiatamount: (f = msg.getFiatamount()) && proto.CoreSchema.V1.Decimal.toObject(includeInstance, f),
    cryptoamount: (f = msg.getCryptoamount()) && proto.CoreSchema.V1.Decimal.toObject(includeInstance, f),
    createdat: (f = msg.getCreatedat()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    status: jspb.Message.getFieldWithDefault(msg, 5, 0),
    completedat: (f = msg.getCompletedat()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    canceledat: (f = msg.getCanceledat()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    disputedat: (f = msg.getDisputedat()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    isfiatpayed: jspb.Message.getFieldWithDefault(msg, 10, false),
    disputeid: jspb.Message.getFieldWithDefault(msg, 11, 0),
    advertisement: (f = msg.getAdvertisement()) && proto.CoreSchema.V1.Advertisement.toObject(includeInstance, f),
    adownerinfo: (f = msg.getAdownerinfo()) && proto.CoreSchema.V1.UserInfo.toObject(includeInstance, f),
    initiator: (f = msg.getInitiator()) && proto.CoreSchema.V1.UserInfo.toObject(includeInstance, f),
    messagesList: jspb.Message.toObjectList(msg.getMessagesList(),
    proto.CoreSchema.V1.DealMessage.toObject, includeInstance),
    fee: jspb.Message.getFieldWithDefault(msg, 16, ""),
    adownerfeedbackisnull: jspb.Message.getFieldWithDefault(msg, 17, false),
    adownerfeedback: (f = msg.getAdownerfeedback()) && proto.CoreSchema.V1.Feedback.toObject(includeInstance, f),
    initiatorfeedbackisnull: jspb.Message.getFieldWithDefault(msg, 19, false),
    initiatorfeedback: (f = msg.getInitiatorfeedback()) && proto.CoreSchema.V1.Feedback.toObject(includeInstance, f),
    fiatpayedat: (f = msg.getFiatpayedat()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    paymentisnull: jspb.Message.getFieldWithDefault(msg, 22, false),
    payment: (f = msg.getPayment()) && proto.CoreSchema.V1.InvoicePayment.toObject(includeInstance, f),
    nowithdrawal: jspb.Message.getFieldWithDefault(msg, 24, false),
    promisewithdrawal: jspb.Message.getFieldWithDefault(msg, 25, ""),
    bitcoinwithdrawal: jspb.Message.getFieldWithDefault(msg, 26, ""),
    lnwithdrawal: jspb.Message.getFieldWithDefault(msg, 27, ""),
    withdrawalstatus: (f = msg.getWithdrawalstatus()) && proto.CoreSchema.V1.Deal.WithdrawalStatusMsg.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.CoreSchema.V1.Deal}
 */
proto.CoreSchema.V1.Deal.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.CoreSchema.V1.Deal;
  return proto.CoreSchema.V1.Deal.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.CoreSchema.V1.Deal} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.CoreSchema.V1.Deal}
 */
proto.CoreSchema.V1.Deal.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setId(value);
      break;
    case 2:
      var value = new proto.CoreSchema.V1.Decimal;
      reader.readMessage(value,proto.CoreSchema.V1.Decimal.deserializeBinaryFromReader);
      msg.setFiatamount(value);
      break;
    case 3:
      var value = new proto.CoreSchema.V1.Decimal;
      reader.readMessage(value,proto.CoreSchema.V1.Decimal.deserializeBinaryFromReader);
      msg.setCryptoamount(value);
      break;
    case 4:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setCreatedat(value);
      break;
    case 5:
      var value = /** @type {!proto.CoreSchema.V1.DealStatus} */ (reader.readEnum());
      msg.setStatus(value);
      break;
    case 6:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setCompletedat(value);
      break;
    case 7:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setCanceledat(value);
      break;
    case 8:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setDisputedat(value);
      break;
    case 10:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsfiatpayed(value);
      break;
    case 11:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setDisputeid(value);
      break;
    case 12:
      var value = new proto.CoreSchema.V1.Advertisement;
      reader.readMessage(value,proto.CoreSchema.V1.Advertisement.deserializeBinaryFromReader);
      msg.setAdvertisement(value);
      break;
    case 13:
      var value = new proto.CoreSchema.V1.UserInfo;
      reader.readMessage(value,proto.CoreSchema.V1.UserInfo.deserializeBinaryFromReader);
      msg.setAdownerinfo(value);
      break;
    case 14:
      var value = new proto.CoreSchema.V1.UserInfo;
      reader.readMessage(value,proto.CoreSchema.V1.UserInfo.deserializeBinaryFromReader);
      msg.setInitiator(value);
      break;
    case 15:
      var value = new proto.CoreSchema.V1.DealMessage;
      reader.readMessage(value,proto.CoreSchema.V1.DealMessage.deserializeBinaryFromReader);
      msg.addMessages(value);
      break;
    case 16:
      var value = /** @type {string} */ (reader.readString());
      msg.setFee(value);
      break;
    case 17:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setAdownerfeedbackisnull(value);
      break;
    case 18:
      var value = new proto.CoreSchema.V1.Feedback;
      reader.readMessage(value,proto.CoreSchema.V1.Feedback.deserializeBinaryFromReader);
      msg.setAdownerfeedback(value);
      break;
    case 19:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setInitiatorfeedbackisnull(value);
      break;
    case 20:
      var value = new proto.CoreSchema.V1.Feedback;
      reader.readMessage(value,proto.CoreSchema.V1.Feedback.deserializeBinaryFromReader);
      msg.setInitiatorfeedback(value);
      break;
    case 21:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setFiatpayedat(value);
      break;
    case 22:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setPaymentisnull(value);
      break;
    case 23:
      var value = new proto.CoreSchema.V1.InvoicePayment;
      reader.readMessage(value,proto.CoreSchema.V1.InvoicePayment.deserializeBinaryFromReader);
      msg.setPayment(value);
      break;
    case 24:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setNowithdrawal(value);
      break;
    case 25:
      var value = /** @type {string} */ (reader.readString());
      msg.setPromisewithdrawal(value);
      break;
    case 26:
      var value = /** @type {string} */ (reader.readString());
      msg.setBitcoinwithdrawal(value);
      break;
    case 27:
      var value = /** @type {string} */ (reader.readString());
      msg.setLnwithdrawal(value);
      break;
    case 29:
      var value = new proto.CoreSchema.V1.Deal.WithdrawalStatusMsg;
      reader.readMessage(value,proto.CoreSchema.V1.Deal.WithdrawalStatusMsg.deserializeBinaryFromReader);
      msg.setWithdrawalstatus(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.CoreSchema.V1.Deal.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.CoreSchema.V1.Deal.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.CoreSchema.V1.Deal} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.CoreSchema.V1.Deal.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeUint64(
      1,
      f
    );
  }
  f = message.getFiatamount();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.CoreSchema.V1.Decimal.serializeBinaryToWriter
    );
  }
  f = message.getCryptoamount();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.CoreSchema.V1.Decimal.serializeBinaryToWriter
    );
  }
  f = message.getCreatedat();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getStatus();
  if (f !== 0.0) {
    writer.writeEnum(
      5,
      f
    );
  }
  f = message.getCompletedat();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getCanceledat();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getDisputedat();
  if (f != null) {
    writer.writeMessage(
      8,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getIsfiatpayed();
  if (f) {
    writer.writeBool(
      10,
      f
    );
  }
  f = message.getDisputeid();
  if (f !== 0) {
    writer.writeUint64(
      11,
      f
    );
  }
  f = message.getAdvertisement();
  if (f != null) {
    writer.writeMessage(
      12,
      f,
      proto.CoreSchema.V1.Advertisement.serializeBinaryToWriter
    );
  }
  f = message.getAdownerinfo();
  if (f != null) {
    writer.writeMessage(
      13,
      f,
      proto.CoreSchema.V1.UserInfo.serializeBinaryToWriter
    );
  }
  f = message.getInitiator();
  if (f != null) {
    writer.writeMessage(
      14,
      f,
      proto.CoreSchema.V1.UserInfo.serializeBinaryToWriter
    );
  }
  f = message.getMessagesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      15,
      f,
      proto.CoreSchema.V1.DealMessage.serializeBinaryToWriter
    );
  }
  f = message.getFee();
  if (f.length > 0) {
    writer.writeString(
      16,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 17));
  if (f != null) {
    writer.writeBool(
      17,
      f
    );
  }
  f = message.getAdownerfeedback();
  if (f != null) {
    writer.writeMessage(
      18,
      f,
      proto.CoreSchema.V1.Feedback.serializeBinaryToWriter
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 19));
  if (f != null) {
    writer.writeBool(
      19,
      f
    );
  }
  f = message.getInitiatorfeedback();
  if (f != null) {
    writer.writeMessage(
      20,
      f,
      proto.CoreSchema.V1.Feedback.serializeBinaryToWriter
    );
  }
  f = message.getFiatpayedat();
  if (f != null) {
    writer.writeMessage(
      21,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 22));
  if (f != null) {
    writer.writeBool(
      22,
      f
    );
  }
  f = message.getPayment();
  if (f != null) {
    writer.writeMessage(
      23,
      f,
      proto.CoreSchema.V1.InvoicePayment.serializeBinaryToWriter
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 24));
  if (f != null) {
    writer.writeBool(
      24,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 25));
  if (f != null) {
    writer.writeString(
      25,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 26));
  if (f != null) {
    writer.writeString(
      26,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 27));
  if (f != null) {
    writer.writeString(
      27,
      f
    );
  }
  f = message.getWithdrawalstatus();
  if (f != null) {
    writer.writeMessage(
      29,
      f,
      proto.CoreSchema.V1.Deal.WithdrawalStatusMsg.serializeBinaryToWriter
    );
  }
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.CoreSchema.V1.Deal.WithdrawalStatusMsg = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.CoreSchema.V1.Deal.WithdrawalStatusMsg, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.CoreSchema.V1.Deal.WithdrawalStatusMsg.displayName = 'proto.CoreSchema.V1.Deal.WithdrawalStatusMsg';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.CoreSchema.V1.Deal.WithdrawalStatusMsg.prototype.toObject = function(opt_includeInstance) {
  return proto.CoreSchema.V1.Deal.WithdrawalStatusMsg.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.CoreSchema.V1.Deal.WithdrawalStatusMsg} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.CoreSchema.V1.Deal.WithdrawalStatusMsg.toObject = function(includeInstance, msg) {
  var f, obj = {
    status: jspb.Message.getFieldWithDefault(msg, 1, 0),
    error: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.CoreSchema.V1.Deal.WithdrawalStatusMsg}
 */
proto.CoreSchema.V1.Deal.WithdrawalStatusMsg.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.CoreSchema.V1.Deal.WithdrawalStatusMsg;
  return proto.CoreSchema.V1.Deal.WithdrawalStatusMsg.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.CoreSchema.V1.Deal.WithdrawalStatusMsg} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.CoreSchema.V1.Deal.WithdrawalStatusMsg}
 */
proto.CoreSchema.V1.Deal.WithdrawalStatusMsg.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.CoreSchema.V1.Deal.WithdrawalStatusMsg.StatusEnum} */ (reader.readEnum());
      msg.setStatus(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setError(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.CoreSchema.V1.Deal.WithdrawalStatusMsg.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.CoreSchema.V1.Deal.WithdrawalStatusMsg.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.CoreSchema.V1.Deal.WithdrawalStatusMsg} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.CoreSchema.V1.Deal.WithdrawalStatusMsg.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStatus();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getError();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.CoreSchema.V1.Deal.WithdrawalStatusMsg.StatusEnum = {
  NONE: 0,
  WAITING: 1,
  STARTED: 2,
  SUCCESS: 3,
  FAILED: 4
};

/**
 * optional StatusEnum Status = 1;
 * @return {!proto.CoreSchema.V1.Deal.WithdrawalStatusMsg.StatusEnum}
 */
proto.CoreSchema.V1.Deal.WithdrawalStatusMsg.prototype.getStatus = function() {
  return /** @type {!proto.CoreSchema.V1.Deal.WithdrawalStatusMsg.StatusEnum} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {!proto.CoreSchema.V1.Deal.WithdrawalStatusMsg.StatusEnum} value */
proto.CoreSchema.V1.Deal.WithdrawalStatusMsg.prototype.setStatus = function(value) {
  jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional string Error = 2;
 * @return {string}
 */
proto.CoreSchema.V1.Deal.WithdrawalStatusMsg.prototype.getError = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.CoreSchema.V1.Deal.WithdrawalStatusMsg.prototype.setError = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional uint64 Id = 1;
 * @return {number}
 */
proto.CoreSchema.V1.Deal.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.CoreSchema.V1.Deal.prototype.setId = function(value) {
  jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional Decimal FiatAmount = 2;
 * @return {?proto.CoreSchema.V1.Decimal}
 */
proto.CoreSchema.V1.Deal.prototype.getFiatamount = function() {
  return /** @type{?proto.CoreSchema.V1.Decimal} */ (
    jspb.Message.getWrapperField(this, proto.CoreSchema.V1.Decimal, 2));
};


/** @param {?proto.CoreSchema.V1.Decimal|undefined} value */
proto.CoreSchema.V1.Deal.prototype.setFiatamount = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.CoreSchema.V1.Deal.prototype.clearFiatamount = function() {
  this.setFiatamount(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.CoreSchema.V1.Deal.prototype.hasFiatamount = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional Decimal CryptoAmount = 3;
 * @return {?proto.CoreSchema.V1.Decimal}
 */
proto.CoreSchema.V1.Deal.prototype.getCryptoamount = function() {
  return /** @type{?proto.CoreSchema.V1.Decimal} */ (
    jspb.Message.getWrapperField(this, proto.CoreSchema.V1.Decimal, 3));
};


/** @param {?proto.CoreSchema.V1.Decimal|undefined} value */
proto.CoreSchema.V1.Deal.prototype.setCryptoamount = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


proto.CoreSchema.V1.Deal.prototype.clearCryptoamount = function() {
  this.setCryptoamount(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.CoreSchema.V1.Deal.prototype.hasCryptoamount = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional google.protobuf.Timestamp CreatedAt = 4;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.CoreSchema.V1.Deal.prototype.getCreatedat = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 4));
};


/** @param {?proto.google.protobuf.Timestamp|undefined} value */
proto.CoreSchema.V1.Deal.prototype.setCreatedat = function(value) {
  jspb.Message.setWrapperField(this, 4, value);
};


proto.CoreSchema.V1.Deal.prototype.clearCreatedat = function() {
  this.setCreatedat(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.CoreSchema.V1.Deal.prototype.hasCreatedat = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional DealStatus Status = 5;
 * @return {!proto.CoreSchema.V1.DealStatus}
 */
proto.CoreSchema.V1.Deal.prototype.getStatus = function() {
  return /** @type {!proto.CoreSchema.V1.DealStatus} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/** @param {!proto.CoreSchema.V1.DealStatus} value */
proto.CoreSchema.V1.Deal.prototype.setStatus = function(value) {
  jspb.Message.setProto3EnumField(this, 5, value);
};


/**
 * optional google.protobuf.Timestamp CompletedAt = 6;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.CoreSchema.V1.Deal.prototype.getCompletedat = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 6));
};


/** @param {?proto.google.protobuf.Timestamp|undefined} value */
proto.CoreSchema.V1.Deal.prototype.setCompletedat = function(value) {
  jspb.Message.setWrapperField(this, 6, value);
};


proto.CoreSchema.V1.Deal.prototype.clearCompletedat = function() {
  this.setCompletedat(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.CoreSchema.V1.Deal.prototype.hasCompletedat = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional google.protobuf.Timestamp CanceledAt = 7;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.CoreSchema.V1.Deal.prototype.getCanceledat = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 7));
};


/** @param {?proto.google.protobuf.Timestamp|undefined} value */
proto.CoreSchema.V1.Deal.prototype.setCanceledat = function(value) {
  jspb.Message.setWrapperField(this, 7, value);
};


proto.CoreSchema.V1.Deal.prototype.clearCanceledat = function() {
  this.setCanceledat(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.CoreSchema.V1.Deal.prototype.hasCanceledat = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional google.protobuf.Timestamp DisputedAt = 8;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.CoreSchema.V1.Deal.prototype.getDisputedat = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 8));
};


/** @param {?proto.google.protobuf.Timestamp|undefined} value */
proto.CoreSchema.V1.Deal.prototype.setDisputedat = function(value) {
  jspb.Message.setWrapperField(this, 8, value);
};


proto.CoreSchema.V1.Deal.prototype.clearDisputedat = function() {
  this.setDisputedat(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.CoreSchema.V1.Deal.prototype.hasDisputedat = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional bool IsFiatPayed = 10;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.CoreSchema.V1.Deal.prototype.getIsfiatpayed = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 10, false));
};


/** @param {boolean} value */
proto.CoreSchema.V1.Deal.prototype.setIsfiatpayed = function(value) {
  jspb.Message.setProto3BooleanField(this, 10, value);
};


/**
 * optional uint64 DisputeId = 11;
 * @return {number}
 */
proto.CoreSchema.V1.Deal.prototype.getDisputeid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 11, 0));
};


/** @param {number} value */
proto.CoreSchema.V1.Deal.prototype.setDisputeid = function(value) {
  jspb.Message.setProto3IntField(this, 11, value);
};


/**
 * optional Advertisement Advertisement = 12;
 * @return {?proto.CoreSchema.V1.Advertisement}
 */
proto.CoreSchema.V1.Deal.prototype.getAdvertisement = function() {
  return /** @type{?proto.CoreSchema.V1.Advertisement} */ (
    jspb.Message.getWrapperField(this, proto.CoreSchema.V1.Advertisement, 12));
};


/** @param {?proto.CoreSchema.V1.Advertisement|undefined} value */
proto.CoreSchema.V1.Deal.prototype.setAdvertisement = function(value) {
  jspb.Message.setWrapperField(this, 12, value);
};


proto.CoreSchema.V1.Deal.prototype.clearAdvertisement = function() {
  this.setAdvertisement(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.CoreSchema.V1.Deal.prototype.hasAdvertisement = function() {
  return jspb.Message.getField(this, 12) != null;
};


/**
 * optional UserInfo AdOwnerInfo = 13;
 * @return {?proto.CoreSchema.V1.UserInfo}
 */
proto.CoreSchema.V1.Deal.prototype.getAdownerinfo = function() {
  return /** @type{?proto.CoreSchema.V1.UserInfo} */ (
    jspb.Message.getWrapperField(this, proto.CoreSchema.V1.UserInfo, 13));
};


/** @param {?proto.CoreSchema.V1.UserInfo|undefined} value */
proto.CoreSchema.V1.Deal.prototype.setAdownerinfo = function(value) {
  jspb.Message.setWrapperField(this, 13, value);
};


proto.CoreSchema.V1.Deal.prototype.clearAdownerinfo = function() {
  this.setAdownerinfo(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.CoreSchema.V1.Deal.prototype.hasAdownerinfo = function() {
  return jspb.Message.getField(this, 13) != null;
};


/**
 * optional UserInfo Initiator = 14;
 * @return {?proto.CoreSchema.V1.UserInfo}
 */
proto.CoreSchema.V1.Deal.prototype.getInitiator = function() {
  return /** @type{?proto.CoreSchema.V1.UserInfo} */ (
    jspb.Message.getWrapperField(this, proto.CoreSchema.V1.UserInfo, 14));
};


/** @param {?proto.CoreSchema.V1.UserInfo|undefined} value */
proto.CoreSchema.V1.Deal.prototype.setInitiator = function(value) {
  jspb.Message.setWrapperField(this, 14, value);
};


proto.CoreSchema.V1.Deal.prototype.clearInitiator = function() {
  this.setInitiator(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.CoreSchema.V1.Deal.prototype.hasInitiator = function() {
  return jspb.Message.getField(this, 14) != null;
};


/**
 * repeated DealMessage Messages = 15;
 * @return {!Array<!proto.CoreSchema.V1.DealMessage>}
 */
proto.CoreSchema.V1.Deal.prototype.getMessagesList = function() {
  return /** @type{!Array<!proto.CoreSchema.V1.DealMessage>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.CoreSchema.V1.DealMessage, 15));
};


/** @param {!Array<!proto.CoreSchema.V1.DealMessage>} value */
proto.CoreSchema.V1.Deal.prototype.setMessagesList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 15, value);
};


/**
 * @param {!proto.CoreSchema.V1.DealMessage=} opt_value
 * @param {number=} opt_index
 * @return {!proto.CoreSchema.V1.DealMessage}
 */
proto.CoreSchema.V1.Deal.prototype.addMessages = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 15, opt_value, proto.CoreSchema.V1.DealMessage, opt_index);
};


proto.CoreSchema.V1.Deal.prototype.clearMessagesList = function() {
  this.setMessagesList([]);
};


/**
 * optional string Fee = 16;
 * @return {string}
 */
proto.CoreSchema.V1.Deal.prototype.getFee = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 16, ""));
};


/** @param {string} value */
proto.CoreSchema.V1.Deal.prototype.setFee = function(value) {
  jspb.Message.setProto3StringField(this, 16, value);
};


/**
 * optional bool AdOwnerFeedbackIsnull = 17;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.CoreSchema.V1.Deal.prototype.getAdownerfeedbackisnull = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 17, false));
};


/** @param {boolean} value */
proto.CoreSchema.V1.Deal.prototype.setAdownerfeedbackisnull = function(value) {
  jspb.Message.setOneofField(this, 17, proto.CoreSchema.V1.Deal.oneofGroups_[0], value);
};


proto.CoreSchema.V1.Deal.prototype.clearAdownerfeedbackisnull = function() {
  jspb.Message.setOneofField(this, 17, proto.CoreSchema.V1.Deal.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.CoreSchema.V1.Deal.prototype.hasAdownerfeedbackisnull = function() {
  return jspb.Message.getField(this, 17) != null;
};


/**
 * optional Feedback AdOwnerFeedback = 18;
 * @return {?proto.CoreSchema.V1.Feedback}
 */
proto.CoreSchema.V1.Deal.prototype.getAdownerfeedback = function() {
  return /** @type{?proto.CoreSchema.V1.Feedback} */ (
    jspb.Message.getWrapperField(this, proto.CoreSchema.V1.Feedback, 18));
};


/** @param {?proto.CoreSchema.V1.Feedback|undefined} value */
proto.CoreSchema.V1.Deal.prototype.setAdownerfeedback = function(value) {
  jspb.Message.setOneofWrapperField(this, 18, proto.CoreSchema.V1.Deal.oneofGroups_[0], value);
};


proto.CoreSchema.V1.Deal.prototype.clearAdownerfeedback = function() {
  this.setAdownerfeedback(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.CoreSchema.V1.Deal.prototype.hasAdownerfeedback = function() {
  return jspb.Message.getField(this, 18) != null;
};


/**
 * optional bool InitiatorFeedbackIsNull = 19;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.CoreSchema.V1.Deal.prototype.getInitiatorfeedbackisnull = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 19, false));
};


/** @param {boolean} value */
proto.CoreSchema.V1.Deal.prototype.setInitiatorfeedbackisnull = function(value) {
  jspb.Message.setOneofField(this, 19, proto.CoreSchema.V1.Deal.oneofGroups_[1], value);
};


proto.CoreSchema.V1.Deal.prototype.clearInitiatorfeedbackisnull = function() {
  jspb.Message.setOneofField(this, 19, proto.CoreSchema.V1.Deal.oneofGroups_[1], undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.CoreSchema.V1.Deal.prototype.hasInitiatorfeedbackisnull = function() {
  return jspb.Message.getField(this, 19) != null;
};


/**
 * optional Feedback InitiatorFeedback = 20;
 * @return {?proto.CoreSchema.V1.Feedback}
 */
proto.CoreSchema.V1.Deal.prototype.getInitiatorfeedback = function() {
  return /** @type{?proto.CoreSchema.V1.Feedback} */ (
    jspb.Message.getWrapperField(this, proto.CoreSchema.V1.Feedback, 20));
};


/** @param {?proto.CoreSchema.V1.Feedback|undefined} value */
proto.CoreSchema.V1.Deal.prototype.setInitiatorfeedback = function(value) {
  jspb.Message.setOneofWrapperField(this, 20, proto.CoreSchema.V1.Deal.oneofGroups_[1], value);
};


proto.CoreSchema.V1.Deal.prototype.clearInitiatorfeedback = function() {
  this.setInitiatorfeedback(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.CoreSchema.V1.Deal.prototype.hasInitiatorfeedback = function() {
  return jspb.Message.getField(this, 20) != null;
};


/**
 * optional google.protobuf.Timestamp FiatPayedAt = 21;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.CoreSchema.V1.Deal.prototype.getFiatpayedat = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 21));
};


/** @param {?proto.google.protobuf.Timestamp|undefined} value */
proto.CoreSchema.V1.Deal.prototype.setFiatpayedat = function(value) {
  jspb.Message.setWrapperField(this, 21, value);
};


proto.CoreSchema.V1.Deal.prototype.clearFiatpayedat = function() {
  this.setFiatpayedat(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.CoreSchema.V1.Deal.prototype.hasFiatpayedat = function() {
  return jspb.Message.getField(this, 21) != null;
};


/**
 * optional bool PaymentIsNull = 22;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.CoreSchema.V1.Deal.prototype.getPaymentisnull = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 22, false));
};


/** @param {boolean} value */
proto.CoreSchema.V1.Deal.prototype.setPaymentisnull = function(value) {
  jspb.Message.setOneofField(this, 22, proto.CoreSchema.V1.Deal.oneofGroups_[2], value);
};


proto.CoreSchema.V1.Deal.prototype.clearPaymentisnull = function() {
  jspb.Message.setOneofField(this, 22, proto.CoreSchema.V1.Deal.oneofGroups_[2], undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.CoreSchema.V1.Deal.prototype.hasPaymentisnull = function() {
  return jspb.Message.getField(this, 22) != null;
};


/**
 * optional InvoicePayment Payment = 23;
 * @return {?proto.CoreSchema.V1.InvoicePayment}
 */
proto.CoreSchema.V1.Deal.prototype.getPayment = function() {
  return /** @type{?proto.CoreSchema.V1.InvoicePayment} */ (
    jspb.Message.getWrapperField(this, proto.CoreSchema.V1.InvoicePayment, 23));
};


/** @param {?proto.CoreSchema.V1.InvoicePayment|undefined} value */
proto.CoreSchema.V1.Deal.prototype.setPayment = function(value) {
  jspb.Message.setOneofWrapperField(this, 23, proto.CoreSchema.V1.Deal.oneofGroups_[2], value);
};


proto.CoreSchema.V1.Deal.prototype.clearPayment = function() {
  this.setPayment(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.CoreSchema.V1.Deal.prototype.hasPayment = function() {
  return jspb.Message.getField(this, 23) != null;
};


/**
 * optional bool NoWithdrawal = 24;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.CoreSchema.V1.Deal.prototype.getNowithdrawal = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 24, false));
};


/** @param {boolean} value */
proto.CoreSchema.V1.Deal.prototype.setNowithdrawal = function(value) {
  jspb.Message.setOneofField(this, 24, proto.CoreSchema.V1.Deal.oneofGroups_[3], value);
};


proto.CoreSchema.V1.Deal.prototype.clearNowithdrawal = function() {
  jspb.Message.setOneofField(this, 24, proto.CoreSchema.V1.Deal.oneofGroups_[3], undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.CoreSchema.V1.Deal.prototype.hasNowithdrawal = function() {
  return jspb.Message.getField(this, 24) != null;
};


/**
 * optional string PromiseWithdrawal = 25;
 * @return {string}
 */
proto.CoreSchema.V1.Deal.prototype.getPromisewithdrawal = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 25, ""));
};


/** @param {string} value */
proto.CoreSchema.V1.Deal.prototype.setPromisewithdrawal = function(value) {
  jspb.Message.setOneofField(this, 25, proto.CoreSchema.V1.Deal.oneofGroups_[3], value);
};


proto.CoreSchema.V1.Deal.prototype.clearPromisewithdrawal = function() {
  jspb.Message.setOneofField(this, 25, proto.CoreSchema.V1.Deal.oneofGroups_[3], undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.CoreSchema.V1.Deal.prototype.hasPromisewithdrawal = function() {
  return jspb.Message.getField(this, 25) != null;
};


/**
 * optional string BitcoinWithdrawal = 26;
 * @return {string}
 */
proto.CoreSchema.V1.Deal.prototype.getBitcoinwithdrawal = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 26, ""));
};


/** @param {string} value */
proto.CoreSchema.V1.Deal.prototype.setBitcoinwithdrawal = function(value) {
  jspb.Message.setOneofField(this, 26, proto.CoreSchema.V1.Deal.oneofGroups_[3], value);
};


proto.CoreSchema.V1.Deal.prototype.clearBitcoinwithdrawal = function() {
  jspb.Message.setOneofField(this, 26, proto.CoreSchema.V1.Deal.oneofGroups_[3], undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.CoreSchema.V1.Deal.prototype.hasBitcoinwithdrawal = function() {
  return jspb.Message.getField(this, 26) != null;
};


/**
 * optional string LnWithdrawal = 27;
 * @return {string}
 */
proto.CoreSchema.V1.Deal.prototype.getLnwithdrawal = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 27, ""));
};


/** @param {string} value */
proto.CoreSchema.V1.Deal.prototype.setLnwithdrawal = function(value) {
  jspb.Message.setOneofField(this, 27, proto.CoreSchema.V1.Deal.oneofGroups_[3], value);
};


proto.CoreSchema.V1.Deal.prototype.clearLnwithdrawal = function() {
  jspb.Message.setOneofField(this, 27, proto.CoreSchema.V1.Deal.oneofGroups_[3], undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.CoreSchema.V1.Deal.prototype.hasLnwithdrawal = function() {
  return jspb.Message.getField(this, 27) != null;
};


/**
 * optional WithdrawalStatusMsg WithdrawalStatus = 29;
 * @return {?proto.CoreSchema.V1.Deal.WithdrawalStatusMsg}
 */
proto.CoreSchema.V1.Deal.prototype.getWithdrawalstatus = function() {
  return /** @type{?proto.CoreSchema.V1.Deal.WithdrawalStatusMsg} */ (
    jspb.Message.getWrapperField(this, proto.CoreSchema.V1.Deal.WithdrawalStatusMsg, 29));
};


/** @param {?proto.CoreSchema.V1.Deal.WithdrawalStatusMsg|undefined} value */
proto.CoreSchema.V1.Deal.prototype.setWithdrawalstatus = function(value) {
  jspb.Message.setWrapperField(this, 29, value);
};


proto.CoreSchema.V1.Deal.prototype.clearWithdrawalstatus = function() {
  this.setWithdrawalstatus(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.CoreSchema.V1.Deal.prototype.hasWithdrawalstatus = function() {
  return jspb.Message.getField(this, 29) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.CoreSchema.V1.GetMyDealsRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.CoreSchema.V1.GetMyDealsRequest.repeatedFields_, null);
};
goog.inherits(proto.CoreSchema.V1.GetMyDealsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.CoreSchema.V1.GetMyDealsRequest.displayName = 'proto.CoreSchema.V1.GetMyDealsRequest';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.CoreSchema.V1.GetMyDealsRequest.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.CoreSchema.V1.GetMyDealsRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.CoreSchema.V1.GetMyDealsRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.CoreSchema.V1.GetMyDealsRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.CoreSchema.V1.GetMyDealsRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    statusList: jspb.Message.getRepeatedField(msg, 1),
    dealid: jspb.Message.getFieldWithDefault(msg, 2, 0),
    loadcount: jspb.Message.getFieldWithDefault(msg, 3, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.CoreSchema.V1.GetMyDealsRequest}
 */
proto.CoreSchema.V1.GetMyDealsRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.CoreSchema.V1.GetMyDealsRequest;
  return proto.CoreSchema.V1.GetMyDealsRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.CoreSchema.V1.GetMyDealsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.CoreSchema.V1.GetMyDealsRequest}
 */
proto.CoreSchema.V1.GetMyDealsRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Array<!proto.CoreSchema.V1.DealStatus>} */ (reader.readPackedEnum());
      msg.setStatusList(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setDealid(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setLoadcount(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.CoreSchema.V1.GetMyDealsRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.CoreSchema.V1.GetMyDealsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.CoreSchema.V1.GetMyDealsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.CoreSchema.V1.GetMyDealsRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStatusList();
  if (f.length > 0) {
    writer.writePackedEnum(
      1,
      f
    );
  }
  f = message.getDealid();
  if (f !== 0) {
    writer.writeUint64(
      2,
      f
    );
  }
  f = message.getLoadcount();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
};


/**
 * repeated DealStatus Status = 1;
 * @return {!Array<!proto.CoreSchema.V1.DealStatus>}
 */
proto.CoreSchema.V1.GetMyDealsRequest.prototype.getStatusList = function() {
  return /** @type {!Array<!proto.CoreSchema.V1.DealStatus>} */ (jspb.Message.getRepeatedField(this, 1));
};


/** @param {!Array<!proto.CoreSchema.V1.DealStatus>} value */
proto.CoreSchema.V1.GetMyDealsRequest.prototype.setStatusList = function(value) {
  jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {!proto.CoreSchema.V1.DealStatus} value
 * @param {number=} opt_index
 */
proto.CoreSchema.V1.GetMyDealsRequest.prototype.addStatus = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


proto.CoreSchema.V1.GetMyDealsRequest.prototype.clearStatusList = function() {
  this.setStatusList([]);
};


/**
 * optional uint64 DealId = 2;
 * @return {number}
 */
proto.CoreSchema.V1.GetMyDealsRequest.prototype.getDealid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.CoreSchema.V1.GetMyDealsRequest.prototype.setDealid = function(value) {
  jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int32 LoadCount = 3;
 * @return {number}
 */
proto.CoreSchema.V1.GetMyDealsRequest.prototype.getLoadcount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/** @param {number} value */
proto.CoreSchema.V1.GetMyDealsRequest.prototype.setLoadcount = function(value) {
  jspb.Message.setProto3IntField(this, 3, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.CoreSchema.V1.GetMyDealsResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.CoreSchema.V1.GetMyDealsResponse.repeatedFields_, null);
};
goog.inherits(proto.CoreSchema.V1.GetMyDealsResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.CoreSchema.V1.GetMyDealsResponse.displayName = 'proto.CoreSchema.V1.GetMyDealsResponse';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.CoreSchema.V1.GetMyDealsResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.CoreSchema.V1.GetMyDealsResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.CoreSchema.V1.GetMyDealsResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.CoreSchema.V1.GetMyDealsResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.CoreSchema.V1.GetMyDealsResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    dealsList: jspb.Message.toObjectList(msg.getDealsList(),
    proto.CoreSchema.V1.Deal.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.CoreSchema.V1.GetMyDealsResponse}
 */
proto.CoreSchema.V1.GetMyDealsResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.CoreSchema.V1.GetMyDealsResponse;
  return proto.CoreSchema.V1.GetMyDealsResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.CoreSchema.V1.GetMyDealsResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.CoreSchema.V1.GetMyDealsResponse}
 */
proto.CoreSchema.V1.GetMyDealsResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.CoreSchema.V1.Deal;
      reader.readMessage(value,proto.CoreSchema.V1.Deal.deserializeBinaryFromReader);
      msg.addDeals(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.CoreSchema.V1.GetMyDealsResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.CoreSchema.V1.GetMyDealsResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.CoreSchema.V1.GetMyDealsResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.CoreSchema.V1.GetMyDealsResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDealsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.CoreSchema.V1.Deal.serializeBinaryToWriter
    );
  }
};


/**
 * repeated Deal Deals = 1;
 * @return {!Array<!proto.CoreSchema.V1.Deal>}
 */
proto.CoreSchema.V1.GetMyDealsResponse.prototype.getDealsList = function() {
  return /** @type{!Array<!proto.CoreSchema.V1.Deal>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.CoreSchema.V1.Deal, 1));
};


/** @param {!Array<!proto.CoreSchema.V1.Deal>} value */
proto.CoreSchema.V1.GetMyDealsResponse.prototype.setDealsList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.CoreSchema.V1.Deal=} opt_value
 * @param {number=} opt_index
 * @return {!proto.CoreSchema.V1.Deal}
 */
proto.CoreSchema.V1.GetMyDealsResponse.prototype.addDeals = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.CoreSchema.V1.Deal, opt_index);
};


proto.CoreSchema.V1.GetMyDealsResponse.prototype.clearDealsList = function() {
  this.setDealsList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.CoreSchema.V1.CreateDealRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.CoreSchema.V1.CreateDealRequest.oneofGroups_);
};
goog.inherits(proto.CoreSchema.V1.CreateDealRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.CoreSchema.V1.CreateDealRequest.displayName = 'proto.CoreSchema.V1.CreateDealRequest';
}
/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.CoreSchema.V1.CreateDealRequest.oneofGroups_ = [[2,3]];

/**
 * @enum {number}
 */
proto.CoreSchema.V1.CreateDealRequest.AmountCase = {
  AMOUNT_NOT_SET: 0,
  FIATAMOUNT: 2,
  CRYPTOAMOUNT: 3
};

/**
 * @return {proto.CoreSchema.V1.CreateDealRequest.AmountCase}
 */
proto.CoreSchema.V1.CreateDealRequest.prototype.getAmountCase = function() {
  return /** @type {proto.CoreSchema.V1.CreateDealRequest.AmountCase} */(jspb.Message.computeOneofCase(this, proto.CoreSchema.V1.CreateDealRequest.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.CoreSchema.V1.CreateDealRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.CoreSchema.V1.CreateDealRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.CoreSchema.V1.CreateDealRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.CoreSchema.V1.CreateDealRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    advertisementid: jspb.Message.getFieldWithDefault(msg, 1, 0),
    fiatamount: (f = msg.getFiatamount()) && proto.CoreSchema.V1.Decimal.toObject(includeInstance, f),
    cryptoamount: (f = msg.getCryptoamount()) && proto.CoreSchema.V1.Decimal.toObject(includeInstance, f),
    sellpromise: jspb.Message.getFieldWithDefault(msg, 4, ""),
    buypromise: jspb.Message.getFieldWithDefault(msg, 5, false),
    promisepassword: jspb.Message.getFieldWithDefault(msg, 6, ""),
    btcwallet: jspb.Message.getFieldWithDefault(msg, 7, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.CoreSchema.V1.CreateDealRequest}
 */
proto.CoreSchema.V1.CreateDealRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.CoreSchema.V1.CreateDealRequest;
  return proto.CoreSchema.V1.CreateDealRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.CoreSchema.V1.CreateDealRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.CoreSchema.V1.CreateDealRequest}
 */
proto.CoreSchema.V1.CreateDealRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setAdvertisementid(value);
      break;
    case 2:
      var value = new proto.CoreSchema.V1.Decimal;
      reader.readMessage(value,proto.CoreSchema.V1.Decimal.deserializeBinaryFromReader);
      msg.setFiatamount(value);
      break;
    case 3:
      var value = new proto.CoreSchema.V1.Decimal;
      reader.readMessage(value,proto.CoreSchema.V1.Decimal.deserializeBinaryFromReader);
      msg.setCryptoamount(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setSellpromise(value);
      break;
    case 5:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setBuypromise(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setPromisepassword(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setBtcwallet(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.CoreSchema.V1.CreateDealRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.CoreSchema.V1.CreateDealRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.CoreSchema.V1.CreateDealRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.CoreSchema.V1.CreateDealRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAdvertisementid();
  if (f !== 0) {
    writer.writeUint64(
      1,
      f
    );
  }
  f = message.getFiatamount();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.CoreSchema.V1.Decimal.serializeBinaryToWriter
    );
  }
  f = message.getCryptoamount();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.CoreSchema.V1.Decimal.serializeBinaryToWriter
    );
  }
  f = message.getSellpromise();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getBuypromise();
  if (f) {
    writer.writeBool(
      5,
      f
    );
  }
  f = message.getPromisepassword();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getBtcwallet();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
};


/**
 * optional uint64 AdvertisementId = 1;
 * @return {number}
 */
proto.CoreSchema.V1.CreateDealRequest.prototype.getAdvertisementid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.CoreSchema.V1.CreateDealRequest.prototype.setAdvertisementid = function(value) {
  jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional Decimal FiatAmount = 2;
 * @return {?proto.CoreSchema.V1.Decimal}
 */
proto.CoreSchema.V1.CreateDealRequest.prototype.getFiatamount = function() {
  return /** @type{?proto.CoreSchema.V1.Decimal} */ (
    jspb.Message.getWrapperField(this, proto.CoreSchema.V1.Decimal, 2));
};


/** @param {?proto.CoreSchema.V1.Decimal|undefined} value */
proto.CoreSchema.V1.CreateDealRequest.prototype.setFiatamount = function(value) {
  jspb.Message.setOneofWrapperField(this, 2, proto.CoreSchema.V1.CreateDealRequest.oneofGroups_[0], value);
};


proto.CoreSchema.V1.CreateDealRequest.prototype.clearFiatamount = function() {
  this.setFiatamount(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.CoreSchema.V1.CreateDealRequest.prototype.hasFiatamount = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional Decimal CryptoAmount = 3;
 * @return {?proto.CoreSchema.V1.Decimal}
 */
proto.CoreSchema.V1.CreateDealRequest.prototype.getCryptoamount = function() {
  return /** @type{?proto.CoreSchema.V1.Decimal} */ (
    jspb.Message.getWrapperField(this, proto.CoreSchema.V1.Decimal, 3));
};


/** @param {?proto.CoreSchema.V1.Decimal|undefined} value */
proto.CoreSchema.V1.CreateDealRequest.prototype.setCryptoamount = function(value) {
  jspb.Message.setOneofWrapperField(this, 3, proto.CoreSchema.V1.CreateDealRequest.oneofGroups_[0], value);
};


proto.CoreSchema.V1.CreateDealRequest.prototype.clearCryptoamount = function() {
  this.setCryptoamount(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.CoreSchema.V1.CreateDealRequest.prototype.hasCryptoamount = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional string SellPromise = 4;
 * @return {string}
 */
proto.CoreSchema.V1.CreateDealRequest.prototype.getSellpromise = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/** @param {string} value */
proto.CoreSchema.V1.CreateDealRequest.prototype.setSellpromise = function(value) {
  jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional bool BuyPromise = 5;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.CoreSchema.V1.CreateDealRequest.prototype.getBuypromise = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 5, false));
};


/** @param {boolean} value */
proto.CoreSchema.V1.CreateDealRequest.prototype.setBuypromise = function(value) {
  jspb.Message.setProto3BooleanField(this, 5, value);
};


/**
 * optional string PromisePassword = 6;
 * @return {string}
 */
proto.CoreSchema.V1.CreateDealRequest.prototype.getPromisepassword = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/** @param {string} value */
proto.CoreSchema.V1.CreateDealRequest.prototype.setPromisepassword = function(value) {
  jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string BtcWallet = 7;
 * @return {string}
 */
proto.CoreSchema.V1.CreateDealRequest.prototype.getBtcwallet = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/** @param {string} value */
proto.CoreSchema.V1.CreateDealRequest.prototype.setBtcwallet = function(value) {
  jspb.Message.setProto3StringField(this, 7, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.CoreSchema.V1.CreateDealLnBuyRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.CoreSchema.V1.CreateDealLnBuyRequest.oneofGroups_);
};
goog.inherits(proto.CoreSchema.V1.CreateDealLnBuyRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.CoreSchema.V1.CreateDealLnBuyRequest.displayName = 'proto.CoreSchema.V1.CreateDealLnBuyRequest';
}
/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.CoreSchema.V1.CreateDealLnBuyRequest.oneofGroups_ = [[3,4,5]];

/**
 * @enum {number}
 */
proto.CoreSchema.V1.CreateDealLnBuyRequest.NullableamountCase = {
  NULLABLEAMOUNT_NOT_SET: 0,
  FIATAMOUNT: 3,
  CRYPTOAMOUNT: 4,
  AMOUNTISNULL: 5
};

/**
 * @return {proto.CoreSchema.V1.CreateDealLnBuyRequest.NullableamountCase}
 */
proto.CoreSchema.V1.CreateDealLnBuyRequest.prototype.getNullableamountCase = function() {
  return /** @type {proto.CoreSchema.V1.CreateDealLnBuyRequest.NullableamountCase} */(jspb.Message.computeOneofCase(this, proto.CoreSchema.V1.CreateDealLnBuyRequest.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.CoreSchema.V1.CreateDealLnBuyRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.CoreSchema.V1.CreateDealLnBuyRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.CoreSchema.V1.CreateDealLnBuyRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.CoreSchema.V1.CreateDealLnBuyRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    advertisementid: jspb.Message.getFieldWithDefault(msg, 1, 0),
    lninvoice: jspb.Message.getFieldWithDefault(msg, 2, ""),
    fiatamount: (f = msg.getFiatamount()) && proto.CoreSchema.V1.Decimal.toObject(includeInstance, f),
    cryptoamount: (f = msg.getCryptoamount()) && proto.CoreSchema.V1.Decimal.toObject(includeInstance, f),
    amountisnull: jspb.Message.getFieldWithDefault(msg, 5, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.CoreSchema.V1.CreateDealLnBuyRequest}
 */
proto.CoreSchema.V1.CreateDealLnBuyRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.CoreSchema.V1.CreateDealLnBuyRequest;
  return proto.CoreSchema.V1.CreateDealLnBuyRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.CoreSchema.V1.CreateDealLnBuyRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.CoreSchema.V1.CreateDealLnBuyRequest}
 */
proto.CoreSchema.V1.CreateDealLnBuyRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setAdvertisementid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setLninvoice(value);
      break;
    case 3:
      var value = new proto.CoreSchema.V1.Decimal;
      reader.readMessage(value,proto.CoreSchema.V1.Decimal.deserializeBinaryFromReader);
      msg.setFiatamount(value);
      break;
    case 4:
      var value = new proto.CoreSchema.V1.Decimal;
      reader.readMessage(value,proto.CoreSchema.V1.Decimal.deserializeBinaryFromReader);
      msg.setCryptoamount(value);
      break;
    case 5:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setAmountisnull(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.CoreSchema.V1.CreateDealLnBuyRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.CoreSchema.V1.CreateDealLnBuyRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.CoreSchema.V1.CreateDealLnBuyRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.CoreSchema.V1.CreateDealLnBuyRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAdvertisementid();
  if (f !== 0) {
    writer.writeUint64(
      1,
      f
    );
  }
  f = message.getLninvoice();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getFiatamount();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.CoreSchema.V1.Decimal.serializeBinaryToWriter
    );
  }
  f = message.getCryptoamount();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.CoreSchema.V1.Decimal.serializeBinaryToWriter
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeBool(
      5,
      f
    );
  }
};


/**
 * optional uint64 AdvertisementId = 1;
 * @return {number}
 */
proto.CoreSchema.V1.CreateDealLnBuyRequest.prototype.getAdvertisementid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.CoreSchema.V1.CreateDealLnBuyRequest.prototype.setAdvertisementid = function(value) {
  jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string LnInvoice = 2;
 * @return {string}
 */
proto.CoreSchema.V1.CreateDealLnBuyRequest.prototype.getLninvoice = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.CoreSchema.V1.CreateDealLnBuyRequest.prototype.setLninvoice = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional Decimal FiatAmount = 3;
 * @return {?proto.CoreSchema.V1.Decimal}
 */
proto.CoreSchema.V1.CreateDealLnBuyRequest.prototype.getFiatamount = function() {
  return /** @type{?proto.CoreSchema.V1.Decimal} */ (
    jspb.Message.getWrapperField(this, proto.CoreSchema.V1.Decimal, 3));
};


/** @param {?proto.CoreSchema.V1.Decimal|undefined} value */
proto.CoreSchema.V1.CreateDealLnBuyRequest.prototype.setFiatamount = function(value) {
  jspb.Message.setOneofWrapperField(this, 3, proto.CoreSchema.V1.CreateDealLnBuyRequest.oneofGroups_[0], value);
};


proto.CoreSchema.V1.CreateDealLnBuyRequest.prototype.clearFiatamount = function() {
  this.setFiatamount(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.CoreSchema.V1.CreateDealLnBuyRequest.prototype.hasFiatamount = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional Decimal CryptoAmount = 4;
 * @return {?proto.CoreSchema.V1.Decimal}
 */
proto.CoreSchema.V1.CreateDealLnBuyRequest.prototype.getCryptoamount = function() {
  return /** @type{?proto.CoreSchema.V1.Decimal} */ (
    jspb.Message.getWrapperField(this, proto.CoreSchema.V1.Decimal, 4));
};


/** @param {?proto.CoreSchema.V1.Decimal|undefined} value */
proto.CoreSchema.V1.CreateDealLnBuyRequest.prototype.setCryptoamount = function(value) {
  jspb.Message.setOneofWrapperField(this, 4, proto.CoreSchema.V1.CreateDealLnBuyRequest.oneofGroups_[0], value);
};


proto.CoreSchema.V1.CreateDealLnBuyRequest.prototype.clearCryptoamount = function() {
  this.setCryptoamount(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.CoreSchema.V1.CreateDealLnBuyRequest.prototype.hasCryptoamount = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional bool AmountIsNull = 5;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.CoreSchema.V1.CreateDealLnBuyRequest.prototype.getAmountisnull = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 5, false));
};


/** @param {boolean} value */
proto.CoreSchema.V1.CreateDealLnBuyRequest.prototype.setAmountisnull = function(value) {
  jspb.Message.setOneofField(this, 5, proto.CoreSchema.V1.CreateDealLnBuyRequest.oneofGroups_[0], value);
};


proto.CoreSchema.V1.CreateDealLnBuyRequest.prototype.clearAmountisnull = function() {
  jspb.Message.setOneofField(this, 5, proto.CoreSchema.V1.CreateDealLnBuyRequest.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.CoreSchema.V1.CreateDealLnBuyRequest.prototype.hasAmountisnull = function() {
  return jspb.Message.getField(this, 5) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.CoreSchema.V1.CreateDealLnSellRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.CoreSchema.V1.CreateDealLnSellRequest.oneofGroups_);
};
goog.inherits(proto.CoreSchema.V1.CreateDealLnSellRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.CoreSchema.V1.CreateDealLnSellRequest.displayName = 'proto.CoreSchema.V1.CreateDealLnSellRequest';
}
/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.CoreSchema.V1.CreateDealLnSellRequest.oneofGroups_ = [[2,3]];

/**
 * @enum {number}
 */
proto.CoreSchema.V1.CreateDealLnSellRequest.AmountCase = {
  AMOUNT_NOT_SET: 0,
  FIATAMOUNT: 2,
  CRYPTOAMOUNT: 3
};

/**
 * @return {proto.CoreSchema.V1.CreateDealLnSellRequest.AmountCase}
 */
proto.CoreSchema.V1.CreateDealLnSellRequest.prototype.getAmountCase = function() {
  return /** @type {proto.CoreSchema.V1.CreateDealLnSellRequest.AmountCase} */(jspb.Message.computeOneofCase(this, proto.CoreSchema.V1.CreateDealLnSellRequest.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.CoreSchema.V1.CreateDealLnSellRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.CoreSchema.V1.CreateDealLnSellRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.CoreSchema.V1.CreateDealLnSellRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.CoreSchema.V1.CreateDealLnSellRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    advertisementid: jspb.Message.getFieldWithDefault(msg, 1, 0),
    fiatamount: (f = msg.getFiatamount()) && proto.CoreSchema.V1.Decimal.toObject(includeInstance, f),
    cryptoamount: (f = msg.getCryptoamount()) && proto.CoreSchema.V1.Decimal.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.CoreSchema.V1.CreateDealLnSellRequest}
 */
proto.CoreSchema.V1.CreateDealLnSellRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.CoreSchema.V1.CreateDealLnSellRequest;
  return proto.CoreSchema.V1.CreateDealLnSellRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.CoreSchema.V1.CreateDealLnSellRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.CoreSchema.V1.CreateDealLnSellRequest}
 */
proto.CoreSchema.V1.CreateDealLnSellRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setAdvertisementid(value);
      break;
    case 2:
      var value = new proto.CoreSchema.V1.Decimal;
      reader.readMessage(value,proto.CoreSchema.V1.Decimal.deserializeBinaryFromReader);
      msg.setFiatamount(value);
      break;
    case 3:
      var value = new proto.CoreSchema.V1.Decimal;
      reader.readMessage(value,proto.CoreSchema.V1.Decimal.deserializeBinaryFromReader);
      msg.setCryptoamount(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.CoreSchema.V1.CreateDealLnSellRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.CoreSchema.V1.CreateDealLnSellRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.CoreSchema.V1.CreateDealLnSellRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.CoreSchema.V1.CreateDealLnSellRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAdvertisementid();
  if (f !== 0) {
    writer.writeUint64(
      1,
      f
    );
  }
  f = message.getFiatamount();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.CoreSchema.V1.Decimal.serializeBinaryToWriter
    );
  }
  f = message.getCryptoamount();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.CoreSchema.V1.Decimal.serializeBinaryToWriter
    );
  }
};


/**
 * optional uint64 AdvertisementId = 1;
 * @return {number}
 */
proto.CoreSchema.V1.CreateDealLnSellRequest.prototype.getAdvertisementid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.CoreSchema.V1.CreateDealLnSellRequest.prototype.setAdvertisementid = function(value) {
  jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional Decimal FiatAmount = 2;
 * @return {?proto.CoreSchema.V1.Decimal}
 */
proto.CoreSchema.V1.CreateDealLnSellRequest.prototype.getFiatamount = function() {
  return /** @type{?proto.CoreSchema.V1.Decimal} */ (
    jspb.Message.getWrapperField(this, proto.CoreSchema.V1.Decimal, 2));
};


/** @param {?proto.CoreSchema.V1.Decimal|undefined} value */
proto.CoreSchema.V1.CreateDealLnSellRequest.prototype.setFiatamount = function(value) {
  jspb.Message.setOneofWrapperField(this, 2, proto.CoreSchema.V1.CreateDealLnSellRequest.oneofGroups_[0], value);
};


proto.CoreSchema.V1.CreateDealLnSellRequest.prototype.clearFiatamount = function() {
  this.setFiatamount(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.CoreSchema.V1.CreateDealLnSellRequest.prototype.hasFiatamount = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional Decimal CryptoAmount = 3;
 * @return {?proto.CoreSchema.V1.Decimal}
 */
proto.CoreSchema.V1.CreateDealLnSellRequest.prototype.getCryptoamount = function() {
  return /** @type{?proto.CoreSchema.V1.Decimal} */ (
    jspb.Message.getWrapperField(this, proto.CoreSchema.V1.Decimal, 3));
};


/** @param {?proto.CoreSchema.V1.Decimal|undefined} value */
proto.CoreSchema.V1.CreateDealLnSellRequest.prototype.setCryptoamount = function(value) {
  jspb.Message.setOneofWrapperField(this, 3, proto.CoreSchema.V1.CreateDealLnSellRequest.oneofGroups_[0], value);
};


proto.CoreSchema.V1.CreateDealLnSellRequest.prototype.clearCryptoamount = function() {
  this.setCryptoamount(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.CoreSchema.V1.CreateDealLnSellRequest.prototype.hasCryptoamount = function() {
  return jspb.Message.getField(this, 3) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.CoreSchema.V1.GetDealByIdRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.CoreSchema.V1.GetDealByIdRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.CoreSchema.V1.GetDealByIdRequest.displayName = 'proto.CoreSchema.V1.GetDealByIdRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.CoreSchema.V1.GetDealByIdRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.CoreSchema.V1.GetDealByIdRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.CoreSchema.V1.GetDealByIdRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.CoreSchema.V1.GetDealByIdRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.CoreSchema.V1.GetDealByIdRequest}
 */
proto.CoreSchema.V1.GetDealByIdRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.CoreSchema.V1.GetDealByIdRequest;
  return proto.CoreSchema.V1.GetDealByIdRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.CoreSchema.V1.GetDealByIdRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.CoreSchema.V1.GetDealByIdRequest}
 */
proto.CoreSchema.V1.GetDealByIdRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.CoreSchema.V1.GetDealByIdRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.CoreSchema.V1.GetDealByIdRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.CoreSchema.V1.GetDealByIdRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.CoreSchema.V1.GetDealByIdRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeUint64(
      1,
      f
    );
  }
};


/**
 * optional uint64 Id = 1;
 * @return {number}
 */
proto.CoreSchema.V1.GetDealByIdRequest.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.CoreSchema.V1.GetDealByIdRequest.prototype.setId = function(value) {
  jspb.Message.setProto3IntField(this, 1, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.CoreSchema.V1.SendMessageRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.CoreSchema.V1.SendMessageRequest.repeatedFields_, null);
};
goog.inherits(proto.CoreSchema.V1.SendMessageRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.CoreSchema.V1.SendMessageRequest.displayName = 'proto.CoreSchema.V1.SendMessageRequest';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.CoreSchema.V1.SendMessageRequest.repeatedFields_ = [3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.CoreSchema.V1.SendMessageRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.CoreSchema.V1.SendMessageRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.CoreSchema.V1.SendMessageRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.CoreSchema.V1.SendMessageRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    dealid: jspb.Message.getFieldWithDefault(msg, 1, 0),
    text: jspb.Message.getFieldWithDefault(msg, 2, ""),
    imageidsList: jspb.Message.getRepeatedField(msg, 3)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.CoreSchema.V1.SendMessageRequest}
 */
proto.CoreSchema.V1.SendMessageRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.CoreSchema.V1.SendMessageRequest;
  return proto.CoreSchema.V1.SendMessageRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.CoreSchema.V1.SendMessageRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.CoreSchema.V1.SendMessageRequest}
 */
proto.CoreSchema.V1.SendMessageRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setDealid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setText(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.addImageids(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.CoreSchema.V1.SendMessageRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.CoreSchema.V1.SendMessageRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.CoreSchema.V1.SendMessageRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.CoreSchema.V1.SendMessageRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDealid();
  if (f !== 0) {
    writer.writeUint64(
      1,
      f
    );
  }
  f = message.getText();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getImageidsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      3,
      f
    );
  }
};


/**
 * optional uint64 DealId = 1;
 * @return {number}
 */
proto.CoreSchema.V1.SendMessageRequest.prototype.getDealid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.CoreSchema.V1.SendMessageRequest.prototype.setDealid = function(value) {
  jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string Text = 2;
 * @return {string}
 */
proto.CoreSchema.V1.SendMessageRequest.prototype.getText = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.CoreSchema.V1.SendMessageRequest.prototype.setText = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * repeated string ImageIds = 3;
 * @return {!Array<string>}
 */
proto.CoreSchema.V1.SendMessageRequest.prototype.getImageidsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 3));
};


/** @param {!Array<string>} value */
proto.CoreSchema.V1.SendMessageRequest.prototype.setImageidsList = function(value) {
  jspb.Message.setField(this, 3, value || []);
};


/**
 * @param {!string} value
 * @param {number=} opt_index
 */
proto.CoreSchema.V1.SendMessageRequest.prototype.addImageids = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 3, value, opt_index);
};


proto.CoreSchema.V1.SendMessageRequest.prototype.clearImageidsList = function() {
  this.setImageidsList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.CoreSchema.V1.SendMessageResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.CoreSchema.V1.SendMessageResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.CoreSchema.V1.SendMessageResponse.displayName = 'proto.CoreSchema.V1.SendMessageResponse';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.CoreSchema.V1.SendMessageResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.CoreSchema.V1.SendMessageResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.CoreSchema.V1.SendMessageResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.CoreSchema.V1.SendMessageResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    message: (f = msg.getMessage()) && proto.CoreSchema.V1.DealMessage.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.CoreSchema.V1.SendMessageResponse}
 */
proto.CoreSchema.V1.SendMessageResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.CoreSchema.V1.SendMessageResponse;
  return proto.CoreSchema.V1.SendMessageResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.CoreSchema.V1.SendMessageResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.CoreSchema.V1.SendMessageResponse}
 */
proto.CoreSchema.V1.SendMessageResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.CoreSchema.V1.DealMessage;
      reader.readMessage(value,proto.CoreSchema.V1.DealMessage.deserializeBinaryFromReader);
      msg.setMessage(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.CoreSchema.V1.SendMessageResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.CoreSchema.V1.SendMessageResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.CoreSchema.V1.SendMessageResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.CoreSchema.V1.SendMessageResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMessage();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.CoreSchema.V1.DealMessage.serializeBinaryToWriter
    );
  }
};


/**
 * optional DealMessage Message = 1;
 * @return {?proto.CoreSchema.V1.DealMessage}
 */
proto.CoreSchema.V1.SendMessageResponse.prototype.getMessage = function() {
  return /** @type{?proto.CoreSchema.V1.DealMessage} */ (
    jspb.Message.getWrapperField(this, proto.CoreSchema.V1.DealMessage, 1));
};


/** @param {?proto.CoreSchema.V1.DealMessage|undefined} value */
proto.CoreSchema.V1.SendMessageResponse.prototype.setMessage = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.CoreSchema.V1.SendMessageResponse.prototype.clearMessage = function() {
  this.setMessage(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.CoreSchema.V1.SendMessageResponse.prototype.hasMessage = function() {
  return jspb.Message.getField(this, 1) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.CoreSchema.V1.Balance = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.CoreSchema.V1.Balance, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.CoreSchema.V1.Balance.displayName = 'proto.CoreSchema.V1.Balance';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.CoreSchema.V1.Balance.prototype.toObject = function(opt_includeInstance) {
  return proto.CoreSchema.V1.Balance.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.CoreSchema.V1.Balance} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.CoreSchema.V1.Balance.toObject = function(includeInstance, msg) {
  var f, obj = {
    confirmed: (f = msg.getConfirmed()) && proto.CoreSchema.V1.Decimal.toObject(includeInstance, f),
    unconfirmed: (f = msg.getUnconfirmed()) && proto.CoreSchema.V1.Decimal.toObject(includeInstance, f),
    deposited: (f = msg.getDeposited()) && proto.CoreSchema.V1.Decimal.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.CoreSchema.V1.Balance}
 */
proto.CoreSchema.V1.Balance.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.CoreSchema.V1.Balance;
  return proto.CoreSchema.V1.Balance.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.CoreSchema.V1.Balance} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.CoreSchema.V1.Balance}
 */
proto.CoreSchema.V1.Balance.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.CoreSchema.V1.Decimal;
      reader.readMessage(value,proto.CoreSchema.V1.Decimal.deserializeBinaryFromReader);
      msg.setConfirmed(value);
      break;
    case 2:
      var value = new proto.CoreSchema.V1.Decimal;
      reader.readMessage(value,proto.CoreSchema.V1.Decimal.deserializeBinaryFromReader);
      msg.setUnconfirmed(value);
      break;
    case 3:
      var value = new proto.CoreSchema.V1.Decimal;
      reader.readMessage(value,proto.CoreSchema.V1.Decimal.deserializeBinaryFromReader);
      msg.setDeposited(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.CoreSchema.V1.Balance.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.CoreSchema.V1.Balance.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.CoreSchema.V1.Balance} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.CoreSchema.V1.Balance.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getConfirmed();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.CoreSchema.V1.Decimal.serializeBinaryToWriter
    );
  }
  f = message.getUnconfirmed();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.CoreSchema.V1.Decimal.serializeBinaryToWriter
    );
  }
  f = message.getDeposited();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.CoreSchema.V1.Decimal.serializeBinaryToWriter
    );
  }
};


/**
 * optional Decimal Confirmed = 1;
 * @return {?proto.CoreSchema.V1.Decimal}
 */
proto.CoreSchema.V1.Balance.prototype.getConfirmed = function() {
  return /** @type{?proto.CoreSchema.V1.Decimal} */ (
    jspb.Message.getWrapperField(this, proto.CoreSchema.V1.Decimal, 1));
};


/** @param {?proto.CoreSchema.V1.Decimal|undefined} value */
proto.CoreSchema.V1.Balance.prototype.setConfirmed = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.CoreSchema.V1.Balance.prototype.clearConfirmed = function() {
  this.setConfirmed(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.CoreSchema.V1.Balance.prototype.hasConfirmed = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional Decimal UnConfirmed = 2;
 * @return {?proto.CoreSchema.V1.Decimal}
 */
proto.CoreSchema.V1.Balance.prototype.getUnconfirmed = function() {
  return /** @type{?proto.CoreSchema.V1.Decimal} */ (
    jspb.Message.getWrapperField(this, proto.CoreSchema.V1.Decimal, 2));
};


/** @param {?proto.CoreSchema.V1.Decimal|undefined} value */
proto.CoreSchema.V1.Balance.prototype.setUnconfirmed = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.CoreSchema.V1.Balance.prototype.clearUnconfirmed = function() {
  this.setUnconfirmed(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.CoreSchema.V1.Balance.prototype.hasUnconfirmed = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional Decimal Deposited = 3;
 * @return {?proto.CoreSchema.V1.Decimal}
 */
proto.CoreSchema.V1.Balance.prototype.getDeposited = function() {
  return /** @type{?proto.CoreSchema.V1.Decimal} */ (
    jspb.Message.getWrapperField(this, proto.CoreSchema.V1.Decimal, 3));
};


/** @param {?proto.CoreSchema.V1.Decimal|undefined} value */
proto.CoreSchema.V1.Balance.prototype.setDeposited = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


proto.CoreSchema.V1.Balance.prototype.clearDeposited = function() {
  this.setDeposited(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.CoreSchema.V1.Balance.prototype.hasDeposited = function() {
  return jspb.Message.getField(this, 3) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.CoreSchema.V1.Event = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.CoreSchema.V1.Event.oneofGroups_);
};
goog.inherits(proto.CoreSchema.V1.Event, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.CoreSchema.V1.Event.displayName = 'proto.CoreSchema.V1.Event';
}
/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.CoreSchema.V1.Event.oneofGroups_ = [[3,4,5,6,7,8,9,10,11,12,13,14,15]];

/**
 * @enum {number}
 */
proto.CoreSchema.V1.Event.ContentCase = {
  CONTENT_NOT_SET: 0,
  DEALNEW: 3,
  DEALSTATUSCHANGED: 4,
  DEALNEWMESSAGE: 5,
  DEALFIATPAYED: 6,
  DEALDISPUTECREATED: 7,
  BALANCE: 8,
  KEEPALIVE: 9,
  INVOICENEW: 10,
  INVOICEPAYED: 11,
  INVOICEDELETED: 12,
  INVOICEPAYMENTNEW: 13,
  CONVERSATIONNEWMESSAGE: 14,
  INVOICEPAYMENTUPDATED: 15
};

/**
 * @return {proto.CoreSchema.V1.Event.ContentCase}
 */
proto.CoreSchema.V1.Event.prototype.getContentCase = function() {
  return /** @type {proto.CoreSchema.V1.Event.ContentCase} */(jspb.Message.computeOneofCase(this, proto.CoreSchema.V1.Event.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.CoreSchema.V1.Event.prototype.toObject = function(opt_includeInstance) {
  return proto.CoreSchema.V1.Event.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.CoreSchema.V1.Event} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.CoreSchema.V1.Event.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0),
    createdat: (f = msg.getCreatedat()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    dealnew: (f = msg.getDealnew()) && proto.CoreSchema.V1.Deal.toObject(includeInstance, f),
    dealstatuschanged: (f = msg.getDealstatuschanged()) && proto.CoreSchema.V1.Deal.toObject(includeInstance, f),
    dealnewmessage: (f = msg.getDealnewmessage()) && proto.CoreSchema.V1.Deal.toObject(includeInstance, f),
    dealfiatpayed: (f = msg.getDealfiatpayed()) && proto.CoreSchema.V1.Deal.toObject(includeInstance, f),
    dealdisputecreated: (f = msg.getDealdisputecreated()) && proto.CoreSchema.V1.Deal.toObject(includeInstance, f),
    balance: (f = msg.getBalance()) && proto.CoreSchema.V1.Balance.toObject(includeInstance, f),
    keepalive: jspb.Message.getFieldWithDefault(msg, 9, false),
    invoicenew: (f = msg.getInvoicenew()) && proto.CoreSchema.V1.Invoice.toObject(includeInstance, f),
    invoicepayed: (f = msg.getInvoicepayed()) && proto.CoreSchema.V1.Invoice.toObject(includeInstance, f),
    invoicedeleted: (f = msg.getInvoicedeleted()) && proto.CoreSchema.V1.Invoice.toObject(includeInstance, f),
    invoicepaymentnew: (f = msg.getInvoicepaymentnew()) && proto.CoreSchema.V1.InvoicePayment.toObject(includeInstance, f),
    conversationnewmessage: (f = msg.getConversationnewmessage()) && proto.CoreSchema.V1.Conversation.toObject(includeInstance, f),
    invoicepaymentupdated: (f = msg.getInvoicepaymentupdated()) && proto.CoreSchema.V1.InvoicePayment.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.CoreSchema.V1.Event}
 */
proto.CoreSchema.V1.Event.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.CoreSchema.V1.Event;
  return proto.CoreSchema.V1.Event.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.CoreSchema.V1.Event} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.CoreSchema.V1.Event}
 */
proto.CoreSchema.V1.Event.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setId(value);
      break;
    case 2:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setCreatedat(value);
      break;
    case 3:
      var value = new proto.CoreSchema.V1.Deal;
      reader.readMessage(value,proto.CoreSchema.V1.Deal.deserializeBinaryFromReader);
      msg.setDealnew(value);
      break;
    case 4:
      var value = new proto.CoreSchema.V1.Deal;
      reader.readMessage(value,proto.CoreSchema.V1.Deal.deserializeBinaryFromReader);
      msg.setDealstatuschanged(value);
      break;
    case 5:
      var value = new proto.CoreSchema.V1.Deal;
      reader.readMessage(value,proto.CoreSchema.V1.Deal.deserializeBinaryFromReader);
      msg.setDealnewmessage(value);
      break;
    case 6:
      var value = new proto.CoreSchema.V1.Deal;
      reader.readMessage(value,proto.CoreSchema.V1.Deal.deserializeBinaryFromReader);
      msg.setDealfiatpayed(value);
      break;
    case 7:
      var value = new proto.CoreSchema.V1.Deal;
      reader.readMessage(value,proto.CoreSchema.V1.Deal.deserializeBinaryFromReader);
      msg.setDealdisputecreated(value);
      break;
    case 8:
      var value = new proto.CoreSchema.V1.Balance;
      reader.readMessage(value,proto.CoreSchema.V1.Balance.deserializeBinaryFromReader);
      msg.setBalance(value);
      break;
    case 9:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setKeepalive(value);
      break;
    case 10:
      var value = new proto.CoreSchema.V1.Invoice;
      reader.readMessage(value,proto.CoreSchema.V1.Invoice.deserializeBinaryFromReader);
      msg.setInvoicenew(value);
      break;
    case 11:
      var value = new proto.CoreSchema.V1.Invoice;
      reader.readMessage(value,proto.CoreSchema.V1.Invoice.deserializeBinaryFromReader);
      msg.setInvoicepayed(value);
      break;
    case 12:
      var value = new proto.CoreSchema.V1.Invoice;
      reader.readMessage(value,proto.CoreSchema.V1.Invoice.deserializeBinaryFromReader);
      msg.setInvoicedeleted(value);
      break;
    case 13:
      var value = new proto.CoreSchema.V1.InvoicePayment;
      reader.readMessage(value,proto.CoreSchema.V1.InvoicePayment.deserializeBinaryFromReader);
      msg.setInvoicepaymentnew(value);
      break;
    case 14:
      var value = new proto.CoreSchema.V1.Conversation;
      reader.readMessage(value,proto.CoreSchema.V1.Conversation.deserializeBinaryFromReader);
      msg.setConversationnewmessage(value);
      break;
    case 15:
      var value = new proto.CoreSchema.V1.InvoicePayment;
      reader.readMessage(value,proto.CoreSchema.V1.InvoicePayment.deserializeBinaryFromReader);
      msg.setInvoicepaymentupdated(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.CoreSchema.V1.Event.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.CoreSchema.V1.Event.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.CoreSchema.V1.Event} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.CoreSchema.V1.Event.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeUint64(
      1,
      f
    );
  }
  f = message.getCreatedat();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getDealnew();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.CoreSchema.V1.Deal.serializeBinaryToWriter
    );
  }
  f = message.getDealstatuschanged();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.CoreSchema.V1.Deal.serializeBinaryToWriter
    );
  }
  f = message.getDealnewmessage();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.CoreSchema.V1.Deal.serializeBinaryToWriter
    );
  }
  f = message.getDealfiatpayed();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      proto.CoreSchema.V1.Deal.serializeBinaryToWriter
    );
  }
  f = message.getDealdisputecreated();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      proto.CoreSchema.V1.Deal.serializeBinaryToWriter
    );
  }
  f = message.getBalance();
  if (f != null) {
    writer.writeMessage(
      8,
      f,
      proto.CoreSchema.V1.Balance.serializeBinaryToWriter
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 9));
  if (f != null) {
    writer.writeBool(
      9,
      f
    );
  }
  f = message.getInvoicenew();
  if (f != null) {
    writer.writeMessage(
      10,
      f,
      proto.CoreSchema.V1.Invoice.serializeBinaryToWriter
    );
  }
  f = message.getInvoicepayed();
  if (f != null) {
    writer.writeMessage(
      11,
      f,
      proto.CoreSchema.V1.Invoice.serializeBinaryToWriter
    );
  }
  f = message.getInvoicedeleted();
  if (f != null) {
    writer.writeMessage(
      12,
      f,
      proto.CoreSchema.V1.Invoice.serializeBinaryToWriter
    );
  }
  f = message.getInvoicepaymentnew();
  if (f != null) {
    writer.writeMessage(
      13,
      f,
      proto.CoreSchema.V1.InvoicePayment.serializeBinaryToWriter
    );
  }
  f = message.getConversationnewmessage();
  if (f != null) {
    writer.writeMessage(
      14,
      f,
      proto.CoreSchema.V1.Conversation.serializeBinaryToWriter
    );
  }
  f = message.getInvoicepaymentupdated();
  if (f != null) {
    writer.writeMessage(
      15,
      f,
      proto.CoreSchema.V1.InvoicePayment.serializeBinaryToWriter
    );
  }
};


/**
 * optional uint64 id = 1;
 * @return {number}
 */
proto.CoreSchema.V1.Event.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.CoreSchema.V1.Event.prototype.setId = function(value) {
  jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional google.protobuf.Timestamp CreatedAt = 2;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.CoreSchema.V1.Event.prototype.getCreatedat = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 2));
};


/** @param {?proto.google.protobuf.Timestamp|undefined} value */
proto.CoreSchema.V1.Event.prototype.setCreatedat = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.CoreSchema.V1.Event.prototype.clearCreatedat = function() {
  this.setCreatedat(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.CoreSchema.V1.Event.prototype.hasCreatedat = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional Deal DealNew = 3;
 * @return {?proto.CoreSchema.V1.Deal}
 */
proto.CoreSchema.V1.Event.prototype.getDealnew = function() {
  return /** @type{?proto.CoreSchema.V1.Deal} */ (
    jspb.Message.getWrapperField(this, proto.CoreSchema.V1.Deal, 3));
};


/** @param {?proto.CoreSchema.V1.Deal|undefined} value */
proto.CoreSchema.V1.Event.prototype.setDealnew = function(value) {
  jspb.Message.setOneofWrapperField(this, 3, proto.CoreSchema.V1.Event.oneofGroups_[0], value);
};


proto.CoreSchema.V1.Event.prototype.clearDealnew = function() {
  this.setDealnew(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.CoreSchema.V1.Event.prototype.hasDealnew = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional Deal DealStatusChanged = 4;
 * @return {?proto.CoreSchema.V1.Deal}
 */
proto.CoreSchema.V1.Event.prototype.getDealstatuschanged = function() {
  return /** @type{?proto.CoreSchema.V1.Deal} */ (
    jspb.Message.getWrapperField(this, proto.CoreSchema.V1.Deal, 4));
};


/** @param {?proto.CoreSchema.V1.Deal|undefined} value */
proto.CoreSchema.V1.Event.prototype.setDealstatuschanged = function(value) {
  jspb.Message.setOneofWrapperField(this, 4, proto.CoreSchema.V1.Event.oneofGroups_[0], value);
};


proto.CoreSchema.V1.Event.prototype.clearDealstatuschanged = function() {
  this.setDealstatuschanged(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.CoreSchema.V1.Event.prototype.hasDealstatuschanged = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional Deal DealNewMessage = 5;
 * @return {?proto.CoreSchema.V1.Deal}
 */
proto.CoreSchema.V1.Event.prototype.getDealnewmessage = function() {
  return /** @type{?proto.CoreSchema.V1.Deal} */ (
    jspb.Message.getWrapperField(this, proto.CoreSchema.V1.Deal, 5));
};


/** @param {?proto.CoreSchema.V1.Deal|undefined} value */
proto.CoreSchema.V1.Event.prototype.setDealnewmessage = function(value) {
  jspb.Message.setOneofWrapperField(this, 5, proto.CoreSchema.V1.Event.oneofGroups_[0], value);
};


proto.CoreSchema.V1.Event.prototype.clearDealnewmessage = function() {
  this.setDealnewmessage(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.CoreSchema.V1.Event.prototype.hasDealnewmessage = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional Deal DealFiatPayed = 6;
 * @return {?proto.CoreSchema.V1.Deal}
 */
proto.CoreSchema.V1.Event.prototype.getDealfiatpayed = function() {
  return /** @type{?proto.CoreSchema.V1.Deal} */ (
    jspb.Message.getWrapperField(this, proto.CoreSchema.V1.Deal, 6));
};


/** @param {?proto.CoreSchema.V1.Deal|undefined} value */
proto.CoreSchema.V1.Event.prototype.setDealfiatpayed = function(value) {
  jspb.Message.setOneofWrapperField(this, 6, proto.CoreSchema.V1.Event.oneofGroups_[0], value);
};


proto.CoreSchema.V1.Event.prototype.clearDealfiatpayed = function() {
  this.setDealfiatpayed(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.CoreSchema.V1.Event.prototype.hasDealfiatpayed = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional Deal DealDisputeCreated = 7;
 * @return {?proto.CoreSchema.V1.Deal}
 */
proto.CoreSchema.V1.Event.prototype.getDealdisputecreated = function() {
  return /** @type{?proto.CoreSchema.V1.Deal} */ (
    jspb.Message.getWrapperField(this, proto.CoreSchema.V1.Deal, 7));
};


/** @param {?proto.CoreSchema.V1.Deal|undefined} value */
proto.CoreSchema.V1.Event.prototype.setDealdisputecreated = function(value) {
  jspb.Message.setOneofWrapperField(this, 7, proto.CoreSchema.V1.Event.oneofGroups_[0], value);
};


proto.CoreSchema.V1.Event.prototype.clearDealdisputecreated = function() {
  this.setDealdisputecreated(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.CoreSchema.V1.Event.prototype.hasDealdisputecreated = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional Balance Balance = 8;
 * @return {?proto.CoreSchema.V1.Balance}
 */
proto.CoreSchema.V1.Event.prototype.getBalance = function() {
  return /** @type{?proto.CoreSchema.V1.Balance} */ (
    jspb.Message.getWrapperField(this, proto.CoreSchema.V1.Balance, 8));
};


/** @param {?proto.CoreSchema.V1.Balance|undefined} value */
proto.CoreSchema.V1.Event.prototype.setBalance = function(value) {
  jspb.Message.setOneofWrapperField(this, 8, proto.CoreSchema.V1.Event.oneofGroups_[0], value);
};


proto.CoreSchema.V1.Event.prototype.clearBalance = function() {
  this.setBalance(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.CoreSchema.V1.Event.prototype.hasBalance = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional bool KeepAlive = 9;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.CoreSchema.V1.Event.prototype.getKeepalive = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 9, false));
};


/** @param {boolean} value */
proto.CoreSchema.V1.Event.prototype.setKeepalive = function(value) {
  jspb.Message.setOneofField(this, 9, proto.CoreSchema.V1.Event.oneofGroups_[0], value);
};


proto.CoreSchema.V1.Event.prototype.clearKeepalive = function() {
  jspb.Message.setOneofField(this, 9, proto.CoreSchema.V1.Event.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.CoreSchema.V1.Event.prototype.hasKeepalive = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional Invoice InvoiceNew = 10;
 * @return {?proto.CoreSchema.V1.Invoice}
 */
proto.CoreSchema.V1.Event.prototype.getInvoicenew = function() {
  return /** @type{?proto.CoreSchema.V1.Invoice} */ (
    jspb.Message.getWrapperField(this, proto.CoreSchema.V1.Invoice, 10));
};


/** @param {?proto.CoreSchema.V1.Invoice|undefined} value */
proto.CoreSchema.V1.Event.prototype.setInvoicenew = function(value) {
  jspb.Message.setOneofWrapperField(this, 10, proto.CoreSchema.V1.Event.oneofGroups_[0], value);
};


proto.CoreSchema.V1.Event.prototype.clearInvoicenew = function() {
  this.setInvoicenew(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.CoreSchema.V1.Event.prototype.hasInvoicenew = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * optional Invoice InvoicePayed = 11;
 * @return {?proto.CoreSchema.V1.Invoice}
 */
proto.CoreSchema.V1.Event.prototype.getInvoicepayed = function() {
  return /** @type{?proto.CoreSchema.V1.Invoice} */ (
    jspb.Message.getWrapperField(this, proto.CoreSchema.V1.Invoice, 11));
};


/** @param {?proto.CoreSchema.V1.Invoice|undefined} value */
proto.CoreSchema.V1.Event.prototype.setInvoicepayed = function(value) {
  jspb.Message.setOneofWrapperField(this, 11, proto.CoreSchema.V1.Event.oneofGroups_[0], value);
};


proto.CoreSchema.V1.Event.prototype.clearInvoicepayed = function() {
  this.setInvoicepayed(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.CoreSchema.V1.Event.prototype.hasInvoicepayed = function() {
  return jspb.Message.getField(this, 11) != null;
};


/**
 * optional Invoice InvoiceDeleted = 12;
 * @return {?proto.CoreSchema.V1.Invoice}
 */
proto.CoreSchema.V1.Event.prototype.getInvoicedeleted = function() {
  return /** @type{?proto.CoreSchema.V1.Invoice} */ (
    jspb.Message.getWrapperField(this, proto.CoreSchema.V1.Invoice, 12));
};


/** @param {?proto.CoreSchema.V1.Invoice|undefined} value */
proto.CoreSchema.V1.Event.prototype.setInvoicedeleted = function(value) {
  jspb.Message.setOneofWrapperField(this, 12, proto.CoreSchema.V1.Event.oneofGroups_[0], value);
};


proto.CoreSchema.V1.Event.prototype.clearInvoicedeleted = function() {
  this.setInvoicedeleted(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.CoreSchema.V1.Event.prototype.hasInvoicedeleted = function() {
  return jspb.Message.getField(this, 12) != null;
};


/**
 * optional InvoicePayment InvoicePaymentNew = 13;
 * @return {?proto.CoreSchema.V1.InvoicePayment}
 */
proto.CoreSchema.V1.Event.prototype.getInvoicepaymentnew = function() {
  return /** @type{?proto.CoreSchema.V1.InvoicePayment} */ (
    jspb.Message.getWrapperField(this, proto.CoreSchema.V1.InvoicePayment, 13));
};


/** @param {?proto.CoreSchema.V1.InvoicePayment|undefined} value */
proto.CoreSchema.V1.Event.prototype.setInvoicepaymentnew = function(value) {
  jspb.Message.setOneofWrapperField(this, 13, proto.CoreSchema.V1.Event.oneofGroups_[0], value);
};


proto.CoreSchema.V1.Event.prototype.clearInvoicepaymentnew = function() {
  this.setInvoicepaymentnew(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.CoreSchema.V1.Event.prototype.hasInvoicepaymentnew = function() {
  return jspb.Message.getField(this, 13) != null;
};


/**
 * optional Conversation ConversationNewMessage = 14;
 * @return {?proto.CoreSchema.V1.Conversation}
 */
proto.CoreSchema.V1.Event.prototype.getConversationnewmessage = function() {
  return /** @type{?proto.CoreSchema.V1.Conversation} */ (
    jspb.Message.getWrapperField(this, proto.CoreSchema.V1.Conversation, 14));
};


/** @param {?proto.CoreSchema.V1.Conversation|undefined} value */
proto.CoreSchema.V1.Event.prototype.setConversationnewmessage = function(value) {
  jspb.Message.setOneofWrapperField(this, 14, proto.CoreSchema.V1.Event.oneofGroups_[0], value);
};


proto.CoreSchema.V1.Event.prototype.clearConversationnewmessage = function() {
  this.setConversationnewmessage(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.CoreSchema.V1.Event.prototype.hasConversationnewmessage = function() {
  return jspb.Message.getField(this, 14) != null;
};


/**
 * optional InvoicePayment InvoicePaymentUpdated = 15;
 * @return {?proto.CoreSchema.V1.InvoicePayment}
 */
proto.CoreSchema.V1.Event.prototype.getInvoicepaymentupdated = function() {
  return /** @type{?proto.CoreSchema.V1.InvoicePayment} */ (
    jspb.Message.getWrapperField(this, proto.CoreSchema.V1.InvoicePayment, 15));
};


/** @param {?proto.CoreSchema.V1.InvoicePayment|undefined} value */
proto.CoreSchema.V1.Event.prototype.setInvoicepaymentupdated = function(value) {
  jspb.Message.setOneofWrapperField(this, 15, proto.CoreSchema.V1.Event.oneofGroups_[0], value);
};


proto.CoreSchema.V1.Event.prototype.clearInvoicepaymentupdated = function() {
  this.setInvoicepaymentupdated(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.CoreSchema.V1.Event.prototype.hasInvoicepaymentupdated = function() {
  return jspb.Message.getField(this, 15) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.CoreSchema.V1.MarkEventsAsReadRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.CoreSchema.V1.MarkEventsAsReadRequest.repeatedFields_, null);
};
goog.inherits(proto.CoreSchema.V1.MarkEventsAsReadRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.CoreSchema.V1.MarkEventsAsReadRequest.displayName = 'proto.CoreSchema.V1.MarkEventsAsReadRequest';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.CoreSchema.V1.MarkEventsAsReadRequest.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.CoreSchema.V1.MarkEventsAsReadRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.CoreSchema.V1.MarkEventsAsReadRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.CoreSchema.V1.MarkEventsAsReadRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.CoreSchema.V1.MarkEventsAsReadRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    idList: jspb.Message.getRepeatedField(msg, 1)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.CoreSchema.V1.MarkEventsAsReadRequest}
 */
proto.CoreSchema.V1.MarkEventsAsReadRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.CoreSchema.V1.MarkEventsAsReadRequest;
  return proto.CoreSchema.V1.MarkEventsAsReadRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.CoreSchema.V1.MarkEventsAsReadRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.CoreSchema.V1.MarkEventsAsReadRequest}
 */
proto.CoreSchema.V1.MarkEventsAsReadRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Array<number>} */ (reader.readPackedUint64());
      msg.setIdList(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.CoreSchema.V1.MarkEventsAsReadRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.CoreSchema.V1.MarkEventsAsReadRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.CoreSchema.V1.MarkEventsAsReadRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.CoreSchema.V1.MarkEventsAsReadRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getIdList();
  if (f.length > 0) {
    writer.writePackedUint64(
      1,
      f
    );
  }
};


/**
 * repeated uint64 Id = 1;
 * @return {!Array<number>}
 */
proto.CoreSchema.V1.MarkEventsAsReadRequest.prototype.getIdList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 1));
};


/** @param {!Array<number>} value */
proto.CoreSchema.V1.MarkEventsAsReadRequest.prototype.setIdList = function(value) {
  jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {!number} value
 * @param {number=} opt_index
 */
proto.CoreSchema.V1.MarkEventsAsReadRequest.prototype.addId = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


proto.CoreSchema.V1.MarkEventsAsReadRequest.prototype.clearIdList = function() {
  this.setIdList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.CoreSchema.V1.CancelDealRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.CoreSchema.V1.CancelDealRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.CoreSchema.V1.CancelDealRequest.displayName = 'proto.CoreSchema.V1.CancelDealRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.CoreSchema.V1.CancelDealRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.CoreSchema.V1.CancelDealRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.CoreSchema.V1.CancelDealRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.CoreSchema.V1.CancelDealRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    dealid: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.CoreSchema.V1.CancelDealRequest}
 */
proto.CoreSchema.V1.CancelDealRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.CoreSchema.V1.CancelDealRequest;
  return proto.CoreSchema.V1.CancelDealRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.CoreSchema.V1.CancelDealRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.CoreSchema.V1.CancelDealRequest}
 */
proto.CoreSchema.V1.CancelDealRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setDealid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.CoreSchema.V1.CancelDealRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.CoreSchema.V1.CancelDealRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.CoreSchema.V1.CancelDealRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.CoreSchema.V1.CancelDealRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDealid();
  if (f !== 0) {
    writer.writeUint64(
      1,
      f
    );
  }
};


/**
 * optional uint64 DealId = 1;
 * @return {number}
 */
proto.CoreSchema.V1.CancelDealRequest.prototype.getDealid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.CoreSchema.V1.CancelDealRequest.prototype.setDealid = function(value) {
  jspb.Message.setProto3IntField(this, 1, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.CoreSchema.V1.CancelDealResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.CoreSchema.V1.CancelDealResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.CoreSchema.V1.CancelDealResponse.displayName = 'proto.CoreSchema.V1.CancelDealResponse';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.CoreSchema.V1.CancelDealResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.CoreSchema.V1.CancelDealResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.CoreSchema.V1.CancelDealResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.CoreSchema.V1.CancelDealResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    deal: (f = msg.getDeal()) && proto.CoreSchema.V1.Deal.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.CoreSchema.V1.CancelDealResponse}
 */
proto.CoreSchema.V1.CancelDealResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.CoreSchema.V1.CancelDealResponse;
  return proto.CoreSchema.V1.CancelDealResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.CoreSchema.V1.CancelDealResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.CoreSchema.V1.CancelDealResponse}
 */
proto.CoreSchema.V1.CancelDealResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.CoreSchema.V1.Deal;
      reader.readMessage(value,proto.CoreSchema.V1.Deal.deserializeBinaryFromReader);
      msg.setDeal(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.CoreSchema.V1.CancelDealResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.CoreSchema.V1.CancelDealResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.CoreSchema.V1.CancelDealResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.CoreSchema.V1.CancelDealResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDeal();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.CoreSchema.V1.Deal.serializeBinaryToWriter
    );
  }
};


/**
 * optional Deal deal = 1;
 * @return {?proto.CoreSchema.V1.Deal}
 */
proto.CoreSchema.V1.CancelDealResponse.prototype.getDeal = function() {
  return /** @type{?proto.CoreSchema.V1.Deal} */ (
    jspb.Message.getWrapperField(this, proto.CoreSchema.V1.Deal, 1));
};


/** @param {?proto.CoreSchema.V1.Deal|undefined} value */
proto.CoreSchema.V1.CancelDealResponse.prototype.setDeal = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.CoreSchema.V1.CancelDealResponse.prototype.clearDeal = function() {
  this.setDeal(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.CoreSchema.V1.CancelDealResponse.prototype.hasDeal = function() {
  return jspb.Message.getField(this, 1) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.CoreSchema.V1.IPayedRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.CoreSchema.V1.IPayedRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.CoreSchema.V1.IPayedRequest.displayName = 'proto.CoreSchema.V1.IPayedRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.CoreSchema.V1.IPayedRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.CoreSchema.V1.IPayedRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.CoreSchema.V1.IPayedRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.CoreSchema.V1.IPayedRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    dealid: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.CoreSchema.V1.IPayedRequest}
 */
proto.CoreSchema.V1.IPayedRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.CoreSchema.V1.IPayedRequest;
  return proto.CoreSchema.V1.IPayedRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.CoreSchema.V1.IPayedRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.CoreSchema.V1.IPayedRequest}
 */
proto.CoreSchema.V1.IPayedRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setDealid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.CoreSchema.V1.IPayedRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.CoreSchema.V1.IPayedRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.CoreSchema.V1.IPayedRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.CoreSchema.V1.IPayedRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDealid();
  if (f !== 0) {
    writer.writeUint64(
      1,
      f
    );
  }
};


/**
 * optional uint64 DealId = 1;
 * @return {number}
 */
proto.CoreSchema.V1.IPayedRequest.prototype.getDealid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.CoreSchema.V1.IPayedRequest.prototype.setDealid = function(value) {
  jspb.Message.setProto3IntField(this, 1, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.CoreSchema.V1.IPayedResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.CoreSchema.V1.IPayedResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.CoreSchema.V1.IPayedResponse.displayName = 'proto.CoreSchema.V1.IPayedResponse';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.CoreSchema.V1.IPayedResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.CoreSchema.V1.IPayedResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.CoreSchema.V1.IPayedResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.CoreSchema.V1.IPayedResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    deal: (f = msg.getDeal()) && proto.CoreSchema.V1.Deal.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.CoreSchema.V1.IPayedResponse}
 */
proto.CoreSchema.V1.IPayedResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.CoreSchema.V1.IPayedResponse;
  return proto.CoreSchema.V1.IPayedResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.CoreSchema.V1.IPayedResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.CoreSchema.V1.IPayedResponse}
 */
proto.CoreSchema.V1.IPayedResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.CoreSchema.V1.Deal;
      reader.readMessage(value,proto.CoreSchema.V1.Deal.deserializeBinaryFromReader);
      msg.setDeal(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.CoreSchema.V1.IPayedResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.CoreSchema.V1.IPayedResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.CoreSchema.V1.IPayedResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.CoreSchema.V1.IPayedResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDeal();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.CoreSchema.V1.Deal.serializeBinaryToWriter
    );
  }
};


/**
 * optional Deal deal = 1;
 * @return {?proto.CoreSchema.V1.Deal}
 */
proto.CoreSchema.V1.IPayedResponse.prototype.getDeal = function() {
  return /** @type{?proto.CoreSchema.V1.Deal} */ (
    jspb.Message.getWrapperField(this, proto.CoreSchema.V1.Deal, 1));
};


/** @param {?proto.CoreSchema.V1.Deal|undefined} value */
proto.CoreSchema.V1.IPayedResponse.prototype.setDeal = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.CoreSchema.V1.IPayedResponse.prototype.clearDeal = function() {
  this.setDeal(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.CoreSchema.V1.IPayedResponse.prototype.hasDeal = function() {
  return jspb.Message.getField(this, 1) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.CoreSchema.V1.CreateDisputeRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.CoreSchema.V1.CreateDisputeRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.CoreSchema.V1.CreateDisputeRequest.displayName = 'proto.CoreSchema.V1.CreateDisputeRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.CoreSchema.V1.CreateDisputeRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.CoreSchema.V1.CreateDisputeRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.CoreSchema.V1.CreateDisputeRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.CoreSchema.V1.CreateDisputeRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    dealid: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.CoreSchema.V1.CreateDisputeRequest}
 */
proto.CoreSchema.V1.CreateDisputeRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.CoreSchema.V1.CreateDisputeRequest;
  return proto.CoreSchema.V1.CreateDisputeRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.CoreSchema.V1.CreateDisputeRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.CoreSchema.V1.CreateDisputeRequest}
 */
proto.CoreSchema.V1.CreateDisputeRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setDealid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.CoreSchema.V1.CreateDisputeRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.CoreSchema.V1.CreateDisputeRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.CoreSchema.V1.CreateDisputeRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.CoreSchema.V1.CreateDisputeRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDealid();
  if (f !== 0) {
    writer.writeUint64(
      1,
      f
    );
  }
};


/**
 * optional uint64 DealId = 1;
 * @return {number}
 */
proto.CoreSchema.V1.CreateDisputeRequest.prototype.getDealid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.CoreSchema.V1.CreateDisputeRequest.prototype.setDealid = function(value) {
  jspb.Message.setProto3IntField(this, 1, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.CoreSchema.V1.CreateDisputeResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.CoreSchema.V1.CreateDisputeResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.CoreSchema.V1.CreateDisputeResponse.displayName = 'proto.CoreSchema.V1.CreateDisputeResponse';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.CoreSchema.V1.CreateDisputeResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.CoreSchema.V1.CreateDisputeResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.CoreSchema.V1.CreateDisputeResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.CoreSchema.V1.CreateDisputeResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    deal: (f = msg.getDeal()) && proto.CoreSchema.V1.Deal.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.CoreSchema.V1.CreateDisputeResponse}
 */
proto.CoreSchema.V1.CreateDisputeResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.CoreSchema.V1.CreateDisputeResponse;
  return proto.CoreSchema.V1.CreateDisputeResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.CoreSchema.V1.CreateDisputeResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.CoreSchema.V1.CreateDisputeResponse}
 */
proto.CoreSchema.V1.CreateDisputeResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.CoreSchema.V1.Deal;
      reader.readMessage(value,proto.CoreSchema.V1.Deal.deserializeBinaryFromReader);
      msg.setDeal(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.CoreSchema.V1.CreateDisputeResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.CoreSchema.V1.CreateDisputeResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.CoreSchema.V1.CreateDisputeResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.CoreSchema.V1.CreateDisputeResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDeal();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.CoreSchema.V1.Deal.serializeBinaryToWriter
    );
  }
};


/**
 * optional Deal deal = 1;
 * @return {?proto.CoreSchema.V1.Deal}
 */
proto.CoreSchema.V1.CreateDisputeResponse.prototype.getDeal = function() {
  return /** @type{?proto.CoreSchema.V1.Deal} */ (
    jspb.Message.getWrapperField(this, proto.CoreSchema.V1.Deal, 1));
};


/** @param {?proto.CoreSchema.V1.Deal|undefined} value */
proto.CoreSchema.V1.CreateDisputeResponse.prototype.setDeal = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.CoreSchema.V1.CreateDisputeResponse.prototype.clearDeal = function() {
  this.setDeal(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.CoreSchema.V1.CreateDisputeResponse.prototype.hasDeal = function() {
  return jspb.Message.getField(this, 1) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.CoreSchema.V1.SendFeedbackRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.CoreSchema.V1.SendFeedbackRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.CoreSchema.V1.SendFeedbackRequest.displayName = 'proto.CoreSchema.V1.SendFeedbackRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.CoreSchema.V1.SendFeedbackRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.CoreSchema.V1.SendFeedbackRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.CoreSchema.V1.SendFeedbackRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.CoreSchema.V1.SendFeedbackRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    dealid: jspb.Message.getFieldWithDefault(msg, 1, 0),
    ispositive: jspb.Message.getFieldWithDefault(msg, 2, false),
    text: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.CoreSchema.V1.SendFeedbackRequest}
 */
proto.CoreSchema.V1.SendFeedbackRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.CoreSchema.V1.SendFeedbackRequest;
  return proto.CoreSchema.V1.SendFeedbackRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.CoreSchema.V1.SendFeedbackRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.CoreSchema.V1.SendFeedbackRequest}
 */
proto.CoreSchema.V1.SendFeedbackRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setDealid(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIspositive(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setText(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.CoreSchema.V1.SendFeedbackRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.CoreSchema.V1.SendFeedbackRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.CoreSchema.V1.SendFeedbackRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.CoreSchema.V1.SendFeedbackRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDealid();
  if (f !== 0) {
    writer.writeUint64(
      1,
      f
    );
  }
  f = message.getIspositive();
  if (f) {
    writer.writeBool(
      2,
      f
    );
  }
  f = message.getText();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional uint64 DealId = 1;
 * @return {number}
 */
proto.CoreSchema.V1.SendFeedbackRequest.prototype.getDealid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.CoreSchema.V1.SendFeedbackRequest.prototype.setDealid = function(value) {
  jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional bool IsPositive = 2;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.CoreSchema.V1.SendFeedbackRequest.prototype.getIspositive = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 2, false));
};


/** @param {boolean} value */
proto.CoreSchema.V1.SendFeedbackRequest.prototype.setIspositive = function(value) {
  jspb.Message.setProto3BooleanField(this, 2, value);
};


/**
 * optional string Text = 3;
 * @return {string}
 */
proto.CoreSchema.V1.SendFeedbackRequest.prototype.getText = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.CoreSchema.V1.SendFeedbackRequest.prototype.setText = function(value) {
  jspb.Message.setProto3StringField(this, 3, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.CoreSchema.V1.GetUserFeedbacksRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.CoreSchema.V1.GetUserFeedbacksRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.CoreSchema.V1.GetUserFeedbacksRequest.displayName = 'proto.CoreSchema.V1.GetUserFeedbacksRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.CoreSchema.V1.GetUserFeedbacksRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.CoreSchema.V1.GetUserFeedbacksRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.CoreSchema.V1.GetUserFeedbacksRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.CoreSchema.V1.GetUserFeedbacksRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    userid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    startid: jspb.Message.getFieldWithDefault(msg, 2, 0),
    count: jspb.Message.getFieldWithDefault(msg, 3, 0),
    isdealsfeedbacks: jspb.Message.getFieldWithDefault(msg, 4, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.CoreSchema.V1.GetUserFeedbacksRequest}
 */
proto.CoreSchema.V1.GetUserFeedbacksRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.CoreSchema.V1.GetUserFeedbacksRequest;
  return proto.CoreSchema.V1.GetUserFeedbacksRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.CoreSchema.V1.GetUserFeedbacksRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.CoreSchema.V1.GetUserFeedbacksRequest}
 */
proto.CoreSchema.V1.GetUserFeedbacksRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserid(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setStartid(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setCount(value);
      break;
    case 4:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsdealsfeedbacks(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.CoreSchema.V1.GetUserFeedbacksRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.CoreSchema.V1.GetUserFeedbacksRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.CoreSchema.V1.GetUserFeedbacksRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.CoreSchema.V1.GetUserFeedbacksRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUserid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getStartid();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = message.getCount();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = message.getIsdealsfeedbacks();
  if (f) {
    writer.writeBool(
      4,
      f
    );
  }
};


/**
 * optional string UserId = 1;
 * @return {string}
 */
proto.CoreSchema.V1.GetUserFeedbacksRequest.prototype.getUserid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.CoreSchema.V1.GetUserFeedbacksRequest.prototype.setUserid = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional int64 startId = 2;
 * @return {number}
 */
proto.CoreSchema.V1.GetUserFeedbacksRequest.prototype.getStartid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.CoreSchema.V1.GetUserFeedbacksRequest.prototype.setStartid = function(value) {
  jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int32 count = 3;
 * @return {number}
 */
proto.CoreSchema.V1.GetUserFeedbacksRequest.prototype.getCount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/** @param {number} value */
proto.CoreSchema.V1.GetUserFeedbacksRequest.prototype.setCount = function(value) {
  jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional bool IsDealsFeedbacks = 4;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.CoreSchema.V1.GetUserFeedbacksRequest.prototype.getIsdealsfeedbacks = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 4, false));
};


/** @param {boolean} value */
proto.CoreSchema.V1.GetUserFeedbacksRequest.prototype.setIsdealsfeedbacks = function(value) {
  jspb.Message.setProto3BooleanField(this, 4, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.CoreSchema.V1.GetUserFeedbacksResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.CoreSchema.V1.GetUserFeedbacksResponse.repeatedFields_, null);
};
goog.inherits(proto.CoreSchema.V1.GetUserFeedbacksResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.CoreSchema.V1.GetUserFeedbacksResponse.displayName = 'proto.CoreSchema.V1.GetUserFeedbacksResponse';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.CoreSchema.V1.GetUserFeedbacksResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.CoreSchema.V1.GetUserFeedbacksResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.CoreSchema.V1.GetUserFeedbacksResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.CoreSchema.V1.GetUserFeedbacksResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.CoreSchema.V1.GetUserFeedbacksResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    feedbacksList: jspb.Message.toObjectList(msg.getFeedbacksList(),
    proto.CoreSchema.V1.Feedback.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.CoreSchema.V1.GetUserFeedbacksResponse}
 */
proto.CoreSchema.V1.GetUserFeedbacksResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.CoreSchema.V1.GetUserFeedbacksResponse;
  return proto.CoreSchema.V1.GetUserFeedbacksResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.CoreSchema.V1.GetUserFeedbacksResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.CoreSchema.V1.GetUserFeedbacksResponse}
 */
proto.CoreSchema.V1.GetUserFeedbacksResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.CoreSchema.V1.Feedback;
      reader.readMessage(value,proto.CoreSchema.V1.Feedback.deserializeBinaryFromReader);
      msg.addFeedbacks(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.CoreSchema.V1.GetUserFeedbacksResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.CoreSchema.V1.GetUserFeedbacksResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.CoreSchema.V1.GetUserFeedbacksResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.CoreSchema.V1.GetUserFeedbacksResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getFeedbacksList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.CoreSchema.V1.Feedback.serializeBinaryToWriter
    );
  }
};


/**
 * repeated Feedback Feedbacks = 1;
 * @return {!Array<!proto.CoreSchema.V1.Feedback>}
 */
proto.CoreSchema.V1.GetUserFeedbacksResponse.prototype.getFeedbacksList = function() {
  return /** @type{!Array<!proto.CoreSchema.V1.Feedback>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.CoreSchema.V1.Feedback, 1));
};


/** @param {!Array<!proto.CoreSchema.V1.Feedback>} value */
proto.CoreSchema.V1.GetUserFeedbacksResponse.prototype.setFeedbacksList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.CoreSchema.V1.Feedback=} opt_value
 * @param {number=} opt_index
 * @return {!proto.CoreSchema.V1.Feedback}
 */
proto.CoreSchema.V1.GetUserFeedbacksResponse.prototype.addFeedbacks = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.CoreSchema.V1.Feedback, opt_index);
};


proto.CoreSchema.V1.GetUserFeedbacksResponse.prototype.clearFeedbacksList = function() {
  this.setFeedbacksList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.CoreSchema.V1.SubscribeAdvertisementChangesResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.CoreSchema.V1.SubscribeAdvertisementChangesResponse.oneofGroups_);
};
goog.inherits(proto.CoreSchema.V1.SubscribeAdvertisementChangesResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.CoreSchema.V1.SubscribeAdvertisementChangesResponse.displayName = 'proto.CoreSchema.V1.SubscribeAdvertisementChangesResponse';
}
/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.CoreSchema.V1.SubscribeAdvertisementChangesResponse.oneofGroups_ = [[1,2,3]];

/**
 * @enum {number}
 */
proto.CoreSchema.V1.SubscribeAdvertisementChangesResponse.ContentCase = {
  CONTENT_NOT_SET: 0,
  ADVERTISEMENT: 1,
  ADDELETED: 2,
  KEEPALIVE: 3
};

/**
 * @return {proto.CoreSchema.V1.SubscribeAdvertisementChangesResponse.ContentCase}
 */
proto.CoreSchema.V1.SubscribeAdvertisementChangesResponse.prototype.getContentCase = function() {
  return /** @type {proto.CoreSchema.V1.SubscribeAdvertisementChangesResponse.ContentCase} */(jspb.Message.computeOneofCase(this, proto.CoreSchema.V1.SubscribeAdvertisementChangesResponse.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.CoreSchema.V1.SubscribeAdvertisementChangesResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.CoreSchema.V1.SubscribeAdvertisementChangesResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.CoreSchema.V1.SubscribeAdvertisementChangesResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.CoreSchema.V1.SubscribeAdvertisementChangesResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    advertisement: (f = msg.getAdvertisement()) && proto.CoreSchema.V1.Advertisement.toObject(includeInstance, f),
    addeleted: jspb.Message.getFieldWithDefault(msg, 2, false),
    keepalive: jspb.Message.getFieldWithDefault(msg, 3, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.CoreSchema.V1.SubscribeAdvertisementChangesResponse}
 */
proto.CoreSchema.V1.SubscribeAdvertisementChangesResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.CoreSchema.V1.SubscribeAdvertisementChangesResponse;
  return proto.CoreSchema.V1.SubscribeAdvertisementChangesResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.CoreSchema.V1.SubscribeAdvertisementChangesResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.CoreSchema.V1.SubscribeAdvertisementChangesResponse}
 */
proto.CoreSchema.V1.SubscribeAdvertisementChangesResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.CoreSchema.V1.Advertisement;
      reader.readMessage(value,proto.CoreSchema.V1.Advertisement.deserializeBinaryFromReader);
      msg.setAdvertisement(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setAddeleted(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setKeepalive(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.CoreSchema.V1.SubscribeAdvertisementChangesResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.CoreSchema.V1.SubscribeAdvertisementChangesResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.CoreSchema.V1.SubscribeAdvertisementChangesResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.CoreSchema.V1.SubscribeAdvertisementChangesResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAdvertisement();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.CoreSchema.V1.Advertisement.serializeBinaryToWriter
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeBool(
      2,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeBool(
      3,
      f
    );
  }
};


/**
 * optional Advertisement Advertisement = 1;
 * @return {?proto.CoreSchema.V1.Advertisement}
 */
proto.CoreSchema.V1.SubscribeAdvertisementChangesResponse.prototype.getAdvertisement = function() {
  return /** @type{?proto.CoreSchema.V1.Advertisement} */ (
    jspb.Message.getWrapperField(this, proto.CoreSchema.V1.Advertisement, 1));
};


/** @param {?proto.CoreSchema.V1.Advertisement|undefined} value */
proto.CoreSchema.V1.SubscribeAdvertisementChangesResponse.prototype.setAdvertisement = function(value) {
  jspb.Message.setOneofWrapperField(this, 1, proto.CoreSchema.V1.SubscribeAdvertisementChangesResponse.oneofGroups_[0], value);
};


proto.CoreSchema.V1.SubscribeAdvertisementChangesResponse.prototype.clearAdvertisement = function() {
  this.setAdvertisement(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.CoreSchema.V1.SubscribeAdvertisementChangesResponse.prototype.hasAdvertisement = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional bool AdDeleted = 2;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.CoreSchema.V1.SubscribeAdvertisementChangesResponse.prototype.getAddeleted = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 2, false));
};


/** @param {boolean} value */
proto.CoreSchema.V1.SubscribeAdvertisementChangesResponse.prototype.setAddeleted = function(value) {
  jspb.Message.setOneofField(this, 2, proto.CoreSchema.V1.SubscribeAdvertisementChangesResponse.oneofGroups_[0], value);
};


proto.CoreSchema.V1.SubscribeAdvertisementChangesResponse.prototype.clearAddeleted = function() {
  jspb.Message.setOneofField(this, 2, proto.CoreSchema.V1.SubscribeAdvertisementChangesResponse.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.CoreSchema.V1.SubscribeAdvertisementChangesResponse.prototype.hasAddeleted = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional bool KeepAlive = 3;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.CoreSchema.V1.SubscribeAdvertisementChangesResponse.prototype.getKeepalive = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 3, false));
};


/** @param {boolean} value */
proto.CoreSchema.V1.SubscribeAdvertisementChangesResponse.prototype.setKeepalive = function(value) {
  jspb.Message.setOneofField(this, 3, proto.CoreSchema.V1.SubscribeAdvertisementChangesResponse.oneofGroups_[0], value);
};


proto.CoreSchema.V1.SubscribeAdvertisementChangesResponse.prototype.clearKeepalive = function() {
  jspb.Message.setOneofField(this, 3, proto.CoreSchema.V1.SubscribeAdvertisementChangesResponse.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.CoreSchema.V1.SubscribeAdvertisementChangesResponse.prototype.hasKeepalive = function() {
  return jspb.Message.getField(this, 3) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.CoreSchema.V1.AddUserToTrustedRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.CoreSchema.V1.AddUserToTrustedRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.CoreSchema.V1.AddUserToTrustedRequest.displayName = 'proto.CoreSchema.V1.AddUserToTrustedRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.CoreSchema.V1.AddUserToTrustedRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.CoreSchema.V1.AddUserToTrustedRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.CoreSchema.V1.AddUserToTrustedRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.CoreSchema.V1.AddUserToTrustedRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    userid: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.CoreSchema.V1.AddUserToTrustedRequest}
 */
proto.CoreSchema.V1.AddUserToTrustedRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.CoreSchema.V1.AddUserToTrustedRequest;
  return proto.CoreSchema.V1.AddUserToTrustedRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.CoreSchema.V1.AddUserToTrustedRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.CoreSchema.V1.AddUserToTrustedRequest}
 */
proto.CoreSchema.V1.AddUserToTrustedRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.CoreSchema.V1.AddUserToTrustedRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.CoreSchema.V1.AddUserToTrustedRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.CoreSchema.V1.AddUserToTrustedRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.CoreSchema.V1.AddUserToTrustedRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUserid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string UserId = 1;
 * @return {string}
 */
proto.CoreSchema.V1.AddUserToTrustedRequest.prototype.getUserid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.CoreSchema.V1.AddUserToTrustedRequest.prototype.setUserid = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.CoreSchema.V1.CreateUserComplaintRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.CoreSchema.V1.CreateUserComplaintRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.CoreSchema.V1.CreateUserComplaintRequest.displayName = 'proto.CoreSchema.V1.CreateUserComplaintRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.CoreSchema.V1.CreateUserComplaintRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.CoreSchema.V1.CreateUserComplaintRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.CoreSchema.V1.CreateUserComplaintRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.CoreSchema.V1.CreateUserComplaintRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    userid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    text: jspb.Message.getFieldWithDefault(msg, 2, ""),
    contact: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.CoreSchema.V1.CreateUserComplaintRequest}
 */
proto.CoreSchema.V1.CreateUserComplaintRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.CoreSchema.V1.CreateUserComplaintRequest;
  return proto.CoreSchema.V1.CreateUserComplaintRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.CoreSchema.V1.CreateUserComplaintRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.CoreSchema.V1.CreateUserComplaintRequest}
 */
proto.CoreSchema.V1.CreateUserComplaintRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setText(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setContact(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.CoreSchema.V1.CreateUserComplaintRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.CoreSchema.V1.CreateUserComplaintRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.CoreSchema.V1.CreateUserComplaintRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.CoreSchema.V1.CreateUserComplaintRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUserid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getText();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getContact();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional string UserId = 1;
 * @return {string}
 */
proto.CoreSchema.V1.CreateUserComplaintRequest.prototype.getUserid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.CoreSchema.V1.CreateUserComplaintRequest.prototype.setUserid = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string Text = 2;
 * @return {string}
 */
proto.CoreSchema.V1.CreateUserComplaintRequest.prototype.getText = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.CoreSchema.V1.CreateUserComplaintRequest.prototype.setText = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string Contact = 3;
 * @return {string}
 */
proto.CoreSchema.V1.CreateUserComplaintRequest.prototype.getContact = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.CoreSchema.V1.CreateUserComplaintRequest.prototype.setContact = function(value) {
  jspb.Message.setProto3StringField(this, 3, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.CoreSchema.V1.BlockUserRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.CoreSchema.V1.BlockUserRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.CoreSchema.V1.BlockUserRequest.displayName = 'proto.CoreSchema.V1.BlockUserRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.CoreSchema.V1.BlockUserRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.CoreSchema.V1.BlockUserRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.CoreSchema.V1.BlockUserRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.CoreSchema.V1.BlockUserRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    userid: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.CoreSchema.V1.BlockUserRequest}
 */
proto.CoreSchema.V1.BlockUserRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.CoreSchema.V1.BlockUserRequest;
  return proto.CoreSchema.V1.BlockUserRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.CoreSchema.V1.BlockUserRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.CoreSchema.V1.BlockUserRequest}
 */
proto.CoreSchema.V1.BlockUserRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.CoreSchema.V1.BlockUserRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.CoreSchema.V1.BlockUserRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.CoreSchema.V1.BlockUserRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.CoreSchema.V1.BlockUserRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUserid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string UserId = 1;
 * @return {string}
 */
proto.CoreSchema.V1.BlockUserRequest.prototype.getUserid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.CoreSchema.V1.BlockUserRequest.prototype.setUserid = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.CoreSchema.V1.UnBlockUserRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.CoreSchema.V1.UnBlockUserRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.CoreSchema.V1.UnBlockUserRequest.displayName = 'proto.CoreSchema.V1.UnBlockUserRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.CoreSchema.V1.UnBlockUserRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.CoreSchema.V1.UnBlockUserRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.CoreSchema.V1.UnBlockUserRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.CoreSchema.V1.UnBlockUserRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    userid: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.CoreSchema.V1.UnBlockUserRequest}
 */
proto.CoreSchema.V1.UnBlockUserRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.CoreSchema.V1.UnBlockUserRequest;
  return proto.CoreSchema.V1.UnBlockUserRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.CoreSchema.V1.UnBlockUserRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.CoreSchema.V1.UnBlockUserRequest}
 */
proto.CoreSchema.V1.UnBlockUserRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.CoreSchema.V1.UnBlockUserRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.CoreSchema.V1.UnBlockUserRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.CoreSchema.V1.UnBlockUserRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.CoreSchema.V1.UnBlockUserRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUserid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string UserId = 1;
 * @return {string}
 */
proto.CoreSchema.V1.UnBlockUserRequest.prototype.getUserid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.CoreSchema.V1.UnBlockUserRequest.prototype.setUserid = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.CoreSchema.V1.GetMyTrustedUsersResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.CoreSchema.V1.GetMyTrustedUsersResponse.repeatedFields_, null);
};
goog.inherits(proto.CoreSchema.V1.GetMyTrustedUsersResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.CoreSchema.V1.GetMyTrustedUsersResponse.displayName = 'proto.CoreSchema.V1.GetMyTrustedUsersResponse';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.CoreSchema.V1.GetMyTrustedUsersResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.CoreSchema.V1.GetMyTrustedUsersResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.CoreSchema.V1.GetMyTrustedUsersResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.CoreSchema.V1.GetMyTrustedUsersResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.CoreSchema.V1.GetMyTrustedUsersResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    usersList: jspb.Message.toObjectList(msg.getUsersList(),
    proto.CoreSchema.V1.UserInfo.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.CoreSchema.V1.GetMyTrustedUsersResponse}
 */
proto.CoreSchema.V1.GetMyTrustedUsersResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.CoreSchema.V1.GetMyTrustedUsersResponse;
  return proto.CoreSchema.V1.GetMyTrustedUsersResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.CoreSchema.V1.GetMyTrustedUsersResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.CoreSchema.V1.GetMyTrustedUsersResponse}
 */
proto.CoreSchema.V1.GetMyTrustedUsersResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.CoreSchema.V1.UserInfo;
      reader.readMessage(value,proto.CoreSchema.V1.UserInfo.deserializeBinaryFromReader);
      msg.addUsers(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.CoreSchema.V1.GetMyTrustedUsersResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.CoreSchema.V1.GetMyTrustedUsersResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.CoreSchema.V1.GetMyTrustedUsersResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.CoreSchema.V1.GetMyTrustedUsersResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUsersList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.CoreSchema.V1.UserInfo.serializeBinaryToWriter
    );
  }
};


/**
 * repeated UserInfo Users = 1;
 * @return {!Array<!proto.CoreSchema.V1.UserInfo>}
 */
proto.CoreSchema.V1.GetMyTrustedUsersResponse.prototype.getUsersList = function() {
  return /** @type{!Array<!proto.CoreSchema.V1.UserInfo>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.CoreSchema.V1.UserInfo, 1));
};


/** @param {!Array<!proto.CoreSchema.V1.UserInfo>} value */
proto.CoreSchema.V1.GetMyTrustedUsersResponse.prototype.setUsersList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.CoreSchema.V1.UserInfo=} opt_value
 * @param {number=} opt_index
 * @return {!proto.CoreSchema.V1.UserInfo}
 */
proto.CoreSchema.V1.GetMyTrustedUsersResponse.prototype.addUsers = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.CoreSchema.V1.UserInfo, opt_index);
};


proto.CoreSchema.V1.GetMyTrustedUsersResponse.prototype.clearUsersList = function() {
  this.setUsersList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.CoreSchema.V1.RemoveFromTrustedRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.CoreSchema.V1.RemoveFromTrustedRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.CoreSchema.V1.RemoveFromTrustedRequest.displayName = 'proto.CoreSchema.V1.RemoveFromTrustedRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.CoreSchema.V1.RemoveFromTrustedRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.CoreSchema.V1.RemoveFromTrustedRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.CoreSchema.V1.RemoveFromTrustedRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.CoreSchema.V1.RemoveFromTrustedRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    userid: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.CoreSchema.V1.RemoveFromTrustedRequest}
 */
proto.CoreSchema.V1.RemoveFromTrustedRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.CoreSchema.V1.RemoveFromTrustedRequest;
  return proto.CoreSchema.V1.RemoveFromTrustedRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.CoreSchema.V1.RemoveFromTrustedRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.CoreSchema.V1.RemoveFromTrustedRequest}
 */
proto.CoreSchema.V1.RemoveFromTrustedRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.CoreSchema.V1.RemoveFromTrustedRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.CoreSchema.V1.RemoveFromTrustedRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.CoreSchema.V1.RemoveFromTrustedRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.CoreSchema.V1.RemoveFromTrustedRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUserid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string UserId = 1;
 * @return {string}
 */
proto.CoreSchema.V1.RemoveFromTrustedRequest.prototype.getUserid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.CoreSchema.V1.RemoveFromTrustedRequest.prototype.setUserid = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.CoreSchema.V1.GetMyBlockedUsersResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.CoreSchema.V1.GetMyBlockedUsersResponse.repeatedFields_, null);
};
goog.inherits(proto.CoreSchema.V1.GetMyBlockedUsersResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.CoreSchema.V1.GetMyBlockedUsersResponse.displayName = 'proto.CoreSchema.V1.GetMyBlockedUsersResponse';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.CoreSchema.V1.GetMyBlockedUsersResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.CoreSchema.V1.GetMyBlockedUsersResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.CoreSchema.V1.GetMyBlockedUsersResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.CoreSchema.V1.GetMyBlockedUsersResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.CoreSchema.V1.GetMyBlockedUsersResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    usersList: jspb.Message.toObjectList(msg.getUsersList(),
    proto.CoreSchema.V1.UserInfo.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.CoreSchema.V1.GetMyBlockedUsersResponse}
 */
proto.CoreSchema.V1.GetMyBlockedUsersResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.CoreSchema.V1.GetMyBlockedUsersResponse;
  return proto.CoreSchema.V1.GetMyBlockedUsersResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.CoreSchema.V1.GetMyBlockedUsersResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.CoreSchema.V1.GetMyBlockedUsersResponse}
 */
proto.CoreSchema.V1.GetMyBlockedUsersResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.CoreSchema.V1.UserInfo;
      reader.readMessage(value,proto.CoreSchema.V1.UserInfo.deserializeBinaryFromReader);
      msg.addUsers(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.CoreSchema.V1.GetMyBlockedUsersResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.CoreSchema.V1.GetMyBlockedUsersResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.CoreSchema.V1.GetMyBlockedUsersResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.CoreSchema.V1.GetMyBlockedUsersResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUsersList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.CoreSchema.V1.UserInfo.serializeBinaryToWriter
    );
  }
};


/**
 * repeated UserInfo Users = 1;
 * @return {!Array<!proto.CoreSchema.V1.UserInfo>}
 */
proto.CoreSchema.V1.GetMyBlockedUsersResponse.prototype.getUsersList = function() {
  return /** @type{!Array<!proto.CoreSchema.V1.UserInfo>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.CoreSchema.V1.UserInfo, 1));
};


/** @param {!Array<!proto.CoreSchema.V1.UserInfo>} value */
proto.CoreSchema.V1.GetMyBlockedUsersResponse.prototype.setUsersList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.CoreSchema.V1.UserInfo=} opt_value
 * @param {number=} opt_index
 * @return {!proto.CoreSchema.V1.UserInfo}
 */
proto.CoreSchema.V1.GetMyBlockedUsersResponse.prototype.addUsers = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.CoreSchema.V1.UserInfo, opt_index);
};


proto.CoreSchema.V1.GetMyBlockedUsersResponse.prototype.clearUsersList = function() {
  this.setUsersList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.CoreSchema.V1.IsUserTrustedRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.CoreSchema.V1.IsUserTrustedRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.CoreSchema.V1.IsUserTrustedRequest.displayName = 'proto.CoreSchema.V1.IsUserTrustedRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.CoreSchema.V1.IsUserTrustedRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.CoreSchema.V1.IsUserTrustedRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.CoreSchema.V1.IsUserTrustedRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.CoreSchema.V1.IsUserTrustedRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    userid: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.CoreSchema.V1.IsUserTrustedRequest}
 */
proto.CoreSchema.V1.IsUserTrustedRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.CoreSchema.V1.IsUserTrustedRequest;
  return proto.CoreSchema.V1.IsUserTrustedRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.CoreSchema.V1.IsUserTrustedRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.CoreSchema.V1.IsUserTrustedRequest}
 */
proto.CoreSchema.V1.IsUserTrustedRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.CoreSchema.V1.IsUserTrustedRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.CoreSchema.V1.IsUserTrustedRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.CoreSchema.V1.IsUserTrustedRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.CoreSchema.V1.IsUserTrustedRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUserid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string UserId = 1;
 * @return {string}
 */
proto.CoreSchema.V1.IsUserTrustedRequest.prototype.getUserid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.CoreSchema.V1.IsUserTrustedRequest.prototype.setUserid = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.CoreSchema.V1.IsUserBlockedRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.CoreSchema.V1.IsUserBlockedRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.CoreSchema.V1.IsUserBlockedRequest.displayName = 'proto.CoreSchema.V1.IsUserBlockedRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.CoreSchema.V1.IsUserBlockedRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.CoreSchema.V1.IsUserBlockedRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.CoreSchema.V1.IsUserBlockedRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.CoreSchema.V1.IsUserBlockedRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    userid: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.CoreSchema.V1.IsUserBlockedRequest}
 */
proto.CoreSchema.V1.IsUserBlockedRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.CoreSchema.V1.IsUserBlockedRequest;
  return proto.CoreSchema.V1.IsUserBlockedRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.CoreSchema.V1.IsUserBlockedRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.CoreSchema.V1.IsUserBlockedRequest}
 */
proto.CoreSchema.V1.IsUserBlockedRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.CoreSchema.V1.IsUserBlockedRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.CoreSchema.V1.IsUserBlockedRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.CoreSchema.V1.IsUserBlockedRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.CoreSchema.V1.IsUserBlockedRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUserid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string UserId = 1;
 * @return {string}
 */
proto.CoreSchema.V1.IsUserBlockedRequest.prototype.getUserid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.CoreSchema.V1.IsUserBlockedRequest.prototype.setUserid = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.CoreSchema.V1.IsUserTrustedResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.CoreSchema.V1.IsUserTrustedResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.CoreSchema.V1.IsUserTrustedResponse.displayName = 'proto.CoreSchema.V1.IsUserTrustedResponse';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.CoreSchema.V1.IsUserTrustedResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.CoreSchema.V1.IsUserTrustedResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.CoreSchema.V1.IsUserTrustedResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.CoreSchema.V1.IsUserTrustedResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    istrusted: jspb.Message.getFieldWithDefault(msg, 1, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.CoreSchema.V1.IsUserTrustedResponse}
 */
proto.CoreSchema.V1.IsUserTrustedResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.CoreSchema.V1.IsUserTrustedResponse;
  return proto.CoreSchema.V1.IsUserTrustedResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.CoreSchema.V1.IsUserTrustedResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.CoreSchema.V1.IsUserTrustedResponse}
 */
proto.CoreSchema.V1.IsUserTrustedResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIstrusted(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.CoreSchema.V1.IsUserTrustedResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.CoreSchema.V1.IsUserTrustedResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.CoreSchema.V1.IsUserTrustedResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.CoreSchema.V1.IsUserTrustedResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getIstrusted();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
};


/**
 * optional bool IsTrusted = 1;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.CoreSchema.V1.IsUserTrustedResponse.prototype.getIstrusted = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 1, false));
};


/** @param {boolean} value */
proto.CoreSchema.V1.IsUserTrustedResponse.prototype.setIstrusted = function(value) {
  jspb.Message.setProto3BooleanField(this, 1, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.CoreSchema.V1.IsUserBlockedResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.CoreSchema.V1.IsUserBlockedResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.CoreSchema.V1.IsUserBlockedResponse.displayName = 'proto.CoreSchema.V1.IsUserBlockedResponse';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.CoreSchema.V1.IsUserBlockedResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.CoreSchema.V1.IsUserBlockedResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.CoreSchema.V1.IsUserBlockedResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.CoreSchema.V1.IsUserBlockedResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    isblocked: jspb.Message.getFieldWithDefault(msg, 1, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.CoreSchema.V1.IsUserBlockedResponse}
 */
proto.CoreSchema.V1.IsUserBlockedResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.CoreSchema.V1.IsUserBlockedResponse;
  return proto.CoreSchema.V1.IsUserBlockedResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.CoreSchema.V1.IsUserBlockedResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.CoreSchema.V1.IsUserBlockedResponse}
 */
proto.CoreSchema.V1.IsUserBlockedResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsblocked(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.CoreSchema.V1.IsUserBlockedResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.CoreSchema.V1.IsUserBlockedResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.CoreSchema.V1.IsUserBlockedResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.CoreSchema.V1.IsUserBlockedResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getIsblocked();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
};


/**
 * optional bool IsBlocked = 1;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.CoreSchema.V1.IsUserBlockedResponse.prototype.getIsblocked = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 1, false));
};


/** @param {boolean} value */
proto.CoreSchema.V1.IsUserBlockedResponse.prototype.setIsblocked = function(value) {
  jspb.Message.setProto3BooleanField(this, 1, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.CoreSchema.V1.Transaction = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.CoreSchema.V1.Transaction, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.CoreSchema.V1.Transaction.displayName = 'proto.CoreSchema.V1.Transaction';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.CoreSchema.V1.Transaction.prototype.toObject = function(opt_includeInstance) {
  return proto.CoreSchema.V1.Transaction.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.CoreSchema.V1.Transaction} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.CoreSchema.V1.Transaction.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0),
    txid: jspb.Message.getFieldWithDefault(msg, 2, ""),
    amount: (f = msg.getAmount()) && proto.CoreSchema.V1.Decimal.toObject(includeInstance, f),
    confirmations: jspb.Message.getFieldWithDefault(msg, 4, 0),
    to: jspb.Message.getFieldWithDefault(msg, 5, ""),
    time: (f = msg.getTime()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.CoreSchema.V1.Transaction}
 */
proto.CoreSchema.V1.Transaction.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.CoreSchema.V1.Transaction;
  return proto.CoreSchema.V1.Transaction.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.CoreSchema.V1.Transaction} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.CoreSchema.V1.Transaction}
 */
proto.CoreSchema.V1.Transaction.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setTxid(value);
      break;
    case 3:
      var value = new proto.CoreSchema.V1.Decimal;
      reader.readMessage(value,proto.CoreSchema.V1.Decimal.deserializeBinaryFromReader);
      msg.setAmount(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setConfirmations(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setTo(value);
      break;
    case 6:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setTime(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.CoreSchema.V1.Transaction.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.CoreSchema.V1.Transaction.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.CoreSchema.V1.Transaction} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.CoreSchema.V1.Transaction.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeUint64(
      1,
      f
    );
  }
  f = message.getTxid();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getAmount();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.CoreSchema.V1.Decimal.serializeBinaryToWriter
    );
  }
  f = message.getConfirmations();
  if (f !== 0) {
    writer.writeUint32(
      4,
      f
    );
  }
  f = message.getTo();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getTime();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
};


/**
 * optional uint64 Id = 1;
 * @return {number}
 */
proto.CoreSchema.V1.Transaction.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.CoreSchema.V1.Transaction.prototype.setId = function(value) {
  jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string TxId = 2;
 * @return {string}
 */
proto.CoreSchema.V1.Transaction.prototype.getTxid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.CoreSchema.V1.Transaction.prototype.setTxid = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional Decimal Amount = 3;
 * @return {?proto.CoreSchema.V1.Decimal}
 */
proto.CoreSchema.V1.Transaction.prototype.getAmount = function() {
  return /** @type{?proto.CoreSchema.V1.Decimal} */ (
    jspb.Message.getWrapperField(this, proto.CoreSchema.V1.Decimal, 3));
};


/** @param {?proto.CoreSchema.V1.Decimal|undefined} value */
proto.CoreSchema.V1.Transaction.prototype.setAmount = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


proto.CoreSchema.V1.Transaction.prototype.clearAmount = function() {
  this.setAmount(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.CoreSchema.V1.Transaction.prototype.hasAmount = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional uint32 Confirmations = 4;
 * @return {number}
 */
proto.CoreSchema.V1.Transaction.prototype.getConfirmations = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/** @param {number} value */
proto.CoreSchema.V1.Transaction.prototype.setConfirmations = function(value) {
  jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional string To = 5;
 * @return {string}
 */
proto.CoreSchema.V1.Transaction.prototype.getTo = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/** @param {string} value */
proto.CoreSchema.V1.Transaction.prototype.setTo = function(value) {
  jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional google.protobuf.Timestamp Time = 6;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.CoreSchema.V1.Transaction.prototype.getTime = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 6));
};


/** @param {?proto.google.protobuf.Timestamp|undefined} value */
proto.CoreSchema.V1.Transaction.prototype.setTime = function(value) {
  jspb.Message.setWrapperField(this, 6, value);
};


proto.CoreSchema.V1.Transaction.prototype.clearTime = function() {
  this.setTime(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.CoreSchema.V1.Transaction.prototype.hasTime = function() {
  return jspb.Message.getField(this, 6) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.CoreSchema.V1.GetTransactionsRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.CoreSchema.V1.GetTransactionsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.CoreSchema.V1.GetTransactionsRequest.displayName = 'proto.CoreSchema.V1.GetTransactionsRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.CoreSchema.V1.GetTransactionsRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.CoreSchema.V1.GetTransactionsRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.CoreSchema.V1.GetTransactionsRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.CoreSchema.V1.GetTransactionsRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    isinput: jspb.Message.getFieldWithDefault(msg, 1, false),
    lastid: jspb.Message.getFieldWithDefault(msg, 2, 0),
    count: jspb.Message.getFieldWithDefault(msg, 3, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.CoreSchema.V1.GetTransactionsRequest}
 */
proto.CoreSchema.V1.GetTransactionsRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.CoreSchema.V1.GetTransactionsRequest;
  return proto.CoreSchema.V1.GetTransactionsRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.CoreSchema.V1.GetTransactionsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.CoreSchema.V1.GetTransactionsRequest}
 */
proto.CoreSchema.V1.GetTransactionsRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsinput(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setLastid(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setCount(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.CoreSchema.V1.GetTransactionsRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.CoreSchema.V1.GetTransactionsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.CoreSchema.V1.GetTransactionsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.CoreSchema.V1.GetTransactionsRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getIsinput();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
  f = message.getLastid();
  if (f !== 0) {
    writer.writeUint64(
      2,
      f
    );
  }
  f = message.getCount();
  if (f !== 0) {
    writer.writeUint32(
      3,
      f
    );
  }
};


/**
 * optional bool IsInput = 1;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.CoreSchema.V1.GetTransactionsRequest.prototype.getIsinput = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 1, false));
};


/** @param {boolean} value */
proto.CoreSchema.V1.GetTransactionsRequest.prototype.setIsinput = function(value) {
  jspb.Message.setProto3BooleanField(this, 1, value);
};


/**
 * optional uint64 LastId = 2;
 * @return {number}
 */
proto.CoreSchema.V1.GetTransactionsRequest.prototype.getLastid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.CoreSchema.V1.GetTransactionsRequest.prototype.setLastid = function(value) {
  jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional uint32 Count = 3;
 * @return {number}
 */
proto.CoreSchema.V1.GetTransactionsRequest.prototype.getCount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/** @param {number} value */
proto.CoreSchema.V1.GetTransactionsRequest.prototype.setCount = function(value) {
  jspb.Message.setProto3IntField(this, 3, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.CoreSchema.V1.GetTransactionsResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.CoreSchema.V1.GetTransactionsResponse.repeatedFields_, null);
};
goog.inherits(proto.CoreSchema.V1.GetTransactionsResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.CoreSchema.V1.GetTransactionsResponse.displayName = 'proto.CoreSchema.V1.GetTransactionsResponse';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.CoreSchema.V1.GetTransactionsResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.CoreSchema.V1.GetTransactionsResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.CoreSchema.V1.GetTransactionsResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.CoreSchema.V1.GetTransactionsResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.CoreSchema.V1.GetTransactionsResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    transactionsList: jspb.Message.toObjectList(msg.getTransactionsList(),
    proto.CoreSchema.V1.Transaction.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.CoreSchema.V1.GetTransactionsResponse}
 */
proto.CoreSchema.V1.GetTransactionsResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.CoreSchema.V1.GetTransactionsResponse;
  return proto.CoreSchema.V1.GetTransactionsResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.CoreSchema.V1.GetTransactionsResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.CoreSchema.V1.GetTransactionsResponse}
 */
proto.CoreSchema.V1.GetTransactionsResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.CoreSchema.V1.Transaction;
      reader.readMessage(value,proto.CoreSchema.V1.Transaction.deserializeBinaryFromReader);
      msg.addTransactions(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.CoreSchema.V1.GetTransactionsResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.CoreSchema.V1.GetTransactionsResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.CoreSchema.V1.GetTransactionsResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.CoreSchema.V1.GetTransactionsResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTransactionsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.CoreSchema.V1.Transaction.serializeBinaryToWriter
    );
  }
};


/**
 * repeated Transaction Transactions = 1;
 * @return {!Array<!proto.CoreSchema.V1.Transaction>}
 */
proto.CoreSchema.V1.GetTransactionsResponse.prototype.getTransactionsList = function() {
  return /** @type{!Array<!proto.CoreSchema.V1.Transaction>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.CoreSchema.V1.Transaction, 1));
};


/** @param {!Array<!proto.CoreSchema.V1.Transaction>} value */
proto.CoreSchema.V1.GetTransactionsResponse.prototype.setTransactionsList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.CoreSchema.V1.Transaction=} opt_value
 * @param {number=} opt_index
 * @return {!proto.CoreSchema.V1.Transaction}
 */
proto.CoreSchema.V1.GetTransactionsResponse.prototype.addTransactions = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.CoreSchema.V1.Transaction, opt_index);
};


proto.CoreSchema.V1.GetTransactionsResponse.prototype.clearTransactionsList = function() {
  this.setTransactionsList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.CoreSchema.V1.GetTransactionByIdRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.CoreSchema.V1.GetTransactionByIdRequest.repeatedFields_, null);
};
goog.inherits(proto.CoreSchema.V1.GetTransactionByIdRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.CoreSchema.V1.GetTransactionByIdRequest.displayName = 'proto.CoreSchema.V1.GetTransactionByIdRequest';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.CoreSchema.V1.GetTransactionByIdRequest.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.CoreSchema.V1.GetTransactionByIdRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.CoreSchema.V1.GetTransactionByIdRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.CoreSchema.V1.GetTransactionByIdRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.CoreSchema.V1.GetTransactionByIdRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    txidList: jspb.Message.getRepeatedField(msg, 1),
    isinput: jspb.Message.getFieldWithDefault(msg, 2, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.CoreSchema.V1.GetTransactionByIdRequest}
 */
proto.CoreSchema.V1.GetTransactionByIdRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.CoreSchema.V1.GetTransactionByIdRequest;
  return proto.CoreSchema.V1.GetTransactionByIdRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.CoreSchema.V1.GetTransactionByIdRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.CoreSchema.V1.GetTransactionByIdRequest}
 */
proto.CoreSchema.V1.GetTransactionByIdRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.addTxid(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsinput(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.CoreSchema.V1.GetTransactionByIdRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.CoreSchema.V1.GetTransactionByIdRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.CoreSchema.V1.GetTransactionByIdRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.CoreSchema.V1.GetTransactionByIdRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTxidList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      1,
      f
    );
  }
  f = message.getIsinput();
  if (f) {
    writer.writeBool(
      2,
      f
    );
  }
};


/**
 * repeated string TxId = 1;
 * @return {!Array<string>}
 */
proto.CoreSchema.V1.GetTransactionByIdRequest.prototype.getTxidList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 1));
};


/** @param {!Array<string>} value */
proto.CoreSchema.V1.GetTransactionByIdRequest.prototype.setTxidList = function(value) {
  jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {!string} value
 * @param {number=} opt_index
 */
proto.CoreSchema.V1.GetTransactionByIdRequest.prototype.addTxid = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


proto.CoreSchema.V1.GetTransactionByIdRequest.prototype.clearTxidList = function() {
  this.setTxidList([]);
};


/**
 * optional bool IsInput = 2;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.CoreSchema.V1.GetTransactionByIdRequest.prototype.getIsinput = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 2, false));
};


/** @param {boolean} value */
proto.CoreSchema.V1.GetTransactionByIdRequest.prototype.setIsinput = function(value) {
  jspb.Message.setProto3BooleanField(this, 2, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.CoreSchema.V1.BtcAddress = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.CoreSchema.V1.BtcAddress, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.CoreSchema.V1.BtcAddress.displayName = 'proto.CoreSchema.V1.BtcAddress';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.CoreSchema.V1.BtcAddress.prototype.toObject = function(opt_includeInstance) {
  return proto.CoreSchema.V1.BtcAddress.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.CoreSchema.V1.BtcAddress} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.CoreSchema.V1.BtcAddress.toObject = function(includeInstance, msg) {
  var f, obj = {
    legacy: jspb.Message.getFieldWithDefault(msg, 1, ""),
    bech32: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.CoreSchema.V1.BtcAddress}
 */
proto.CoreSchema.V1.BtcAddress.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.CoreSchema.V1.BtcAddress;
  return proto.CoreSchema.V1.BtcAddress.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.CoreSchema.V1.BtcAddress} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.CoreSchema.V1.BtcAddress}
 */
proto.CoreSchema.V1.BtcAddress.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setLegacy(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setBech32(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.CoreSchema.V1.BtcAddress.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.CoreSchema.V1.BtcAddress.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.CoreSchema.V1.BtcAddress} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.CoreSchema.V1.BtcAddress.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getLegacy();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getBech32();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string legacy = 1;
 * @return {string}
 */
proto.CoreSchema.V1.BtcAddress.prototype.getLegacy = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.CoreSchema.V1.BtcAddress.prototype.setLegacy = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string bech32 = 2;
 * @return {string}
 */
proto.CoreSchema.V1.BtcAddress.prototype.getBech32 = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.CoreSchema.V1.BtcAddress.prototype.setBech32 = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.CoreSchema.V1.GetInputAddressResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.CoreSchema.V1.GetInputAddressResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.CoreSchema.V1.GetInputAddressResponse.displayName = 'proto.CoreSchema.V1.GetInputAddressResponse';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.CoreSchema.V1.GetInputAddressResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.CoreSchema.V1.GetInputAddressResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.CoreSchema.V1.GetInputAddressResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.CoreSchema.V1.GetInputAddressResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    btcaddress: (f = msg.getBtcaddress()) && proto.CoreSchema.V1.BtcAddress.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.CoreSchema.V1.GetInputAddressResponse}
 */
proto.CoreSchema.V1.GetInputAddressResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.CoreSchema.V1.GetInputAddressResponse;
  return proto.CoreSchema.V1.GetInputAddressResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.CoreSchema.V1.GetInputAddressResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.CoreSchema.V1.GetInputAddressResponse}
 */
proto.CoreSchema.V1.GetInputAddressResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.CoreSchema.V1.BtcAddress;
      reader.readMessage(value,proto.CoreSchema.V1.BtcAddress.deserializeBinaryFromReader);
      msg.setBtcaddress(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.CoreSchema.V1.GetInputAddressResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.CoreSchema.V1.GetInputAddressResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.CoreSchema.V1.GetInputAddressResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.CoreSchema.V1.GetInputAddressResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getBtcaddress();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.CoreSchema.V1.BtcAddress.serializeBinaryToWriter
    );
  }
};


/**
 * optional BtcAddress BtcAddress = 1;
 * @return {?proto.CoreSchema.V1.BtcAddress}
 */
proto.CoreSchema.V1.GetInputAddressResponse.prototype.getBtcaddress = function() {
  return /** @type{?proto.CoreSchema.V1.BtcAddress} */ (
    jspb.Message.getWrapperField(this, proto.CoreSchema.V1.BtcAddress, 1));
};


/** @param {?proto.CoreSchema.V1.BtcAddress|undefined} value */
proto.CoreSchema.V1.GetInputAddressResponse.prototype.setBtcaddress = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.CoreSchema.V1.GetInputAddressResponse.prototype.clearBtcaddress = function() {
  this.setBtcaddress(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.CoreSchema.V1.GetInputAddressResponse.prototype.hasBtcaddress = function() {
  return jspb.Message.getField(this, 1) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.CoreSchema.V1.CreateTransactionRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.CoreSchema.V1.CreateTransactionRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.CoreSchema.V1.CreateTransactionRequest.displayName = 'proto.CoreSchema.V1.CreateTransactionRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.CoreSchema.V1.CreateTransactionRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.CoreSchema.V1.CreateTransactionRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.CoreSchema.V1.CreateTransactionRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.CoreSchema.V1.CreateTransactionRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    amount: (f = msg.getAmount()) && proto.CoreSchema.V1.Decimal.toObject(includeInstance, f),
    targetaddress: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.CoreSchema.V1.CreateTransactionRequest}
 */
proto.CoreSchema.V1.CreateTransactionRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.CoreSchema.V1.CreateTransactionRequest;
  return proto.CoreSchema.V1.CreateTransactionRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.CoreSchema.V1.CreateTransactionRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.CoreSchema.V1.CreateTransactionRequest}
 */
proto.CoreSchema.V1.CreateTransactionRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.CoreSchema.V1.Decimal;
      reader.readMessage(value,proto.CoreSchema.V1.Decimal.deserializeBinaryFromReader);
      msg.setAmount(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setTargetaddress(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.CoreSchema.V1.CreateTransactionRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.CoreSchema.V1.CreateTransactionRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.CoreSchema.V1.CreateTransactionRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.CoreSchema.V1.CreateTransactionRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAmount();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.CoreSchema.V1.Decimal.serializeBinaryToWriter
    );
  }
  f = message.getTargetaddress();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional Decimal Amount = 1;
 * @return {?proto.CoreSchema.V1.Decimal}
 */
proto.CoreSchema.V1.CreateTransactionRequest.prototype.getAmount = function() {
  return /** @type{?proto.CoreSchema.V1.Decimal} */ (
    jspb.Message.getWrapperField(this, proto.CoreSchema.V1.Decimal, 1));
};


/** @param {?proto.CoreSchema.V1.Decimal|undefined} value */
proto.CoreSchema.V1.CreateTransactionRequest.prototype.setAmount = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.CoreSchema.V1.CreateTransactionRequest.prototype.clearAmount = function() {
  this.setAmount(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.CoreSchema.V1.CreateTransactionRequest.prototype.hasAmount = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string TargetAddress = 2;
 * @return {string}
 */
proto.CoreSchema.V1.CreateTransactionRequest.prototype.getTargetaddress = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.CoreSchema.V1.CreateTransactionRequest.prototype.setTargetaddress = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.CoreSchema.V1.GetFeesResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.CoreSchema.V1.GetFeesResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.CoreSchema.V1.GetFeesResponse.displayName = 'proto.CoreSchema.V1.GetFeesResponse';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.CoreSchema.V1.GetFeesResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.CoreSchema.V1.GetFeesResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.CoreSchema.V1.GetFeesResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.CoreSchema.V1.GetFeesResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    fee: (f = msg.getFee()) && proto.CoreSchema.V1.Decimal.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.CoreSchema.V1.GetFeesResponse}
 */
proto.CoreSchema.V1.GetFeesResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.CoreSchema.V1.GetFeesResponse;
  return proto.CoreSchema.V1.GetFeesResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.CoreSchema.V1.GetFeesResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.CoreSchema.V1.GetFeesResponse}
 */
proto.CoreSchema.V1.GetFeesResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.CoreSchema.V1.Decimal;
      reader.readMessage(value,proto.CoreSchema.V1.Decimal.deserializeBinaryFromReader);
      msg.setFee(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.CoreSchema.V1.GetFeesResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.CoreSchema.V1.GetFeesResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.CoreSchema.V1.GetFeesResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.CoreSchema.V1.GetFeesResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getFee();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.CoreSchema.V1.Decimal.serializeBinaryToWriter
    );
  }
};


/**
 * optional Decimal Fee = 1;
 * @return {?proto.CoreSchema.V1.Decimal}
 */
proto.CoreSchema.V1.GetFeesResponse.prototype.getFee = function() {
  return /** @type{?proto.CoreSchema.V1.Decimal} */ (
    jspb.Message.getWrapperField(this, proto.CoreSchema.V1.Decimal, 1));
};


/** @param {?proto.CoreSchema.V1.Decimal|undefined} value */
proto.CoreSchema.V1.GetFeesResponse.prototype.setFee = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.CoreSchema.V1.GetFeesResponse.prototype.clearFee = function() {
  this.setFee(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.CoreSchema.V1.GetFeesResponse.prototype.hasFee = function() {
  return jspb.Message.getField(this, 1) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.CoreSchema.V1.AllAdvertisementsStatus = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.CoreSchema.V1.AllAdvertisementsStatus, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.CoreSchema.V1.AllAdvertisementsStatus.displayName = 'proto.CoreSchema.V1.AllAdvertisementsStatus';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.CoreSchema.V1.AllAdvertisementsStatus.prototype.toObject = function(opt_includeInstance) {
  return proto.CoreSchema.V1.AllAdvertisementsStatus.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.CoreSchema.V1.AllAdvertisementsStatus} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.CoreSchema.V1.AllAdvertisementsStatus.toObject = function(includeInstance, msg) {
  var f, obj = {
    salesdisabled: jspb.Message.getFieldWithDefault(msg, 1, false),
    buysdisabled: jspb.Message.getFieldWithDefault(msg, 2, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.CoreSchema.V1.AllAdvertisementsStatus}
 */
proto.CoreSchema.V1.AllAdvertisementsStatus.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.CoreSchema.V1.AllAdvertisementsStatus;
  return proto.CoreSchema.V1.AllAdvertisementsStatus.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.CoreSchema.V1.AllAdvertisementsStatus} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.CoreSchema.V1.AllAdvertisementsStatus}
 */
proto.CoreSchema.V1.AllAdvertisementsStatus.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setSalesdisabled(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setBuysdisabled(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.CoreSchema.V1.AllAdvertisementsStatus.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.CoreSchema.V1.AllAdvertisementsStatus.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.CoreSchema.V1.AllAdvertisementsStatus} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.CoreSchema.V1.AllAdvertisementsStatus.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSalesdisabled();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
  f = message.getBuysdisabled();
  if (f) {
    writer.writeBool(
      2,
      f
    );
  }
};


/**
 * optional bool SalesDisabled = 1;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.CoreSchema.V1.AllAdvertisementsStatus.prototype.getSalesdisabled = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 1, false));
};


/** @param {boolean} value */
proto.CoreSchema.V1.AllAdvertisementsStatus.prototype.setSalesdisabled = function(value) {
  jspb.Message.setProto3BooleanField(this, 1, value);
};


/**
 * optional bool BuysDisabled = 2;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.CoreSchema.V1.AllAdvertisementsStatus.prototype.getBuysdisabled = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 2, false));
};


/** @param {boolean} value */
proto.CoreSchema.V1.AllAdvertisementsStatus.prototype.setBuysdisabled = function(value) {
  jspb.Message.setProto3BooleanField(this, 2, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.CoreSchema.V1.IsUserExistRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.CoreSchema.V1.IsUserExistRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.CoreSchema.V1.IsUserExistRequest.displayName = 'proto.CoreSchema.V1.IsUserExistRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.CoreSchema.V1.IsUserExistRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.CoreSchema.V1.IsUserExistRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.CoreSchema.V1.IsUserExistRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.CoreSchema.V1.IsUserExistRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    username: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.CoreSchema.V1.IsUserExistRequest}
 */
proto.CoreSchema.V1.IsUserExistRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.CoreSchema.V1.IsUserExistRequest;
  return proto.CoreSchema.V1.IsUserExistRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.CoreSchema.V1.IsUserExistRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.CoreSchema.V1.IsUserExistRequest}
 */
proto.CoreSchema.V1.IsUserExistRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setUsername(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.CoreSchema.V1.IsUserExistRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.CoreSchema.V1.IsUserExistRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.CoreSchema.V1.IsUserExistRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.CoreSchema.V1.IsUserExistRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUsername();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string UserName = 1;
 * @return {string}
 */
proto.CoreSchema.V1.IsUserExistRequest.prototype.getUsername = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.CoreSchema.V1.IsUserExistRequest.prototype.setUsername = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.CoreSchema.V1.IsUserExistResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.CoreSchema.V1.IsUserExistResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.CoreSchema.V1.IsUserExistResponse.displayName = 'proto.CoreSchema.V1.IsUserExistResponse';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.CoreSchema.V1.IsUserExistResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.CoreSchema.V1.IsUserExistResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.CoreSchema.V1.IsUserExistResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.CoreSchema.V1.IsUserExistResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    isexist: jspb.Message.getFieldWithDefault(msg, 1, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.CoreSchema.V1.IsUserExistResponse}
 */
proto.CoreSchema.V1.IsUserExistResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.CoreSchema.V1.IsUserExistResponse;
  return proto.CoreSchema.V1.IsUserExistResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.CoreSchema.V1.IsUserExistResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.CoreSchema.V1.IsUserExistResponse}
 */
proto.CoreSchema.V1.IsUserExistResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsexist(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.CoreSchema.V1.IsUserExistResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.CoreSchema.V1.IsUserExistResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.CoreSchema.V1.IsUserExistResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.CoreSchema.V1.IsUserExistResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getIsexist();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
};


/**
 * optional bool isExist = 1;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.CoreSchema.V1.IsUserExistResponse.prototype.getIsexist = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 1, false));
};


/** @param {boolean} value */
proto.CoreSchema.V1.IsUserExistResponse.prototype.setIsexist = function(value) {
  jspb.Message.setProto3BooleanField(this, 1, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.CoreSchema.V1.Webhook = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.CoreSchema.V1.Webhook, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.CoreSchema.V1.Webhook.displayName = 'proto.CoreSchema.V1.Webhook';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.CoreSchema.V1.Webhook.prototype.toObject = function(opt_includeInstance) {
  return proto.CoreSchema.V1.Webhook.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.CoreSchema.V1.Webhook} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.CoreSchema.V1.Webhook.toObject = function(includeInstance, msg) {
  var f, obj = {
    clientcrt: jspb.Message.getFieldWithDefault(msg, 1, ""),
    clientkey: jspb.Message.getFieldWithDefault(msg, 2, ""),
    servercrt: jspb.Message.getFieldWithDefault(msg, 3, ""),
    url: jspb.Message.getFieldWithDefault(msg, 4, ""),
    required: jspb.Message.getFieldWithDefault(msg, 5, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.CoreSchema.V1.Webhook}
 */
proto.CoreSchema.V1.Webhook.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.CoreSchema.V1.Webhook;
  return proto.CoreSchema.V1.Webhook.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.CoreSchema.V1.Webhook} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.CoreSchema.V1.Webhook}
 */
proto.CoreSchema.V1.Webhook.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setClientcrt(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setClientkey(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setServercrt(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setUrl(value);
      break;
    case 5:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setRequired(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.CoreSchema.V1.Webhook.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.CoreSchema.V1.Webhook.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.CoreSchema.V1.Webhook} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.CoreSchema.V1.Webhook.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getClientcrt();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getClientkey();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getServercrt();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getUrl();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getRequired();
  if (f) {
    writer.writeBool(
      5,
      f
    );
  }
};


/**
 * optional string ClientCrt = 1;
 * @return {string}
 */
proto.CoreSchema.V1.Webhook.prototype.getClientcrt = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.CoreSchema.V1.Webhook.prototype.setClientcrt = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string ClientKey = 2;
 * @return {string}
 */
proto.CoreSchema.V1.Webhook.prototype.getClientkey = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.CoreSchema.V1.Webhook.prototype.setClientkey = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string ServerCrt = 3;
 * @return {string}
 */
proto.CoreSchema.V1.Webhook.prototype.getServercrt = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.CoreSchema.V1.Webhook.prototype.setServercrt = function(value) {
  jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string Url = 4;
 * @return {string}
 */
proto.CoreSchema.V1.Webhook.prototype.getUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/** @param {string} value */
proto.CoreSchema.V1.Webhook.prototype.setUrl = function(value) {
  jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional bool Required = 5;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.CoreSchema.V1.Webhook.prototype.getRequired = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 5, false));
};


/** @param {boolean} value */
proto.CoreSchema.V1.Webhook.prototype.setRequired = function(value) {
  jspb.Message.setProto3BooleanField(this, 5, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.CoreSchema.V1.Invoice = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.CoreSchema.V1.Invoice.repeatedFields_, proto.CoreSchema.V1.Invoice.oneofGroups_);
};
goog.inherits(proto.CoreSchema.V1.Invoice, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.CoreSchema.V1.Invoice.displayName = 'proto.CoreSchema.V1.Invoice';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.CoreSchema.V1.Invoice.repeatedFields_ = [25];

/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.CoreSchema.V1.Invoice.oneofGroups_ = [[15,16],[22,23],[27,28,29]];

/**
 * @enum {number}
 */
proto.CoreSchema.V1.Invoice.NullabletargetuserCase = {
  NULLABLETARGETUSER_NOT_SET: 0,
  TARGETUSERISNULL: 15,
  TARGETUSER: 16
};

/**
 * @return {proto.CoreSchema.V1.Invoice.NullabletargetuserCase}
 */
proto.CoreSchema.V1.Invoice.prototype.getNullabletargetuserCase = function() {
  return /** @type {proto.CoreSchema.V1.Invoice.NullabletargetuserCase} */(jspb.Message.computeOneofCase(this, proto.CoreSchema.V1.Invoice.oneofGroups_[0]));
};

/**
 * @enum {number}
 */
proto.CoreSchema.V1.Invoice.NullablerefundCase = {
  NULLABLEREFUND_NOT_SET: 0,
  REFUNDISNULL: 22,
  REFUNDPAYMENTID: 23
};

/**
 * @return {proto.CoreSchema.V1.Invoice.NullablerefundCase}
 */
proto.CoreSchema.V1.Invoice.prototype.getNullablerefundCase = function() {
  return /** @type {proto.CoreSchema.V1.Invoice.NullablerefundCase} */(jspb.Message.computeOneofCase(this, proto.CoreSchema.V1.Invoice.oneofGroups_[1]));
};

/**
 * @enum {number}
 */
proto.CoreSchema.V1.Invoice.IntegrationCase = {
  INTEGRATION_NOT_SET: 0,
  NOINTEGRATION: 27,
  REDIRECT: 28,
  WEBHOOK: 29
};

/**
 * @return {proto.CoreSchema.V1.Invoice.IntegrationCase}
 */
proto.CoreSchema.V1.Invoice.prototype.getIntegrationCase = function() {
  return /** @type {proto.CoreSchema.V1.Invoice.IntegrationCase} */(jspb.Message.computeOneofCase(this, proto.CoreSchema.V1.Invoice.oneofGroups_[2]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.CoreSchema.V1.Invoice.prototype.toObject = function(opt_includeInstance) {
  return proto.CoreSchema.V1.Invoice.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.CoreSchema.V1.Invoice} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.CoreSchema.V1.Invoice.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0),
    isprivate: jspb.Message.getFieldWithDefault(msg, 2, false),
    isbasecrypto: jspb.Message.getFieldWithDefault(msg, 3, false),
    price: (f = msg.getPrice()) && proto.CoreSchema.V1.Decimal.toObject(includeInstance, f),
    fiatcurrency: jspb.Message.getFieldWithDefault(msg, 5, ""),
    pricevariable: jspb.Message.getFieldWithDefault(msg, 6, ""),
    ttlminutes: jspb.Message.getFieldWithDefault(msg, 7, 0),
    comment: jspb.Message.getFieldWithDefault(msg, 8, ""),
    piecesmin: jspb.Message.getFieldWithDefault(msg, 9, 0),
    piecesmax: jspb.Message.getFieldWithDefault(msg, 10, 0),
    status: jspb.Message.getFieldWithDefault(msg, 11, 0),
    totalpayedcrypto: (f = msg.getTotalpayedcrypto()) && proto.CoreSchema.V1.Decimal.toObject(includeInstance, f),
    paymentscount: jspb.Message.getFieldWithDefault(msg, 13, 0),
    owner: (f = msg.getOwner()) && proto.CoreSchema.V1.UserInfo.toObject(includeInstance, f),
    targetuserisnull: jspb.Message.getFieldWithDefault(msg, 15, false),
    targetuser: (f = msg.getTargetuser()) && proto.CoreSchema.V1.UserInfo.toObject(includeInstance, f),
    createdat: (f = msg.getCreatedat()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    validto: (f = msg.getValidto()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    fee: (f = msg.getFee()) && proto.CoreSchema.V1.Decimal.toObject(includeInstance, f),
    limitliquidity: jspb.Message.getFieldWithDefault(msg, 20, false),
    currentcryptoprice: (f = msg.getCurrentcryptoprice()) && proto.CoreSchema.V1.Decimal.toObject(includeInstance, f),
    refundisnull: jspb.Message.getFieldWithDefault(msg, 22, false),
    refundpaymentid: jspb.Message.getFieldWithDefault(msg, 23, 0),
    service: jspb.Message.getFieldWithDefault(msg, 24, 0),
    imagesList: jspb.Message.getRepeatedField(msg, 25),
    secretscount: jspb.Message.getFieldWithDefault(msg, 26, 0),
    nointegration: jspb.Message.getFieldWithDefault(msg, 27, false),
    redirect: jspb.Message.getFieldWithDefault(msg, 28, ""),
    webhook: (f = msg.getWebhook()) && proto.CoreSchema.V1.Webhook.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.CoreSchema.V1.Invoice}
 */
proto.CoreSchema.V1.Invoice.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.CoreSchema.V1.Invoice;
  return proto.CoreSchema.V1.Invoice.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.CoreSchema.V1.Invoice} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.CoreSchema.V1.Invoice}
 */
proto.CoreSchema.V1.Invoice.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsprivate(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsbasecrypto(value);
      break;
    case 4:
      var value = new proto.CoreSchema.V1.Decimal;
      reader.readMessage(value,proto.CoreSchema.V1.Decimal.deserializeBinaryFromReader);
      msg.setPrice(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setFiatcurrency(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setPricevariable(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setTtlminutes(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setComment(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setPiecesmin(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setPiecesmax(value);
      break;
    case 11:
      var value = /** @type {!proto.CoreSchema.V1.Invoice.InvoiceStatus} */ (reader.readEnum());
      msg.setStatus(value);
      break;
    case 12:
      var value = new proto.CoreSchema.V1.Decimal;
      reader.readMessage(value,proto.CoreSchema.V1.Decimal.deserializeBinaryFromReader);
      msg.setTotalpayedcrypto(value);
      break;
    case 13:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setPaymentscount(value);
      break;
    case 14:
      var value = new proto.CoreSchema.V1.UserInfo;
      reader.readMessage(value,proto.CoreSchema.V1.UserInfo.deserializeBinaryFromReader);
      msg.setOwner(value);
      break;
    case 15:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setTargetuserisnull(value);
      break;
    case 16:
      var value = new proto.CoreSchema.V1.UserInfo;
      reader.readMessage(value,proto.CoreSchema.V1.UserInfo.deserializeBinaryFromReader);
      msg.setTargetuser(value);
      break;
    case 17:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setCreatedat(value);
      break;
    case 18:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setValidto(value);
      break;
    case 19:
      var value = new proto.CoreSchema.V1.Decimal;
      reader.readMessage(value,proto.CoreSchema.V1.Decimal.deserializeBinaryFromReader);
      msg.setFee(value);
      break;
    case 20:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setLimitliquidity(value);
      break;
    case 21:
      var value = new proto.CoreSchema.V1.Decimal;
      reader.readMessage(value,proto.CoreSchema.V1.Decimal.deserializeBinaryFromReader);
      msg.setCurrentcryptoprice(value);
      break;
    case 22:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setRefundisnull(value);
      break;
    case 23:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setRefundpaymentid(value);
      break;
    case 24:
      var value = /** @type {!proto.CoreSchema.V1.Invoice.ServiceType} */ (reader.readEnum());
      msg.setService(value);
      break;
    case 25:
      var value = /** @type {string} */ (reader.readString());
      msg.addImages(value);
      break;
    case 26:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setSecretscount(value);
      break;
    case 27:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setNointegration(value);
      break;
    case 28:
      var value = /** @type {string} */ (reader.readString());
      msg.setRedirect(value);
      break;
    case 29:
      var value = new proto.CoreSchema.V1.Webhook;
      reader.readMessage(value,proto.CoreSchema.V1.Webhook.deserializeBinaryFromReader);
      msg.setWebhook(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.CoreSchema.V1.Invoice.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.CoreSchema.V1.Invoice.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.CoreSchema.V1.Invoice} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.CoreSchema.V1.Invoice.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeUint64(
      1,
      f
    );
  }
  f = message.getIsprivate();
  if (f) {
    writer.writeBool(
      2,
      f
    );
  }
  f = message.getIsbasecrypto();
  if (f) {
    writer.writeBool(
      3,
      f
    );
  }
  f = message.getPrice();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.CoreSchema.V1.Decimal.serializeBinaryToWriter
    );
  }
  f = message.getFiatcurrency();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getPricevariable();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getTtlminutes();
  if (f !== 0) {
    writer.writeUint32(
      7,
      f
    );
  }
  f = message.getComment();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getPiecesmin();
  if (f !== 0) {
    writer.writeUint32(
      9,
      f
    );
  }
  f = message.getPiecesmax();
  if (f !== 0) {
    writer.writeUint32(
      10,
      f
    );
  }
  f = message.getStatus();
  if (f !== 0.0) {
    writer.writeEnum(
      11,
      f
    );
  }
  f = message.getTotalpayedcrypto();
  if (f != null) {
    writer.writeMessage(
      12,
      f,
      proto.CoreSchema.V1.Decimal.serializeBinaryToWriter
    );
  }
  f = message.getPaymentscount();
  if (f !== 0) {
    writer.writeUint32(
      13,
      f
    );
  }
  f = message.getOwner();
  if (f != null) {
    writer.writeMessage(
      14,
      f,
      proto.CoreSchema.V1.UserInfo.serializeBinaryToWriter
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 15));
  if (f != null) {
    writer.writeBool(
      15,
      f
    );
  }
  f = message.getTargetuser();
  if (f != null) {
    writer.writeMessage(
      16,
      f,
      proto.CoreSchema.V1.UserInfo.serializeBinaryToWriter
    );
  }
  f = message.getCreatedat();
  if (f != null) {
    writer.writeMessage(
      17,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getValidto();
  if (f != null) {
    writer.writeMessage(
      18,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getFee();
  if (f != null) {
    writer.writeMessage(
      19,
      f,
      proto.CoreSchema.V1.Decimal.serializeBinaryToWriter
    );
  }
  f = message.getLimitliquidity();
  if (f) {
    writer.writeBool(
      20,
      f
    );
  }
  f = message.getCurrentcryptoprice();
  if (f != null) {
    writer.writeMessage(
      21,
      f,
      proto.CoreSchema.V1.Decimal.serializeBinaryToWriter
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 22));
  if (f != null) {
    writer.writeBool(
      22,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 23));
  if (f != null) {
    writer.writeUint64(
      23,
      f
    );
  }
  f = message.getService();
  if (f !== 0.0) {
    writer.writeEnum(
      24,
      f
    );
  }
  f = message.getImagesList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      25,
      f
    );
  }
  f = message.getSecretscount();
  if (f !== 0) {
    writer.writeUint32(
      26,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 27));
  if (f != null) {
    writer.writeBool(
      27,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 28));
  if (f != null) {
    writer.writeString(
      28,
      f
    );
  }
  f = message.getWebhook();
  if (f != null) {
    writer.writeMessage(
      29,
      f,
      proto.CoreSchema.V1.Webhook.serializeBinaryToWriter
    );
  }
};


/**
 * @enum {number}
 */
proto.CoreSchema.V1.Invoice.InvoiceStatus = {
  ACTIVE: 0,
  PENDINGPAY: 1,
  NOPIECES: 2,
  PAYED: 3,
  DELETED: 4
};

/**
 * @enum {number}
 */
proto.CoreSchema.V1.Invoice.ServiceType = {
  NONE: 0,
  AUTOPRICE: 1
};

/**
 * optional uint64 Id = 1;
 * @return {number}
 */
proto.CoreSchema.V1.Invoice.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.CoreSchema.V1.Invoice.prototype.setId = function(value) {
  jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional bool isPrivate = 2;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.CoreSchema.V1.Invoice.prototype.getIsprivate = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 2, false));
};


/** @param {boolean} value */
proto.CoreSchema.V1.Invoice.prototype.setIsprivate = function(value) {
  jspb.Message.setProto3BooleanField(this, 2, value);
};


/**
 * optional bool isBaseCrypto = 3;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.CoreSchema.V1.Invoice.prototype.getIsbasecrypto = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 3, false));
};


/** @param {boolean} value */
proto.CoreSchema.V1.Invoice.prototype.setIsbasecrypto = function(value) {
  jspb.Message.setProto3BooleanField(this, 3, value);
};


/**
 * optional Decimal Price = 4;
 * @return {?proto.CoreSchema.V1.Decimal}
 */
proto.CoreSchema.V1.Invoice.prototype.getPrice = function() {
  return /** @type{?proto.CoreSchema.V1.Decimal} */ (
    jspb.Message.getWrapperField(this, proto.CoreSchema.V1.Decimal, 4));
};


/** @param {?proto.CoreSchema.V1.Decimal|undefined} value */
proto.CoreSchema.V1.Invoice.prototype.setPrice = function(value) {
  jspb.Message.setWrapperField(this, 4, value);
};


proto.CoreSchema.V1.Invoice.prototype.clearPrice = function() {
  this.setPrice(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.CoreSchema.V1.Invoice.prototype.hasPrice = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional string FiatCurrency = 5;
 * @return {string}
 */
proto.CoreSchema.V1.Invoice.prototype.getFiatcurrency = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/** @param {string} value */
proto.CoreSchema.V1.Invoice.prototype.setFiatcurrency = function(value) {
  jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string PriceVariable = 6;
 * @return {string}
 */
proto.CoreSchema.V1.Invoice.prototype.getPricevariable = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/** @param {string} value */
proto.CoreSchema.V1.Invoice.prototype.setPricevariable = function(value) {
  jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional uint32 TtlMinutes = 7;
 * @return {number}
 */
proto.CoreSchema.V1.Invoice.prototype.getTtlminutes = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/** @param {number} value */
proto.CoreSchema.V1.Invoice.prototype.setTtlminutes = function(value) {
  jspb.Message.setProto3IntField(this, 7, value);
};


/**
 * optional string Comment = 8;
 * @return {string}
 */
proto.CoreSchema.V1.Invoice.prototype.getComment = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/** @param {string} value */
proto.CoreSchema.V1.Invoice.prototype.setComment = function(value) {
  jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * optional uint32 PiecesMin = 9;
 * @return {number}
 */
proto.CoreSchema.V1.Invoice.prototype.getPiecesmin = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/** @param {number} value */
proto.CoreSchema.V1.Invoice.prototype.setPiecesmin = function(value) {
  jspb.Message.setProto3IntField(this, 9, value);
};


/**
 * optional uint32 PiecesMax = 10;
 * @return {number}
 */
proto.CoreSchema.V1.Invoice.prototype.getPiecesmax = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 10, 0));
};


/** @param {number} value */
proto.CoreSchema.V1.Invoice.prototype.setPiecesmax = function(value) {
  jspb.Message.setProto3IntField(this, 10, value);
};


/**
 * optional InvoiceStatus Status = 11;
 * @return {!proto.CoreSchema.V1.Invoice.InvoiceStatus}
 */
proto.CoreSchema.V1.Invoice.prototype.getStatus = function() {
  return /** @type {!proto.CoreSchema.V1.Invoice.InvoiceStatus} */ (jspb.Message.getFieldWithDefault(this, 11, 0));
};


/** @param {!proto.CoreSchema.V1.Invoice.InvoiceStatus} value */
proto.CoreSchema.V1.Invoice.prototype.setStatus = function(value) {
  jspb.Message.setProto3EnumField(this, 11, value);
};


/**
 * optional Decimal TotalPayedCrypto = 12;
 * @return {?proto.CoreSchema.V1.Decimal}
 */
proto.CoreSchema.V1.Invoice.prototype.getTotalpayedcrypto = function() {
  return /** @type{?proto.CoreSchema.V1.Decimal} */ (
    jspb.Message.getWrapperField(this, proto.CoreSchema.V1.Decimal, 12));
};


/** @param {?proto.CoreSchema.V1.Decimal|undefined} value */
proto.CoreSchema.V1.Invoice.prototype.setTotalpayedcrypto = function(value) {
  jspb.Message.setWrapperField(this, 12, value);
};


proto.CoreSchema.V1.Invoice.prototype.clearTotalpayedcrypto = function() {
  this.setTotalpayedcrypto(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.CoreSchema.V1.Invoice.prototype.hasTotalpayedcrypto = function() {
  return jspb.Message.getField(this, 12) != null;
};


/**
 * optional uint32 PaymentsCount = 13;
 * @return {number}
 */
proto.CoreSchema.V1.Invoice.prototype.getPaymentscount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 13, 0));
};


/** @param {number} value */
proto.CoreSchema.V1.Invoice.prototype.setPaymentscount = function(value) {
  jspb.Message.setProto3IntField(this, 13, value);
};


/**
 * optional UserInfo Owner = 14;
 * @return {?proto.CoreSchema.V1.UserInfo}
 */
proto.CoreSchema.V1.Invoice.prototype.getOwner = function() {
  return /** @type{?proto.CoreSchema.V1.UserInfo} */ (
    jspb.Message.getWrapperField(this, proto.CoreSchema.V1.UserInfo, 14));
};


/** @param {?proto.CoreSchema.V1.UserInfo|undefined} value */
proto.CoreSchema.V1.Invoice.prototype.setOwner = function(value) {
  jspb.Message.setWrapperField(this, 14, value);
};


proto.CoreSchema.V1.Invoice.prototype.clearOwner = function() {
  this.setOwner(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.CoreSchema.V1.Invoice.prototype.hasOwner = function() {
  return jspb.Message.getField(this, 14) != null;
};


/**
 * optional bool TargetUserIsNull = 15;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.CoreSchema.V1.Invoice.prototype.getTargetuserisnull = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 15, false));
};


/** @param {boolean} value */
proto.CoreSchema.V1.Invoice.prototype.setTargetuserisnull = function(value) {
  jspb.Message.setOneofField(this, 15, proto.CoreSchema.V1.Invoice.oneofGroups_[0], value);
};


proto.CoreSchema.V1.Invoice.prototype.clearTargetuserisnull = function() {
  jspb.Message.setOneofField(this, 15, proto.CoreSchema.V1.Invoice.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.CoreSchema.V1.Invoice.prototype.hasTargetuserisnull = function() {
  return jspb.Message.getField(this, 15) != null;
};


/**
 * optional UserInfo TargetUser = 16;
 * @return {?proto.CoreSchema.V1.UserInfo}
 */
proto.CoreSchema.V1.Invoice.prototype.getTargetuser = function() {
  return /** @type{?proto.CoreSchema.V1.UserInfo} */ (
    jspb.Message.getWrapperField(this, proto.CoreSchema.V1.UserInfo, 16));
};


/** @param {?proto.CoreSchema.V1.UserInfo|undefined} value */
proto.CoreSchema.V1.Invoice.prototype.setTargetuser = function(value) {
  jspb.Message.setOneofWrapperField(this, 16, proto.CoreSchema.V1.Invoice.oneofGroups_[0], value);
};


proto.CoreSchema.V1.Invoice.prototype.clearTargetuser = function() {
  this.setTargetuser(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.CoreSchema.V1.Invoice.prototype.hasTargetuser = function() {
  return jspb.Message.getField(this, 16) != null;
};


/**
 * optional google.protobuf.Timestamp CreatedAt = 17;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.CoreSchema.V1.Invoice.prototype.getCreatedat = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 17));
};


/** @param {?proto.google.protobuf.Timestamp|undefined} value */
proto.CoreSchema.V1.Invoice.prototype.setCreatedat = function(value) {
  jspb.Message.setWrapperField(this, 17, value);
};


proto.CoreSchema.V1.Invoice.prototype.clearCreatedat = function() {
  this.setCreatedat(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.CoreSchema.V1.Invoice.prototype.hasCreatedat = function() {
  return jspb.Message.getField(this, 17) != null;
};


/**
 * optional google.protobuf.Timestamp ValidTo = 18;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.CoreSchema.V1.Invoice.prototype.getValidto = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 18));
};


/** @param {?proto.google.protobuf.Timestamp|undefined} value */
proto.CoreSchema.V1.Invoice.prototype.setValidto = function(value) {
  jspb.Message.setWrapperField(this, 18, value);
};


proto.CoreSchema.V1.Invoice.prototype.clearValidto = function() {
  this.setValidto(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.CoreSchema.V1.Invoice.prototype.hasValidto = function() {
  return jspb.Message.getField(this, 18) != null;
};


/**
 * optional Decimal Fee = 19;
 * @return {?proto.CoreSchema.V1.Decimal}
 */
proto.CoreSchema.V1.Invoice.prototype.getFee = function() {
  return /** @type{?proto.CoreSchema.V1.Decimal} */ (
    jspb.Message.getWrapperField(this, proto.CoreSchema.V1.Decimal, 19));
};


/** @param {?proto.CoreSchema.V1.Decimal|undefined} value */
proto.CoreSchema.V1.Invoice.prototype.setFee = function(value) {
  jspb.Message.setWrapperField(this, 19, value);
};


proto.CoreSchema.V1.Invoice.prototype.clearFee = function() {
  this.setFee(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.CoreSchema.V1.Invoice.prototype.hasFee = function() {
  return jspb.Message.getField(this, 19) != null;
};


/**
 * optional bool LimitLiquidity = 20;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.CoreSchema.V1.Invoice.prototype.getLimitliquidity = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 20, false));
};


/** @param {boolean} value */
proto.CoreSchema.V1.Invoice.prototype.setLimitliquidity = function(value) {
  jspb.Message.setProto3BooleanField(this, 20, value);
};


/**
 * optional Decimal CurrentCryptoPrice = 21;
 * @return {?proto.CoreSchema.V1.Decimal}
 */
proto.CoreSchema.V1.Invoice.prototype.getCurrentcryptoprice = function() {
  return /** @type{?proto.CoreSchema.V1.Decimal} */ (
    jspb.Message.getWrapperField(this, proto.CoreSchema.V1.Decimal, 21));
};


/** @param {?proto.CoreSchema.V1.Decimal|undefined} value */
proto.CoreSchema.V1.Invoice.prototype.setCurrentcryptoprice = function(value) {
  jspb.Message.setWrapperField(this, 21, value);
};


proto.CoreSchema.V1.Invoice.prototype.clearCurrentcryptoprice = function() {
  this.setCurrentcryptoprice(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.CoreSchema.V1.Invoice.prototype.hasCurrentcryptoprice = function() {
  return jspb.Message.getField(this, 21) != null;
};


/**
 * optional bool RefundIsNull = 22;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.CoreSchema.V1.Invoice.prototype.getRefundisnull = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 22, false));
};


/** @param {boolean} value */
proto.CoreSchema.V1.Invoice.prototype.setRefundisnull = function(value) {
  jspb.Message.setOneofField(this, 22, proto.CoreSchema.V1.Invoice.oneofGroups_[1], value);
};


proto.CoreSchema.V1.Invoice.prototype.clearRefundisnull = function() {
  jspb.Message.setOneofField(this, 22, proto.CoreSchema.V1.Invoice.oneofGroups_[1], undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.CoreSchema.V1.Invoice.prototype.hasRefundisnull = function() {
  return jspb.Message.getField(this, 22) != null;
};


/**
 * optional uint64 RefundPaymentId = 23;
 * @return {number}
 */
proto.CoreSchema.V1.Invoice.prototype.getRefundpaymentid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 23, 0));
};


/** @param {number} value */
proto.CoreSchema.V1.Invoice.prototype.setRefundpaymentid = function(value) {
  jspb.Message.setOneofField(this, 23, proto.CoreSchema.V1.Invoice.oneofGroups_[1], value);
};


proto.CoreSchema.V1.Invoice.prototype.clearRefundpaymentid = function() {
  jspb.Message.setOneofField(this, 23, proto.CoreSchema.V1.Invoice.oneofGroups_[1], undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.CoreSchema.V1.Invoice.prototype.hasRefundpaymentid = function() {
  return jspb.Message.getField(this, 23) != null;
};


/**
 * optional ServiceType Service = 24;
 * @return {!proto.CoreSchema.V1.Invoice.ServiceType}
 */
proto.CoreSchema.V1.Invoice.prototype.getService = function() {
  return /** @type {!proto.CoreSchema.V1.Invoice.ServiceType} */ (jspb.Message.getFieldWithDefault(this, 24, 0));
};


/** @param {!proto.CoreSchema.V1.Invoice.ServiceType} value */
proto.CoreSchema.V1.Invoice.prototype.setService = function(value) {
  jspb.Message.setProto3EnumField(this, 24, value);
};


/**
 * repeated string Images = 25;
 * @return {!Array<string>}
 */
proto.CoreSchema.V1.Invoice.prototype.getImagesList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 25));
};


/** @param {!Array<string>} value */
proto.CoreSchema.V1.Invoice.prototype.setImagesList = function(value) {
  jspb.Message.setField(this, 25, value || []);
};


/**
 * @param {!string} value
 * @param {number=} opt_index
 */
proto.CoreSchema.V1.Invoice.prototype.addImages = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 25, value, opt_index);
};


proto.CoreSchema.V1.Invoice.prototype.clearImagesList = function() {
  this.setImagesList([]);
};


/**
 * optional uint32 SecretsCount = 26;
 * @return {number}
 */
proto.CoreSchema.V1.Invoice.prototype.getSecretscount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 26, 0));
};


/** @param {number} value */
proto.CoreSchema.V1.Invoice.prototype.setSecretscount = function(value) {
  jspb.Message.setProto3IntField(this, 26, value);
};


/**
 * optional bool NoIntegration = 27;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.CoreSchema.V1.Invoice.prototype.getNointegration = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 27, false));
};


/** @param {boolean} value */
proto.CoreSchema.V1.Invoice.prototype.setNointegration = function(value) {
  jspb.Message.setOneofField(this, 27, proto.CoreSchema.V1.Invoice.oneofGroups_[2], value);
};


proto.CoreSchema.V1.Invoice.prototype.clearNointegration = function() {
  jspb.Message.setOneofField(this, 27, proto.CoreSchema.V1.Invoice.oneofGroups_[2], undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.CoreSchema.V1.Invoice.prototype.hasNointegration = function() {
  return jspb.Message.getField(this, 27) != null;
};


/**
 * optional string Redirect = 28;
 * @return {string}
 */
proto.CoreSchema.V1.Invoice.prototype.getRedirect = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 28, ""));
};


/** @param {string} value */
proto.CoreSchema.V1.Invoice.prototype.setRedirect = function(value) {
  jspb.Message.setOneofField(this, 28, proto.CoreSchema.V1.Invoice.oneofGroups_[2], value);
};


proto.CoreSchema.V1.Invoice.prototype.clearRedirect = function() {
  jspb.Message.setOneofField(this, 28, proto.CoreSchema.V1.Invoice.oneofGroups_[2], undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.CoreSchema.V1.Invoice.prototype.hasRedirect = function() {
  return jspb.Message.getField(this, 28) != null;
};


/**
 * optional Webhook Webhook = 29;
 * @return {?proto.CoreSchema.V1.Webhook}
 */
proto.CoreSchema.V1.Invoice.prototype.getWebhook = function() {
  return /** @type{?proto.CoreSchema.V1.Webhook} */ (
    jspb.Message.getWrapperField(this, proto.CoreSchema.V1.Webhook, 29));
};


/** @param {?proto.CoreSchema.V1.Webhook|undefined} value */
proto.CoreSchema.V1.Invoice.prototype.setWebhook = function(value) {
  jspb.Message.setOneofWrapperField(this, 29, proto.CoreSchema.V1.Invoice.oneofGroups_[2], value);
};


proto.CoreSchema.V1.Invoice.prototype.clearWebhook = function() {
  this.setWebhook(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.CoreSchema.V1.Invoice.prototype.hasWebhook = function() {
  return jspb.Message.getField(this, 29) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.CoreSchema.V1.CreateInvoiceRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.CoreSchema.V1.CreateInvoiceRequest.repeatedFields_, proto.CoreSchema.V1.CreateInvoiceRequest.oneofGroups_);
};
goog.inherits(proto.CoreSchema.V1.CreateInvoiceRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.CoreSchema.V1.CreateInvoiceRequest.displayName = 'proto.CoreSchema.V1.CreateInvoiceRequest';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.CoreSchema.V1.CreateInvoiceRequest.repeatedFields_ = [12,13];

/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.CoreSchema.V1.CreateInvoiceRequest.oneofGroups_ = [[14,15,16]];

/**
 * @enum {number}
 */
proto.CoreSchema.V1.CreateInvoiceRequest.IntegrationCase = {
  INTEGRATION_NOT_SET: 0,
  NOINTEGRATION: 14,
  REDIRECT: 15,
  WEBHOOK: 16
};

/**
 * @return {proto.CoreSchema.V1.CreateInvoiceRequest.IntegrationCase}
 */
proto.CoreSchema.V1.CreateInvoiceRequest.prototype.getIntegrationCase = function() {
  return /** @type {proto.CoreSchema.V1.CreateInvoiceRequest.IntegrationCase} */(jspb.Message.computeOneofCase(this, proto.CoreSchema.V1.CreateInvoiceRequest.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.CoreSchema.V1.CreateInvoiceRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.CoreSchema.V1.CreateInvoiceRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.CoreSchema.V1.CreateInvoiceRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.CoreSchema.V1.CreateInvoiceRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    isprivate: jspb.Message.getFieldWithDefault(msg, 1, false),
    isbasecrypto: jspb.Message.getFieldWithDefault(msg, 2, false),
    username: jspb.Message.getFieldWithDefault(msg, 3, ""),
    price: (f = msg.getPrice()) && proto.CoreSchema.V1.Decimal.toObject(includeInstance, f),
    fiatcurrency: jspb.Message.getFieldWithDefault(msg, 5, ""),
    pricevariable: jspb.Message.getFieldWithDefault(msg, 6, ""),
    ttlminutes: jspb.Message.getFieldWithDefault(msg, 7, 0),
    comment: jspb.Message.getFieldWithDefault(msg, 8, ""),
    piecesmin: jspb.Message.getFieldWithDefault(msg, 9, 0),
    piecesmax: jspb.Message.getFieldWithDefault(msg, 10, 0),
    limitliquidity: jspb.Message.getFieldWithDefault(msg, 11, false),
    imagesList: jspb.Message.getRepeatedField(msg, 12),
    secretsList: jspb.Message.toObjectList(msg.getSecretsList(),
    proto.CoreSchema.V1.CreateInvoiceSecretRequest.toObject, includeInstance),
    nointegration: jspb.Message.getFieldWithDefault(msg, 14, false),
    redirect: jspb.Message.getFieldWithDefault(msg, 15, ""),
    webhook: (f = msg.getWebhook()) && proto.CoreSchema.V1.Webhook.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.CoreSchema.V1.CreateInvoiceRequest}
 */
proto.CoreSchema.V1.CreateInvoiceRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.CoreSchema.V1.CreateInvoiceRequest;
  return proto.CoreSchema.V1.CreateInvoiceRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.CoreSchema.V1.CreateInvoiceRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.CoreSchema.V1.CreateInvoiceRequest}
 */
proto.CoreSchema.V1.CreateInvoiceRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsprivate(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsbasecrypto(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setUsername(value);
      break;
    case 4:
      var value = new proto.CoreSchema.V1.Decimal;
      reader.readMessage(value,proto.CoreSchema.V1.Decimal.deserializeBinaryFromReader);
      msg.setPrice(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setFiatcurrency(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setPricevariable(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setTtlminutes(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setComment(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setPiecesmin(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setPiecesmax(value);
      break;
    case 11:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setLimitliquidity(value);
      break;
    case 12:
      var value = /** @type {string} */ (reader.readString());
      msg.addImages(value);
      break;
    case 13:
      var value = new proto.CoreSchema.V1.CreateInvoiceSecretRequest;
      reader.readMessage(value,proto.CoreSchema.V1.CreateInvoiceSecretRequest.deserializeBinaryFromReader);
      msg.addSecrets(value);
      break;
    case 14:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setNointegration(value);
      break;
    case 15:
      var value = /** @type {string} */ (reader.readString());
      msg.setRedirect(value);
      break;
    case 16:
      var value = new proto.CoreSchema.V1.Webhook;
      reader.readMessage(value,proto.CoreSchema.V1.Webhook.deserializeBinaryFromReader);
      msg.setWebhook(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.CoreSchema.V1.CreateInvoiceRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.CoreSchema.V1.CreateInvoiceRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.CoreSchema.V1.CreateInvoiceRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.CoreSchema.V1.CreateInvoiceRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getIsprivate();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
  f = message.getIsbasecrypto();
  if (f) {
    writer.writeBool(
      2,
      f
    );
  }
  f = message.getUsername();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getPrice();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.CoreSchema.V1.Decimal.serializeBinaryToWriter
    );
  }
  f = message.getFiatcurrency();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getPricevariable();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getTtlminutes();
  if (f !== 0) {
    writer.writeUint32(
      7,
      f
    );
  }
  f = message.getComment();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getPiecesmin();
  if (f !== 0) {
    writer.writeUint32(
      9,
      f
    );
  }
  f = message.getPiecesmax();
  if (f !== 0) {
    writer.writeUint32(
      10,
      f
    );
  }
  f = message.getLimitliquidity();
  if (f) {
    writer.writeBool(
      11,
      f
    );
  }
  f = message.getImagesList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      12,
      f
    );
  }
  f = message.getSecretsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      13,
      f,
      proto.CoreSchema.V1.CreateInvoiceSecretRequest.serializeBinaryToWriter
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 14));
  if (f != null) {
    writer.writeBool(
      14,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 15));
  if (f != null) {
    writer.writeString(
      15,
      f
    );
  }
  f = message.getWebhook();
  if (f != null) {
    writer.writeMessage(
      16,
      f,
      proto.CoreSchema.V1.Webhook.serializeBinaryToWriter
    );
  }
};


/**
 * optional bool isPrivate = 1;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.CoreSchema.V1.CreateInvoiceRequest.prototype.getIsprivate = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 1, false));
};


/** @param {boolean} value */
proto.CoreSchema.V1.CreateInvoiceRequest.prototype.setIsprivate = function(value) {
  jspb.Message.setProto3BooleanField(this, 1, value);
};


/**
 * optional bool isBaseCrypto = 2;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.CoreSchema.V1.CreateInvoiceRequest.prototype.getIsbasecrypto = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 2, false));
};


/** @param {boolean} value */
proto.CoreSchema.V1.CreateInvoiceRequest.prototype.setIsbasecrypto = function(value) {
  jspb.Message.setProto3BooleanField(this, 2, value);
};


/**
 * optional string UserName = 3;
 * @return {string}
 */
proto.CoreSchema.V1.CreateInvoiceRequest.prototype.getUsername = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.CoreSchema.V1.CreateInvoiceRequest.prototype.setUsername = function(value) {
  jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional Decimal Price = 4;
 * @return {?proto.CoreSchema.V1.Decimal}
 */
proto.CoreSchema.V1.CreateInvoiceRequest.prototype.getPrice = function() {
  return /** @type{?proto.CoreSchema.V1.Decimal} */ (
    jspb.Message.getWrapperField(this, proto.CoreSchema.V1.Decimal, 4));
};


/** @param {?proto.CoreSchema.V1.Decimal|undefined} value */
proto.CoreSchema.V1.CreateInvoiceRequest.prototype.setPrice = function(value) {
  jspb.Message.setWrapperField(this, 4, value);
};


proto.CoreSchema.V1.CreateInvoiceRequest.prototype.clearPrice = function() {
  this.setPrice(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.CoreSchema.V1.CreateInvoiceRequest.prototype.hasPrice = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional string FiatCurrency = 5;
 * @return {string}
 */
proto.CoreSchema.V1.CreateInvoiceRequest.prototype.getFiatcurrency = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/** @param {string} value */
proto.CoreSchema.V1.CreateInvoiceRequest.prototype.setFiatcurrency = function(value) {
  jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string PriceVariable = 6;
 * @return {string}
 */
proto.CoreSchema.V1.CreateInvoiceRequest.prototype.getPricevariable = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/** @param {string} value */
proto.CoreSchema.V1.CreateInvoiceRequest.prototype.setPricevariable = function(value) {
  jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional uint32 TtlMinutes = 7;
 * @return {number}
 */
proto.CoreSchema.V1.CreateInvoiceRequest.prototype.getTtlminutes = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/** @param {number} value */
proto.CoreSchema.V1.CreateInvoiceRequest.prototype.setTtlminutes = function(value) {
  jspb.Message.setProto3IntField(this, 7, value);
};


/**
 * optional string Comment = 8;
 * @return {string}
 */
proto.CoreSchema.V1.CreateInvoiceRequest.prototype.getComment = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/** @param {string} value */
proto.CoreSchema.V1.CreateInvoiceRequest.prototype.setComment = function(value) {
  jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * optional uint32 PiecesMin = 9;
 * @return {number}
 */
proto.CoreSchema.V1.CreateInvoiceRequest.prototype.getPiecesmin = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/** @param {number} value */
proto.CoreSchema.V1.CreateInvoiceRequest.prototype.setPiecesmin = function(value) {
  jspb.Message.setProto3IntField(this, 9, value);
};


/**
 * optional uint32 PiecesMax = 10;
 * @return {number}
 */
proto.CoreSchema.V1.CreateInvoiceRequest.prototype.getPiecesmax = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 10, 0));
};


/** @param {number} value */
proto.CoreSchema.V1.CreateInvoiceRequest.prototype.setPiecesmax = function(value) {
  jspb.Message.setProto3IntField(this, 10, value);
};


/**
 * optional bool LimitLiquidity = 11;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.CoreSchema.V1.CreateInvoiceRequest.prototype.getLimitliquidity = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 11, false));
};


/** @param {boolean} value */
proto.CoreSchema.V1.CreateInvoiceRequest.prototype.setLimitliquidity = function(value) {
  jspb.Message.setProto3BooleanField(this, 11, value);
};


/**
 * repeated string Images = 12;
 * @return {!Array<string>}
 */
proto.CoreSchema.V1.CreateInvoiceRequest.prototype.getImagesList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 12));
};


/** @param {!Array<string>} value */
proto.CoreSchema.V1.CreateInvoiceRequest.prototype.setImagesList = function(value) {
  jspb.Message.setField(this, 12, value || []);
};


/**
 * @param {!string} value
 * @param {number=} opt_index
 */
proto.CoreSchema.V1.CreateInvoiceRequest.prototype.addImages = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 12, value, opt_index);
};


proto.CoreSchema.V1.CreateInvoiceRequest.prototype.clearImagesList = function() {
  this.setImagesList([]);
};


/**
 * repeated CreateInvoiceSecretRequest Secrets = 13;
 * @return {!Array<!proto.CoreSchema.V1.CreateInvoiceSecretRequest>}
 */
proto.CoreSchema.V1.CreateInvoiceRequest.prototype.getSecretsList = function() {
  return /** @type{!Array<!proto.CoreSchema.V1.CreateInvoiceSecretRequest>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.CoreSchema.V1.CreateInvoiceSecretRequest, 13));
};


/** @param {!Array<!proto.CoreSchema.V1.CreateInvoiceSecretRequest>} value */
proto.CoreSchema.V1.CreateInvoiceRequest.prototype.setSecretsList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 13, value);
};


/**
 * @param {!proto.CoreSchema.V1.CreateInvoiceSecretRequest=} opt_value
 * @param {number=} opt_index
 * @return {!proto.CoreSchema.V1.CreateInvoiceSecretRequest}
 */
proto.CoreSchema.V1.CreateInvoiceRequest.prototype.addSecrets = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 13, opt_value, proto.CoreSchema.V1.CreateInvoiceSecretRequest, opt_index);
};


proto.CoreSchema.V1.CreateInvoiceRequest.prototype.clearSecretsList = function() {
  this.setSecretsList([]);
};


/**
 * optional bool NoIntegration = 14;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.CoreSchema.V1.CreateInvoiceRequest.prototype.getNointegration = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 14, false));
};


/** @param {boolean} value */
proto.CoreSchema.V1.CreateInvoiceRequest.prototype.setNointegration = function(value) {
  jspb.Message.setOneofField(this, 14, proto.CoreSchema.V1.CreateInvoiceRequest.oneofGroups_[0], value);
};


proto.CoreSchema.V1.CreateInvoiceRequest.prototype.clearNointegration = function() {
  jspb.Message.setOneofField(this, 14, proto.CoreSchema.V1.CreateInvoiceRequest.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.CoreSchema.V1.CreateInvoiceRequest.prototype.hasNointegration = function() {
  return jspb.Message.getField(this, 14) != null;
};


/**
 * optional string Redirect = 15;
 * @return {string}
 */
proto.CoreSchema.V1.CreateInvoiceRequest.prototype.getRedirect = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 15, ""));
};


/** @param {string} value */
proto.CoreSchema.V1.CreateInvoiceRequest.prototype.setRedirect = function(value) {
  jspb.Message.setOneofField(this, 15, proto.CoreSchema.V1.CreateInvoiceRequest.oneofGroups_[0], value);
};


proto.CoreSchema.V1.CreateInvoiceRequest.prototype.clearRedirect = function() {
  jspb.Message.setOneofField(this, 15, proto.CoreSchema.V1.CreateInvoiceRequest.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.CoreSchema.V1.CreateInvoiceRequest.prototype.hasRedirect = function() {
  return jspb.Message.getField(this, 15) != null;
};


/**
 * optional Webhook Webhook = 16;
 * @return {?proto.CoreSchema.V1.Webhook}
 */
proto.CoreSchema.V1.CreateInvoiceRequest.prototype.getWebhook = function() {
  return /** @type{?proto.CoreSchema.V1.Webhook} */ (
    jspb.Message.getWrapperField(this, proto.CoreSchema.V1.Webhook, 16));
};


/** @param {?proto.CoreSchema.V1.Webhook|undefined} value */
proto.CoreSchema.V1.CreateInvoiceRequest.prototype.setWebhook = function(value) {
  jspb.Message.setOneofWrapperField(this, 16, proto.CoreSchema.V1.CreateInvoiceRequest.oneofGroups_[0], value);
};


proto.CoreSchema.V1.CreateInvoiceRequest.prototype.clearWebhook = function() {
  this.setWebhook(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.CoreSchema.V1.CreateInvoiceRequest.prototype.hasWebhook = function() {
  return jspb.Message.getField(this, 16) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.CoreSchema.V1.UpdatePublicInvoiceRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.CoreSchema.V1.UpdatePublicInvoiceRequest.repeatedFields_, proto.CoreSchema.V1.UpdatePublicInvoiceRequest.oneofGroups_);
};
goog.inherits(proto.CoreSchema.V1.UpdatePublicInvoiceRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.CoreSchema.V1.UpdatePublicInvoiceRequest.displayName = 'proto.CoreSchema.V1.UpdatePublicInvoiceRequest';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.CoreSchema.V1.UpdatePublicInvoiceRequest.repeatedFields_ = [10];

/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.CoreSchema.V1.UpdatePublicInvoiceRequest.oneofGroups_ = [[11,12,13]];

/**
 * @enum {number}
 */
proto.CoreSchema.V1.UpdatePublicInvoiceRequest.IntegrationCase = {
  INTEGRATION_NOT_SET: 0,
  NOINTEGRATION: 11,
  REDIRECT: 12,
  WEBHOOK: 13
};

/**
 * @return {proto.CoreSchema.V1.UpdatePublicInvoiceRequest.IntegrationCase}
 */
proto.CoreSchema.V1.UpdatePublicInvoiceRequest.prototype.getIntegrationCase = function() {
  return /** @type {proto.CoreSchema.V1.UpdatePublicInvoiceRequest.IntegrationCase} */(jspb.Message.computeOneofCase(this, proto.CoreSchema.V1.UpdatePublicInvoiceRequest.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.CoreSchema.V1.UpdatePublicInvoiceRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.CoreSchema.V1.UpdatePublicInvoiceRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.CoreSchema.V1.UpdatePublicInvoiceRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.CoreSchema.V1.UpdatePublicInvoiceRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    invoiceid: jspb.Message.getFieldWithDefault(msg, 1, 0),
    isbasecrypto: jspb.Message.getFieldWithDefault(msg, 2, false),
    price: (f = msg.getPrice()) && proto.CoreSchema.V1.Decimal.toObject(includeInstance, f),
    fiatcurrency: jspb.Message.getFieldWithDefault(msg, 4, ""),
    pricevariable: jspb.Message.getFieldWithDefault(msg, 5, ""),
    comment: jspb.Message.getFieldWithDefault(msg, 6, ""),
    piecesmin: jspb.Message.getFieldWithDefault(msg, 7, 0),
    piecesmax: jspb.Message.getFieldWithDefault(msg, 8, 0),
    limitliquidity: jspb.Message.getFieldWithDefault(msg, 9, false),
    imagesList: jspb.Message.getRepeatedField(msg, 10),
    nointegration: jspb.Message.getFieldWithDefault(msg, 11, false),
    redirect: jspb.Message.getFieldWithDefault(msg, 12, ""),
    webhook: (f = msg.getWebhook()) && proto.CoreSchema.V1.Webhook.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.CoreSchema.V1.UpdatePublicInvoiceRequest}
 */
proto.CoreSchema.V1.UpdatePublicInvoiceRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.CoreSchema.V1.UpdatePublicInvoiceRequest;
  return proto.CoreSchema.V1.UpdatePublicInvoiceRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.CoreSchema.V1.UpdatePublicInvoiceRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.CoreSchema.V1.UpdatePublicInvoiceRequest}
 */
proto.CoreSchema.V1.UpdatePublicInvoiceRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setInvoiceid(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsbasecrypto(value);
      break;
    case 3:
      var value = new proto.CoreSchema.V1.Decimal;
      reader.readMessage(value,proto.CoreSchema.V1.Decimal.deserializeBinaryFromReader);
      msg.setPrice(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setFiatcurrency(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setPricevariable(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setComment(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setPiecesmin(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setPiecesmax(value);
      break;
    case 9:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setLimitliquidity(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.addImages(value);
      break;
    case 11:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setNointegration(value);
      break;
    case 12:
      var value = /** @type {string} */ (reader.readString());
      msg.setRedirect(value);
      break;
    case 13:
      var value = new proto.CoreSchema.V1.Webhook;
      reader.readMessage(value,proto.CoreSchema.V1.Webhook.deserializeBinaryFromReader);
      msg.setWebhook(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.CoreSchema.V1.UpdatePublicInvoiceRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.CoreSchema.V1.UpdatePublicInvoiceRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.CoreSchema.V1.UpdatePublicInvoiceRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.CoreSchema.V1.UpdatePublicInvoiceRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getInvoiceid();
  if (f !== 0) {
    writer.writeUint64(
      1,
      f
    );
  }
  f = message.getIsbasecrypto();
  if (f) {
    writer.writeBool(
      2,
      f
    );
  }
  f = message.getPrice();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.CoreSchema.V1.Decimal.serializeBinaryToWriter
    );
  }
  f = message.getFiatcurrency();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getPricevariable();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getComment();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getPiecesmin();
  if (f !== 0) {
    writer.writeUint32(
      7,
      f
    );
  }
  f = message.getPiecesmax();
  if (f !== 0) {
    writer.writeUint32(
      8,
      f
    );
  }
  f = message.getLimitliquidity();
  if (f) {
    writer.writeBool(
      9,
      f
    );
  }
  f = message.getImagesList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      10,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 11));
  if (f != null) {
    writer.writeBool(
      11,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 12));
  if (f != null) {
    writer.writeString(
      12,
      f
    );
  }
  f = message.getWebhook();
  if (f != null) {
    writer.writeMessage(
      13,
      f,
      proto.CoreSchema.V1.Webhook.serializeBinaryToWriter
    );
  }
};


/**
 * optional uint64 InvoiceId = 1;
 * @return {number}
 */
proto.CoreSchema.V1.UpdatePublicInvoiceRequest.prototype.getInvoiceid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.CoreSchema.V1.UpdatePublicInvoiceRequest.prototype.setInvoiceid = function(value) {
  jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional bool isBaseCrypto = 2;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.CoreSchema.V1.UpdatePublicInvoiceRequest.prototype.getIsbasecrypto = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 2, false));
};


/** @param {boolean} value */
proto.CoreSchema.V1.UpdatePublicInvoiceRequest.prototype.setIsbasecrypto = function(value) {
  jspb.Message.setProto3BooleanField(this, 2, value);
};


/**
 * optional Decimal Price = 3;
 * @return {?proto.CoreSchema.V1.Decimal}
 */
proto.CoreSchema.V1.UpdatePublicInvoiceRequest.prototype.getPrice = function() {
  return /** @type{?proto.CoreSchema.V1.Decimal} */ (
    jspb.Message.getWrapperField(this, proto.CoreSchema.V1.Decimal, 3));
};


/** @param {?proto.CoreSchema.V1.Decimal|undefined} value */
proto.CoreSchema.V1.UpdatePublicInvoiceRequest.prototype.setPrice = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


proto.CoreSchema.V1.UpdatePublicInvoiceRequest.prototype.clearPrice = function() {
  this.setPrice(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.CoreSchema.V1.UpdatePublicInvoiceRequest.prototype.hasPrice = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional string FiatCurrency = 4;
 * @return {string}
 */
proto.CoreSchema.V1.UpdatePublicInvoiceRequest.prototype.getFiatcurrency = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/** @param {string} value */
proto.CoreSchema.V1.UpdatePublicInvoiceRequest.prototype.setFiatcurrency = function(value) {
  jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string PriceVariable = 5;
 * @return {string}
 */
proto.CoreSchema.V1.UpdatePublicInvoiceRequest.prototype.getPricevariable = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/** @param {string} value */
proto.CoreSchema.V1.UpdatePublicInvoiceRequest.prototype.setPricevariable = function(value) {
  jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string Comment = 6;
 * @return {string}
 */
proto.CoreSchema.V1.UpdatePublicInvoiceRequest.prototype.getComment = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/** @param {string} value */
proto.CoreSchema.V1.UpdatePublicInvoiceRequest.prototype.setComment = function(value) {
  jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional uint32 PiecesMin = 7;
 * @return {number}
 */
proto.CoreSchema.V1.UpdatePublicInvoiceRequest.prototype.getPiecesmin = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/** @param {number} value */
proto.CoreSchema.V1.UpdatePublicInvoiceRequest.prototype.setPiecesmin = function(value) {
  jspb.Message.setProto3IntField(this, 7, value);
};


/**
 * optional uint32 PiecesMax = 8;
 * @return {number}
 */
proto.CoreSchema.V1.UpdatePublicInvoiceRequest.prototype.getPiecesmax = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/** @param {number} value */
proto.CoreSchema.V1.UpdatePublicInvoiceRequest.prototype.setPiecesmax = function(value) {
  jspb.Message.setProto3IntField(this, 8, value);
};


/**
 * optional bool LimitLiquidity = 9;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.CoreSchema.V1.UpdatePublicInvoiceRequest.prototype.getLimitliquidity = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 9, false));
};


/** @param {boolean} value */
proto.CoreSchema.V1.UpdatePublicInvoiceRequest.prototype.setLimitliquidity = function(value) {
  jspb.Message.setProto3BooleanField(this, 9, value);
};


/**
 * repeated string Images = 10;
 * @return {!Array<string>}
 */
proto.CoreSchema.V1.UpdatePublicInvoiceRequest.prototype.getImagesList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 10));
};


/** @param {!Array<string>} value */
proto.CoreSchema.V1.UpdatePublicInvoiceRequest.prototype.setImagesList = function(value) {
  jspb.Message.setField(this, 10, value || []);
};


/**
 * @param {!string} value
 * @param {number=} opt_index
 */
proto.CoreSchema.V1.UpdatePublicInvoiceRequest.prototype.addImages = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 10, value, opt_index);
};


proto.CoreSchema.V1.UpdatePublicInvoiceRequest.prototype.clearImagesList = function() {
  this.setImagesList([]);
};


/**
 * optional bool NoIntegration = 11;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.CoreSchema.V1.UpdatePublicInvoiceRequest.prototype.getNointegration = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 11, false));
};


/** @param {boolean} value */
proto.CoreSchema.V1.UpdatePublicInvoiceRequest.prototype.setNointegration = function(value) {
  jspb.Message.setOneofField(this, 11, proto.CoreSchema.V1.UpdatePublicInvoiceRequest.oneofGroups_[0], value);
};


proto.CoreSchema.V1.UpdatePublicInvoiceRequest.prototype.clearNointegration = function() {
  jspb.Message.setOneofField(this, 11, proto.CoreSchema.V1.UpdatePublicInvoiceRequest.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.CoreSchema.V1.UpdatePublicInvoiceRequest.prototype.hasNointegration = function() {
  return jspb.Message.getField(this, 11) != null;
};


/**
 * optional string Redirect = 12;
 * @return {string}
 */
proto.CoreSchema.V1.UpdatePublicInvoiceRequest.prototype.getRedirect = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 12, ""));
};


/** @param {string} value */
proto.CoreSchema.V1.UpdatePublicInvoiceRequest.prototype.setRedirect = function(value) {
  jspb.Message.setOneofField(this, 12, proto.CoreSchema.V1.UpdatePublicInvoiceRequest.oneofGroups_[0], value);
};


proto.CoreSchema.V1.UpdatePublicInvoiceRequest.prototype.clearRedirect = function() {
  jspb.Message.setOneofField(this, 12, proto.CoreSchema.V1.UpdatePublicInvoiceRequest.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.CoreSchema.V1.UpdatePublicInvoiceRequest.prototype.hasRedirect = function() {
  return jspb.Message.getField(this, 12) != null;
};


/**
 * optional Webhook Webhook = 13;
 * @return {?proto.CoreSchema.V1.Webhook}
 */
proto.CoreSchema.V1.UpdatePublicInvoiceRequest.prototype.getWebhook = function() {
  return /** @type{?proto.CoreSchema.V1.Webhook} */ (
    jspb.Message.getWrapperField(this, proto.CoreSchema.V1.Webhook, 13));
};


/** @param {?proto.CoreSchema.V1.Webhook|undefined} value */
proto.CoreSchema.V1.UpdatePublicInvoiceRequest.prototype.setWebhook = function(value) {
  jspb.Message.setOneofWrapperField(this, 13, proto.CoreSchema.V1.UpdatePublicInvoiceRequest.oneofGroups_[0], value);
};


proto.CoreSchema.V1.UpdatePublicInvoiceRequest.prototype.clearWebhook = function() {
  this.setWebhook(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.CoreSchema.V1.UpdatePublicInvoiceRequest.prototype.hasWebhook = function() {
  return jspb.Message.getField(this, 13) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.CoreSchema.V1.SubscribePublicInvoiceRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.CoreSchema.V1.SubscribePublicInvoiceRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.CoreSchema.V1.SubscribePublicInvoiceRequest.displayName = 'proto.CoreSchema.V1.SubscribePublicInvoiceRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.CoreSchema.V1.SubscribePublicInvoiceRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.CoreSchema.V1.SubscribePublicInvoiceRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.CoreSchema.V1.SubscribePublicInvoiceRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.CoreSchema.V1.SubscribePublicInvoiceRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    invoiceid: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.CoreSchema.V1.SubscribePublicInvoiceRequest}
 */
proto.CoreSchema.V1.SubscribePublicInvoiceRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.CoreSchema.V1.SubscribePublicInvoiceRequest;
  return proto.CoreSchema.V1.SubscribePublicInvoiceRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.CoreSchema.V1.SubscribePublicInvoiceRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.CoreSchema.V1.SubscribePublicInvoiceRequest}
 */
proto.CoreSchema.V1.SubscribePublicInvoiceRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setInvoiceid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.CoreSchema.V1.SubscribePublicInvoiceRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.CoreSchema.V1.SubscribePublicInvoiceRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.CoreSchema.V1.SubscribePublicInvoiceRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.CoreSchema.V1.SubscribePublicInvoiceRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getInvoiceid();
  if (f !== 0) {
    writer.writeUint64(
      1,
      f
    );
  }
};


/**
 * optional uint64 InvoiceId = 1;
 * @return {number}
 */
proto.CoreSchema.V1.SubscribePublicInvoiceRequest.prototype.getInvoiceid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.CoreSchema.V1.SubscribePublicInvoiceRequest.prototype.setInvoiceid = function(value) {
  jspb.Message.setProto3IntField(this, 1, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.CoreSchema.V1.SubscribePublicInvoiceResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.CoreSchema.V1.SubscribePublicInvoiceResponse.oneofGroups_);
};
goog.inherits(proto.CoreSchema.V1.SubscribePublicInvoiceResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.CoreSchema.V1.SubscribePublicInvoiceResponse.displayName = 'proto.CoreSchema.V1.SubscribePublicInvoiceResponse';
}
/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.CoreSchema.V1.SubscribePublicInvoiceResponse.oneofGroups_ = [[1,2,3]];

/**
 * @enum {number}
 */
proto.CoreSchema.V1.SubscribePublicInvoiceResponse.ContentCase = {
  CONTENT_NOT_SET: 0,
  INVOICE: 1,
  INVOICEDELETED: 2,
  KEEPALIVE: 3
};

/**
 * @return {proto.CoreSchema.V1.SubscribePublicInvoiceResponse.ContentCase}
 */
proto.CoreSchema.V1.SubscribePublicInvoiceResponse.prototype.getContentCase = function() {
  return /** @type {proto.CoreSchema.V1.SubscribePublicInvoiceResponse.ContentCase} */(jspb.Message.computeOneofCase(this, proto.CoreSchema.V1.SubscribePublicInvoiceResponse.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.CoreSchema.V1.SubscribePublicInvoiceResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.CoreSchema.V1.SubscribePublicInvoiceResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.CoreSchema.V1.SubscribePublicInvoiceResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.CoreSchema.V1.SubscribePublicInvoiceResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    invoice: (f = msg.getInvoice()) && proto.CoreSchema.V1.Invoice.toObject(includeInstance, f),
    invoicedeleted: jspb.Message.getFieldWithDefault(msg, 2, false),
    keepalive: jspb.Message.getFieldWithDefault(msg, 3, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.CoreSchema.V1.SubscribePublicInvoiceResponse}
 */
proto.CoreSchema.V1.SubscribePublicInvoiceResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.CoreSchema.V1.SubscribePublicInvoiceResponse;
  return proto.CoreSchema.V1.SubscribePublicInvoiceResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.CoreSchema.V1.SubscribePublicInvoiceResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.CoreSchema.V1.SubscribePublicInvoiceResponse}
 */
proto.CoreSchema.V1.SubscribePublicInvoiceResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.CoreSchema.V1.Invoice;
      reader.readMessage(value,proto.CoreSchema.V1.Invoice.deserializeBinaryFromReader);
      msg.setInvoice(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setInvoicedeleted(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setKeepalive(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.CoreSchema.V1.SubscribePublicInvoiceResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.CoreSchema.V1.SubscribePublicInvoiceResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.CoreSchema.V1.SubscribePublicInvoiceResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.CoreSchema.V1.SubscribePublicInvoiceResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getInvoice();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.CoreSchema.V1.Invoice.serializeBinaryToWriter
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeBool(
      2,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeBool(
      3,
      f
    );
  }
};


/**
 * optional Invoice Invoice = 1;
 * @return {?proto.CoreSchema.V1.Invoice}
 */
proto.CoreSchema.V1.SubscribePublicInvoiceResponse.prototype.getInvoice = function() {
  return /** @type{?proto.CoreSchema.V1.Invoice} */ (
    jspb.Message.getWrapperField(this, proto.CoreSchema.V1.Invoice, 1));
};


/** @param {?proto.CoreSchema.V1.Invoice|undefined} value */
proto.CoreSchema.V1.SubscribePublicInvoiceResponse.prototype.setInvoice = function(value) {
  jspb.Message.setOneofWrapperField(this, 1, proto.CoreSchema.V1.SubscribePublicInvoiceResponse.oneofGroups_[0], value);
};


proto.CoreSchema.V1.SubscribePublicInvoiceResponse.prototype.clearInvoice = function() {
  this.setInvoice(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.CoreSchema.V1.SubscribePublicInvoiceResponse.prototype.hasInvoice = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional bool InvoiceDeleted = 2;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.CoreSchema.V1.SubscribePublicInvoiceResponse.prototype.getInvoicedeleted = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 2, false));
};


/** @param {boolean} value */
proto.CoreSchema.V1.SubscribePublicInvoiceResponse.prototype.setInvoicedeleted = function(value) {
  jspb.Message.setOneofField(this, 2, proto.CoreSchema.V1.SubscribePublicInvoiceResponse.oneofGroups_[0], value);
};


proto.CoreSchema.V1.SubscribePublicInvoiceResponse.prototype.clearInvoicedeleted = function() {
  jspb.Message.setOneofField(this, 2, proto.CoreSchema.V1.SubscribePublicInvoiceResponse.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.CoreSchema.V1.SubscribePublicInvoiceResponse.prototype.hasInvoicedeleted = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional bool KeepAlive = 3;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.CoreSchema.V1.SubscribePublicInvoiceResponse.prototype.getKeepalive = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 3, false));
};


/** @param {boolean} value */
proto.CoreSchema.V1.SubscribePublicInvoiceResponse.prototype.setKeepalive = function(value) {
  jspb.Message.setOneofField(this, 3, proto.CoreSchema.V1.SubscribePublicInvoiceResponse.oneofGroups_[0], value);
};


proto.CoreSchema.V1.SubscribePublicInvoiceResponse.prototype.clearKeepalive = function() {
  jspb.Message.setOneofField(this, 3, proto.CoreSchema.V1.SubscribePublicInvoiceResponse.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.CoreSchema.V1.SubscribePublicInvoiceResponse.prototype.hasKeepalive = function() {
  return jspb.Message.getField(this, 3) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.CoreSchema.V1.DeleteInvoiceRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.CoreSchema.V1.DeleteInvoiceRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.CoreSchema.V1.DeleteInvoiceRequest.displayName = 'proto.CoreSchema.V1.DeleteInvoiceRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.CoreSchema.V1.DeleteInvoiceRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.CoreSchema.V1.DeleteInvoiceRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.CoreSchema.V1.DeleteInvoiceRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.CoreSchema.V1.DeleteInvoiceRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    invoiceid: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.CoreSchema.V1.DeleteInvoiceRequest}
 */
proto.CoreSchema.V1.DeleteInvoiceRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.CoreSchema.V1.DeleteInvoiceRequest;
  return proto.CoreSchema.V1.DeleteInvoiceRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.CoreSchema.V1.DeleteInvoiceRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.CoreSchema.V1.DeleteInvoiceRequest}
 */
proto.CoreSchema.V1.DeleteInvoiceRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setInvoiceid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.CoreSchema.V1.DeleteInvoiceRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.CoreSchema.V1.DeleteInvoiceRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.CoreSchema.V1.DeleteInvoiceRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.CoreSchema.V1.DeleteInvoiceRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getInvoiceid();
  if (f !== 0) {
    writer.writeUint64(
      1,
      f
    );
  }
};


/**
 * optional uint64 InvoiceId = 1;
 * @return {number}
 */
proto.CoreSchema.V1.DeleteInvoiceRequest.prototype.getInvoiceid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.CoreSchema.V1.DeleteInvoiceRequest.prototype.setInvoiceid = function(value) {
  jspb.Message.setProto3IntField(this, 1, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.CoreSchema.V1.DeleteInvoiceResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.CoreSchema.V1.DeleteInvoiceResponse.oneofGroups_);
};
goog.inherits(proto.CoreSchema.V1.DeleteInvoiceResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.CoreSchema.V1.DeleteInvoiceResponse.displayName = 'proto.CoreSchema.V1.DeleteInvoiceResponse';
}
/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.CoreSchema.V1.DeleteInvoiceResponse.oneofGroups_ = [[1,2]];

/**
 * @enum {number}
 */
proto.CoreSchema.V1.DeleteInvoiceResponse.RefundCase = {
  REFUND_NOT_SET: 0,
  REFUNDISNULL: 1,
  PAYMENTREFUND: 2
};

/**
 * @return {proto.CoreSchema.V1.DeleteInvoiceResponse.RefundCase}
 */
proto.CoreSchema.V1.DeleteInvoiceResponse.prototype.getRefundCase = function() {
  return /** @type {proto.CoreSchema.V1.DeleteInvoiceResponse.RefundCase} */(jspb.Message.computeOneofCase(this, proto.CoreSchema.V1.DeleteInvoiceResponse.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.CoreSchema.V1.DeleteInvoiceResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.CoreSchema.V1.DeleteInvoiceResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.CoreSchema.V1.DeleteInvoiceResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.CoreSchema.V1.DeleteInvoiceResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    refundisnull: jspb.Message.getFieldWithDefault(msg, 1, false),
    paymentrefund: (f = msg.getPaymentrefund()) && proto.CoreSchema.V1.InvoicePayment.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.CoreSchema.V1.DeleteInvoiceResponse}
 */
proto.CoreSchema.V1.DeleteInvoiceResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.CoreSchema.V1.DeleteInvoiceResponse;
  return proto.CoreSchema.V1.DeleteInvoiceResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.CoreSchema.V1.DeleteInvoiceResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.CoreSchema.V1.DeleteInvoiceResponse}
 */
proto.CoreSchema.V1.DeleteInvoiceResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setRefundisnull(value);
      break;
    case 2:
      var value = new proto.CoreSchema.V1.InvoicePayment;
      reader.readMessage(value,proto.CoreSchema.V1.InvoicePayment.deserializeBinaryFromReader);
      msg.setPaymentrefund(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.CoreSchema.V1.DeleteInvoiceResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.CoreSchema.V1.DeleteInvoiceResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.CoreSchema.V1.DeleteInvoiceResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.CoreSchema.V1.DeleteInvoiceResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {boolean} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeBool(
      1,
      f
    );
  }
  f = message.getPaymentrefund();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.CoreSchema.V1.InvoicePayment.serializeBinaryToWriter
    );
  }
};


/**
 * optional bool RefundIsNull = 1;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.CoreSchema.V1.DeleteInvoiceResponse.prototype.getRefundisnull = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 1, false));
};


/** @param {boolean} value */
proto.CoreSchema.V1.DeleteInvoiceResponse.prototype.setRefundisnull = function(value) {
  jspb.Message.setOneofField(this, 1, proto.CoreSchema.V1.DeleteInvoiceResponse.oneofGroups_[0], value);
};


proto.CoreSchema.V1.DeleteInvoiceResponse.prototype.clearRefundisnull = function() {
  jspb.Message.setOneofField(this, 1, proto.CoreSchema.V1.DeleteInvoiceResponse.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.CoreSchema.V1.DeleteInvoiceResponse.prototype.hasRefundisnull = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional InvoicePayment PaymentRefund = 2;
 * @return {?proto.CoreSchema.V1.InvoicePayment}
 */
proto.CoreSchema.V1.DeleteInvoiceResponse.prototype.getPaymentrefund = function() {
  return /** @type{?proto.CoreSchema.V1.InvoicePayment} */ (
    jspb.Message.getWrapperField(this, proto.CoreSchema.V1.InvoicePayment, 2));
};


/** @param {?proto.CoreSchema.V1.InvoicePayment|undefined} value */
proto.CoreSchema.V1.DeleteInvoiceResponse.prototype.setPaymentrefund = function(value) {
  jspb.Message.setOneofWrapperField(this, 2, proto.CoreSchema.V1.DeleteInvoiceResponse.oneofGroups_[0], value);
};


proto.CoreSchema.V1.DeleteInvoiceResponse.prototype.clearPaymentrefund = function() {
  this.setPaymentrefund(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.CoreSchema.V1.DeleteInvoiceResponse.prototype.hasPaymentrefund = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.CoreSchema.V1.GetInvoicesRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.CoreSchema.V1.GetInvoicesRequest.repeatedFields_, null);
};
goog.inherits(proto.CoreSchema.V1.GetInvoicesRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.CoreSchema.V1.GetInvoicesRequest.displayName = 'proto.CoreSchema.V1.GetInvoicesRequest';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.CoreSchema.V1.GetInvoicesRequest.repeatedFields_ = [3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.CoreSchema.V1.GetInvoicesRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.CoreSchema.V1.GetInvoicesRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.CoreSchema.V1.GetInvoicesRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.CoreSchema.V1.GetInvoicesRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    isowner: jspb.Message.getFieldWithDefault(msg, 1, false),
    isownerhasvalue: jspb.Message.getFieldWithDefault(msg, 2, false),
    statusesList: jspb.Message.getRepeatedField(msg, 3),
    isprivate: jspb.Message.getFieldWithDefault(msg, 5, false),
    isprivatehasvalue: jspb.Message.getFieldWithDefault(msg, 6, false),
    id: jspb.Message.getFieldWithDefault(msg, 7, 0),
    touser: jspb.Message.getFieldWithDefault(msg, 8, ""),
    lastid: jspb.Message.getFieldWithDefault(msg, 9, 0),
    count: jspb.Message.getFieldWithDefault(msg, 10, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.CoreSchema.V1.GetInvoicesRequest}
 */
proto.CoreSchema.V1.GetInvoicesRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.CoreSchema.V1.GetInvoicesRequest;
  return proto.CoreSchema.V1.GetInvoicesRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.CoreSchema.V1.GetInvoicesRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.CoreSchema.V1.GetInvoicesRequest}
 */
proto.CoreSchema.V1.GetInvoicesRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsowner(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsownerhasvalue(value);
      break;
    case 3:
      var value = /** @type {!Array<!proto.CoreSchema.V1.Invoice.InvoiceStatus>} */ (reader.readPackedEnum());
      msg.setStatusesList(value);
      break;
    case 5:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsprivate(value);
      break;
    case 6:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsprivatehasvalue(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setId(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setTouser(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setLastid(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setCount(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.CoreSchema.V1.GetInvoicesRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.CoreSchema.V1.GetInvoicesRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.CoreSchema.V1.GetInvoicesRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.CoreSchema.V1.GetInvoicesRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getIsowner();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
  f = message.getIsownerhasvalue();
  if (f) {
    writer.writeBool(
      2,
      f
    );
  }
  f = message.getStatusesList();
  if (f.length > 0) {
    writer.writePackedEnum(
      3,
      f
    );
  }
  f = message.getIsprivate();
  if (f) {
    writer.writeBool(
      5,
      f
    );
  }
  f = message.getIsprivatehasvalue();
  if (f) {
    writer.writeBool(
      6,
      f
    );
  }
  f = message.getId();
  if (f !== 0) {
    writer.writeUint64(
      7,
      f
    );
  }
  f = message.getTouser();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getLastid();
  if (f !== 0) {
    writer.writeUint64(
      9,
      f
    );
  }
  f = message.getCount();
  if (f !== 0) {
    writer.writeUint32(
      10,
      f
    );
  }
};


/**
 * optional bool IsOwner = 1;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.CoreSchema.V1.GetInvoicesRequest.prototype.getIsowner = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 1, false));
};


/** @param {boolean} value */
proto.CoreSchema.V1.GetInvoicesRequest.prototype.setIsowner = function(value) {
  jspb.Message.setProto3BooleanField(this, 1, value);
};


/**
 * optional bool isOwnerHasValue = 2;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.CoreSchema.V1.GetInvoicesRequest.prototype.getIsownerhasvalue = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 2, false));
};


/** @param {boolean} value */
proto.CoreSchema.V1.GetInvoicesRequest.prototype.setIsownerhasvalue = function(value) {
  jspb.Message.setProto3BooleanField(this, 2, value);
};


/**
 * repeated Invoice.InvoiceStatus Statuses = 3;
 * @return {!Array<!proto.CoreSchema.V1.Invoice.InvoiceStatus>}
 */
proto.CoreSchema.V1.GetInvoicesRequest.prototype.getStatusesList = function() {
  return /** @type {!Array<!proto.CoreSchema.V1.Invoice.InvoiceStatus>} */ (jspb.Message.getRepeatedField(this, 3));
};


/** @param {!Array<!proto.CoreSchema.V1.Invoice.InvoiceStatus>} value */
proto.CoreSchema.V1.GetInvoicesRequest.prototype.setStatusesList = function(value) {
  jspb.Message.setField(this, 3, value || []);
};


/**
 * @param {!proto.CoreSchema.V1.Invoice.InvoiceStatus} value
 * @param {number=} opt_index
 */
proto.CoreSchema.V1.GetInvoicesRequest.prototype.addStatuses = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 3, value, opt_index);
};


proto.CoreSchema.V1.GetInvoicesRequest.prototype.clearStatusesList = function() {
  this.setStatusesList([]);
};


/**
 * optional bool IsPrivate = 5;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.CoreSchema.V1.GetInvoicesRequest.prototype.getIsprivate = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 5, false));
};


/** @param {boolean} value */
proto.CoreSchema.V1.GetInvoicesRequest.prototype.setIsprivate = function(value) {
  jspb.Message.setProto3BooleanField(this, 5, value);
};


/**
 * optional bool IsPrivateHasValue = 6;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.CoreSchema.V1.GetInvoicesRequest.prototype.getIsprivatehasvalue = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 6, false));
};


/** @param {boolean} value */
proto.CoreSchema.V1.GetInvoicesRequest.prototype.setIsprivatehasvalue = function(value) {
  jspb.Message.setProto3BooleanField(this, 6, value);
};


/**
 * optional uint64 Id = 7;
 * @return {number}
 */
proto.CoreSchema.V1.GetInvoicesRequest.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/** @param {number} value */
proto.CoreSchema.V1.GetInvoicesRequest.prototype.setId = function(value) {
  jspb.Message.setProto3IntField(this, 7, value);
};


/**
 * optional string ToUser = 8;
 * @return {string}
 */
proto.CoreSchema.V1.GetInvoicesRequest.prototype.getTouser = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/** @param {string} value */
proto.CoreSchema.V1.GetInvoicesRequest.prototype.setTouser = function(value) {
  jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * optional uint64 lastId = 9;
 * @return {number}
 */
proto.CoreSchema.V1.GetInvoicesRequest.prototype.getLastid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/** @param {number} value */
proto.CoreSchema.V1.GetInvoicesRequest.prototype.setLastid = function(value) {
  jspb.Message.setProto3IntField(this, 9, value);
};


/**
 * optional uint32 count = 10;
 * @return {number}
 */
proto.CoreSchema.V1.GetInvoicesRequest.prototype.getCount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 10, 0));
};


/** @param {number} value */
proto.CoreSchema.V1.GetInvoicesRequest.prototype.setCount = function(value) {
  jspb.Message.setProto3IntField(this, 10, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.CoreSchema.V1.GetInvoicesResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.CoreSchema.V1.GetInvoicesResponse.repeatedFields_, null);
};
goog.inherits(proto.CoreSchema.V1.GetInvoicesResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.CoreSchema.V1.GetInvoicesResponse.displayName = 'proto.CoreSchema.V1.GetInvoicesResponse';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.CoreSchema.V1.GetInvoicesResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.CoreSchema.V1.GetInvoicesResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.CoreSchema.V1.GetInvoicesResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.CoreSchema.V1.GetInvoicesResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.CoreSchema.V1.GetInvoicesResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    invoicesList: jspb.Message.toObjectList(msg.getInvoicesList(),
    proto.CoreSchema.V1.Invoice.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.CoreSchema.V1.GetInvoicesResponse}
 */
proto.CoreSchema.V1.GetInvoicesResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.CoreSchema.V1.GetInvoicesResponse;
  return proto.CoreSchema.V1.GetInvoicesResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.CoreSchema.V1.GetInvoicesResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.CoreSchema.V1.GetInvoicesResponse}
 */
proto.CoreSchema.V1.GetInvoicesResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.CoreSchema.V1.Invoice;
      reader.readMessage(value,proto.CoreSchema.V1.Invoice.deserializeBinaryFromReader);
      msg.addInvoices(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.CoreSchema.V1.GetInvoicesResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.CoreSchema.V1.GetInvoicesResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.CoreSchema.V1.GetInvoicesResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.CoreSchema.V1.GetInvoicesResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getInvoicesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.CoreSchema.V1.Invoice.serializeBinaryToWriter
    );
  }
};


/**
 * repeated Invoice Invoices = 1;
 * @return {!Array<!proto.CoreSchema.V1.Invoice>}
 */
proto.CoreSchema.V1.GetInvoicesResponse.prototype.getInvoicesList = function() {
  return /** @type{!Array<!proto.CoreSchema.V1.Invoice>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.CoreSchema.V1.Invoice, 1));
};


/** @param {!Array<!proto.CoreSchema.V1.Invoice>} value */
proto.CoreSchema.V1.GetInvoicesResponse.prototype.setInvoicesList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.CoreSchema.V1.Invoice=} opt_value
 * @param {number=} opt_index
 * @return {!proto.CoreSchema.V1.Invoice}
 */
proto.CoreSchema.V1.GetInvoicesResponse.prototype.addInvoices = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.CoreSchema.V1.Invoice, opt_index);
};


proto.CoreSchema.V1.GetInvoicesResponse.prototype.clearInvoicesList = function() {
  this.setInvoicesList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.CoreSchema.V1.GetInvoiceByIdRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.CoreSchema.V1.GetInvoiceByIdRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.CoreSchema.V1.GetInvoiceByIdRequest.displayName = 'proto.CoreSchema.V1.GetInvoiceByIdRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.CoreSchema.V1.GetInvoiceByIdRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.CoreSchema.V1.GetInvoiceByIdRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.CoreSchema.V1.GetInvoiceByIdRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.CoreSchema.V1.GetInvoiceByIdRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    invoiceid: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.CoreSchema.V1.GetInvoiceByIdRequest}
 */
proto.CoreSchema.V1.GetInvoiceByIdRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.CoreSchema.V1.GetInvoiceByIdRequest;
  return proto.CoreSchema.V1.GetInvoiceByIdRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.CoreSchema.V1.GetInvoiceByIdRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.CoreSchema.V1.GetInvoiceByIdRequest}
 */
proto.CoreSchema.V1.GetInvoiceByIdRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setInvoiceid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.CoreSchema.V1.GetInvoiceByIdRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.CoreSchema.V1.GetInvoiceByIdRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.CoreSchema.V1.GetInvoiceByIdRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.CoreSchema.V1.GetInvoiceByIdRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getInvoiceid();
  if (f !== 0) {
    writer.writeUint64(
      1,
      f
    );
  }
};


/**
 * optional uint64 InvoiceId = 1;
 * @return {number}
 */
proto.CoreSchema.V1.GetInvoiceByIdRequest.prototype.getInvoiceid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.CoreSchema.V1.GetInvoiceByIdRequest.prototype.setInvoiceid = function(value) {
  jspb.Message.setProto3IntField(this, 1, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.CoreSchema.V1.PayInvoiceFromBalanceRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.CoreSchema.V1.PayInvoiceFromBalanceRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.CoreSchema.V1.PayInvoiceFromBalanceRequest.displayName = 'proto.CoreSchema.V1.PayInvoiceFromBalanceRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.CoreSchema.V1.PayInvoiceFromBalanceRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.CoreSchema.V1.PayInvoiceFromBalanceRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.CoreSchema.V1.PayInvoiceFromBalanceRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.CoreSchema.V1.PayInvoiceFromBalanceRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    invoiceid: jspb.Message.getFieldWithDefault(msg, 1, 0),
    pieces: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.CoreSchema.V1.PayInvoiceFromBalanceRequest}
 */
proto.CoreSchema.V1.PayInvoiceFromBalanceRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.CoreSchema.V1.PayInvoiceFromBalanceRequest;
  return proto.CoreSchema.V1.PayInvoiceFromBalanceRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.CoreSchema.V1.PayInvoiceFromBalanceRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.CoreSchema.V1.PayInvoiceFromBalanceRequest}
 */
proto.CoreSchema.V1.PayInvoiceFromBalanceRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setInvoiceid(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setPieces(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.CoreSchema.V1.PayInvoiceFromBalanceRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.CoreSchema.V1.PayInvoiceFromBalanceRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.CoreSchema.V1.PayInvoiceFromBalanceRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.CoreSchema.V1.PayInvoiceFromBalanceRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getInvoiceid();
  if (f !== 0) {
    writer.writeUint64(
      1,
      f
    );
  }
  f = message.getPieces();
  if (f !== 0) {
    writer.writeUint32(
      2,
      f
    );
  }
};


/**
 * optional uint64 InvoiceId = 1;
 * @return {number}
 */
proto.CoreSchema.V1.PayInvoiceFromBalanceRequest.prototype.getInvoiceid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.CoreSchema.V1.PayInvoiceFromBalanceRequest.prototype.setInvoiceid = function(value) {
  jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional uint32 Pieces = 2;
 * @return {number}
 */
proto.CoreSchema.V1.PayInvoiceFromBalanceRequest.prototype.getPieces = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.CoreSchema.V1.PayInvoiceFromBalanceRequest.prototype.setPieces = function(value) {
  jspb.Message.setProto3IntField(this, 2, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.CoreSchema.V1.InvoicePayment = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.CoreSchema.V1.InvoicePayment.repeatedFields_, proto.CoreSchema.V1.InvoicePayment.oneofGroups_);
};
goog.inherits(proto.CoreSchema.V1.InvoicePayment, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.CoreSchema.V1.InvoicePayment.displayName = 'proto.CoreSchema.V1.InvoicePayment';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.CoreSchema.V1.InvoicePayment.repeatedFields_ = [17,21];

/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.CoreSchema.V1.InvoicePayment.oneofGroups_ = [[7,8],[9,10],[12,13]];

/**
 * @enum {number}
 */
proto.CoreSchema.V1.InvoicePayment.NullablesellerfeedbackCase = {
  NULLABLESELLERFEEDBACK_NOT_SET: 0,
  SELLERFEEDBACKISNULL: 7,
  SELLERFEEDBACK: 8
};

/**
 * @return {proto.CoreSchema.V1.InvoicePayment.NullablesellerfeedbackCase}
 */
proto.CoreSchema.V1.InvoicePayment.prototype.getNullablesellerfeedbackCase = function() {
  return /** @type {proto.CoreSchema.V1.InvoicePayment.NullablesellerfeedbackCase} */(jspb.Message.computeOneofCase(this, proto.CoreSchema.V1.InvoicePayment.oneofGroups_[0]));
};

/**
 * @enum {number}
 */
proto.CoreSchema.V1.InvoicePayment.NullableownerfeedbackCase = {
  NULLABLEOWNERFEEDBACK_NOT_SET: 0,
  OWNERFEEDBACKISNULL: 9,
  OWNERFEEDBACK: 10
};

/**
 * @return {proto.CoreSchema.V1.InvoicePayment.NullableownerfeedbackCase}
 */
proto.CoreSchema.V1.InvoicePayment.prototype.getNullableownerfeedbackCase = function() {
  return /** @type {proto.CoreSchema.V1.InvoicePayment.NullableownerfeedbackCase} */(jspb.Message.computeOneofCase(this, proto.CoreSchema.V1.InvoicePayment.oneofGroups_[1]));
};

/**
 * @enum {number}
 */
proto.CoreSchema.V1.InvoicePayment.NullabledealCase = {
  NULLABLEDEAL_NOT_SET: 0,
  DEALISNULL: 12,
  DEAL: 13
};

/**
 * @return {proto.CoreSchema.V1.InvoicePayment.NullabledealCase}
 */
proto.CoreSchema.V1.InvoicePayment.prototype.getNullabledealCase = function() {
  return /** @type {proto.CoreSchema.V1.InvoicePayment.NullabledealCase} */(jspb.Message.computeOneofCase(this, proto.CoreSchema.V1.InvoicePayment.oneofGroups_[2]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.CoreSchema.V1.InvoicePayment.prototype.toObject = function(opt_includeInstance) {
  return proto.CoreSchema.V1.InvoicePayment.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.CoreSchema.V1.InvoicePayment} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.CoreSchema.V1.InvoicePayment.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0),
    cryptoamount: (f = msg.getCryptoamount()) && proto.CoreSchema.V1.Decimal.toObject(includeInstance, f),
    createdat: (f = msg.getCreatedat()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    confirmation: jspb.Message.getFieldWithDefault(msg, 4, ""),
    owner: (f = msg.getOwner()) && proto.CoreSchema.V1.UserInfo.toObject(includeInstance, f),
    invoice: (f = msg.getInvoice()) && proto.CoreSchema.V1.Invoice.toObject(includeInstance, f),
    sellerfeedbackisnull: jspb.Message.getFieldWithDefault(msg, 7, false),
    sellerfeedback: (f = msg.getSellerfeedback()) && proto.CoreSchema.V1.Feedback.toObject(includeInstance, f),
    ownerfeedbackisnull: jspb.Message.getFieldWithDefault(msg, 9, false),
    ownerfeedback: (f = msg.getOwnerfeedback()) && proto.CoreSchema.V1.Feedback.toObject(includeInstance, f),
    status: jspb.Message.getFieldWithDefault(msg, 11, 0),
    dealisnull: jspb.Message.getFieldWithDefault(msg, 12, false),
    deal: (f = msg.getDeal()) && proto.CoreSchema.V1.Deal.toObject(includeInstance, f),
    pieces: jspb.Message.getFieldWithDefault(msg, 14, 0),
    isrefund: jspb.Message.getFieldWithDefault(msg, 16, false),
    refundsList: jspb.Message.toObjectList(msg.getRefundsList(),
    proto.CoreSchema.V1.Invoice.toObject, includeInstance),
    refunded: jspb.Message.getFieldWithDefault(msg, 18, 0),
    refunding: jspb.Message.getFieldWithDefault(msg, 19, 0),
    oddpromise: jspb.Message.getFieldWithDefault(msg, 20, ""),
    secretsList: jspb.Message.toObjectList(msg.getSecretsList(),
    proto.CoreSchema.V1.InvoiceSecret.toObject, includeInstance),
    lninvoice: jspb.Message.getFieldWithDefault(msg, 22, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.CoreSchema.V1.InvoicePayment}
 */
proto.CoreSchema.V1.InvoicePayment.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.CoreSchema.V1.InvoicePayment;
  return proto.CoreSchema.V1.InvoicePayment.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.CoreSchema.V1.InvoicePayment} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.CoreSchema.V1.InvoicePayment}
 */
proto.CoreSchema.V1.InvoicePayment.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setId(value);
      break;
    case 2:
      var value = new proto.CoreSchema.V1.Decimal;
      reader.readMessage(value,proto.CoreSchema.V1.Decimal.deserializeBinaryFromReader);
      msg.setCryptoamount(value);
      break;
    case 3:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setCreatedat(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setConfirmation(value);
      break;
    case 5:
      var value = new proto.CoreSchema.V1.UserInfo;
      reader.readMessage(value,proto.CoreSchema.V1.UserInfo.deserializeBinaryFromReader);
      msg.setOwner(value);
      break;
    case 6:
      var value = new proto.CoreSchema.V1.Invoice;
      reader.readMessage(value,proto.CoreSchema.V1.Invoice.deserializeBinaryFromReader);
      msg.setInvoice(value);
      break;
    case 7:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setSellerfeedbackisnull(value);
      break;
    case 8:
      var value = new proto.CoreSchema.V1.Feedback;
      reader.readMessage(value,proto.CoreSchema.V1.Feedback.deserializeBinaryFromReader);
      msg.setSellerfeedback(value);
      break;
    case 9:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setOwnerfeedbackisnull(value);
      break;
    case 10:
      var value = new proto.CoreSchema.V1.Feedback;
      reader.readMessage(value,proto.CoreSchema.V1.Feedback.deserializeBinaryFromReader);
      msg.setOwnerfeedback(value);
      break;
    case 11:
      var value = /** @type {!proto.CoreSchema.V1.InvoicePayment.InvoicePaymentStatus} */ (reader.readEnum());
      msg.setStatus(value);
      break;
    case 12:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setDealisnull(value);
      break;
    case 13:
      var value = new proto.CoreSchema.V1.Deal;
      reader.readMessage(value,proto.CoreSchema.V1.Deal.deserializeBinaryFromReader);
      msg.setDeal(value);
      break;
    case 14:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setPieces(value);
      break;
    case 16:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsrefund(value);
      break;
    case 17:
      var value = new proto.CoreSchema.V1.Invoice;
      reader.readMessage(value,proto.CoreSchema.V1.Invoice.deserializeBinaryFromReader);
      msg.addRefunds(value);
      break;
    case 18:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setRefunded(value);
      break;
    case 19:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setRefunding(value);
      break;
    case 20:
      var value = /** @type {string} */ (reader.readString());
      msg.setOddpromise(value);
      break;
    case 21:
      var value = new proto.CoreSchema.V1.InvoiceSecret;
      reader.readMessage(value,proto.CoreSchema.V1.InvoiceSecret.deserializeBinaryFromReader);
      msg.addSecrets(value);
      break;
    case 22:
      var value = /** @type {string} */ (reader.readString());
      msg.setLninvoice(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.CoreSchema.V1.InvoicePayment.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.CoreSchema.V1.InvoicePayment.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.CoreSchema.V1.InvoicePayment} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.CoreSchema.V1.InvoicePayment.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeUint64(
      1,
      f
    );
  }
  f = message.getCryptoamount();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.CoreSchema.V1.Decimal.serializeBinaryToWriter
    );
  }
  f = message.getCreatedat();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getConfirmation();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getOwner();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.CoreSchema.V1.UserInfo.serializeBinaryToWriter
    );
  }
  f = message.getInvoice();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      proto.CoreSchema.V1.Invoice.serializeBinaryToWriter
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 7));
  if (f != null) {
    writer.writeBool(
      7,
      f
    );
  }
  f = message.getSellerfeedback();
  if (f != null) {
    writer.writeMessage(
      8,
      f,
      proto.CoreSchema.V1.Feedback.serializeBinaryToWriter
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 9));
  if (f != null) {
    writer.writeBool(
      9,
      f
    );
  }
  f = message.getOwnerfeedback();
  if (f != null) {
    writer.writeMessage(
      10,
      f,
      proto.CoreSchema.V1.Feedback.serializeBinaryToWriter
    );
  }
  f = message.getStatus();
  if (f !== 0.0) {
    writer.writeEnum(
      11,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 12));
  if (f != null) {
    writer.writeBool(
      12,
      f
    );
  }
  f = message.getDeal();
  if (f != null) {
    writer.writeMessage(
      13,
      f,
      proto.CoreSchema.V1.Deal.serializeBinaryToWriter
    );
  }
  f = message.getPieces();
  if (f !== 0) {
    writer.writeUint32(
      14,
      f
    );
  }
  f = message.getIsrefund();
  if (f) {
    writer.writeBool(
      16,
      f
    );
  }
  f = message.getRefundsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      17,
      f,
      proto.CoreSchema.V1.Invoice.serializeBinaryToWriter
    );
  }
  f = message.getRefunded();
  if (f !== 0) {
    writer.writeUint32(
      18,
      f
    );
  }
  f = message.getRefunding();
  if (f !== 0) {
    writer.writeUint32(
      19,
      f
    );
  }
  f = message.getOddpromise();
  if (f.length > 0) {
    writer.writeString(
      20,
      f
    );
  }
  f = message.getSecretsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      21,
      f,
      proto.CoreSchema.V1.InvoiceSecret.serializeBinaryToWriter
    );
  }
  f = message.getLninvoice();
  if (f.length > 0) {
    writer.writeString(
      22,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.CoreSchema.V1.InvoicePayment.InvoicePaymentStatus = {
  PENDING: 0,
  PAID: 1,
  CANCELED: 2
};

/**
 * optional uint64 Id = 1;
 * @return {number}
 */
proto.CoreSchema.V1.InvoicePayment.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.CoreSchema.V1.InvoicePayment.prototype.setId = function(value) {
  jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional Decimal CryptoAmount = 2;
 * @return {?proto.CoreSchema.V1.Decimal}
 */
proto.CoreSchema.V1.InvoicePayment.prototype.getCryptoamount = function() {
  return /** @type{?proto.CoreSchema.V1.Decimal} */ (
    jspb.Message.getWrapperField(this, proto.CoreSchema.V1.Decimal, 2));
};


/** @param {?proto.CoreSchema.V1.Decimal|undefined} value */
proto.CoreSchema.V1.InvoicePayment.prototype.setCryptoamount = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.CoreSchema.V1.InvoicePayment.prototype.clearCryptoamount = function() {
  this.setCryptoamount(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.CoreSchema.V1.InvoicePayment.prototype.hasCryptoamount = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional google.protobuf.Timestamp CreatedAt = 3;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.CoreSchema.V1.InvoicePayment.prototype.getCreatedat = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 3));
};


/** @param {?proto.google.protobuf.Timestamp|undefined} value */
proto.CoreSchema.V1.InvoicePayment.prototype.setCreatedat = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


proto.CoreSchema.V1.InvoicePayment.prototype.clearCreatedat = function() {
  this.setCreatedat(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.CoreSchema.V1.InvoicePayment.prototype.hasCreatedat = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional string Confirmation = 4;
 * @return {string}
 */
proto.CoreSchema.V1.InvoicePayment.prototype.getConfirmation = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/** @param {string} value */
proto.CoreSchema.V1.InvoicePayment.prototype.setConfirmation = function(value) {
  jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional UserInfo Owner = 5;
 * @return {?proto.CoreSchema.V1.UserInfo}
 */
proto.CoreSchema.V1.InvoicePayment.prototype.getOwner = function() {
  return /** @type{?proto.CoreSchema.V1.UserInfo} */ (
    jspb.Message.getWrapperField(this, proto.CoreSchema.V1.UserInfo, 5));
};


/** @param {?proto.CoreSchema.V1.UserInfo|undefined} value */
proto.CoreSchema.V1.InvoicePayment.prototype.setOwner = function(value) {
  jspb.Message.setWrapperField(this, 5, value);
};


proto.CoreSchema.V1.InvoicePayment.prototype.clearOwner = function() {
  this.setOwner(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.CoreSchema.V1.InvoicePayment.prototype.hasOwner = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional Invoice Invoice = 6;
 * @return {?proto.CoreSchema.V1.Invoice}
 */
proto.CoreSchema.V1.InvoicePayment.prototype.getInvoice = function() {
  return /** @type{?proto.CoreSchema.V1.Invoice} */ (
    jspb.Message.getWrapperField(this, proto.CoreSchema.V1.Invoice, 6));
};


/** @param {?proto.CoreSchema.V1.Invoice|undefined} value */
proto.CoreSchema.V1.InvoicePayment.prototype.setInvoice = function(value) {
  jspb.Message.setWrapperField(this, 6, value);
};


proto.CoreSchema.V1.InvoicePayment.prototype.clearInvoice = function() {
  this.setInvoice(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.CoreSchema.V1.InvoicePayment.prototype.hasInvoice = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional bool SellerFeedbackIsNull = 7;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.CoreSchema.V1.InvoicePayment.prototype.getSellerfeedbackisnull = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 7, false));
};


/** @param {boolean} value */
proto.CoreSchema.V1.InvoicePayment.prototype.setSellerfeedbackisnull = function(value) {
  jspb.Message.setOneofField(this, 7, proto.CoreSchema.V1.InvoicePayment.oneofGroups_[0], value);
};


proto.CoreSchema.V1.InvoicePayment.prototype.clearSellerfeedbackisnull = function() {
  jspb.Message.setOneofField(this, 7, proto.CoreSchema.V1.InvoicePayment.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.CoreSchema.V1.InvoicePayment.prototype.hasSellerfeedbackisnull = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional Feedback SellerFeedback = 8;
 * @return {?proto.CoreSchema.V1.Feedback}
 */
proto.CoreSchema.V1.InvoicePayment.prototype.getSellerfeedback = function() {
  return /** @type{?proto.CoreSchema.V1.Feedback} */ (
    jspb.Message.getWrapperField(this, proto.CoreSchema.V1.Feedback, 8));
};


/** @param {?proto.CoreSchema.V1.Feedback|undefined} value */
proto.CoreSchema.V1.InvoicePayment.prototype.setSellerfeedback = function(value) {
  jspb.Message.setOneofWrapperField(this, 8, proto.CoreSchema.V1.InvoicePayment.oneofGroups_[0], value);
};


proto.CoreSchema.V1.InvoicePayment.prototype.clearSellerfeedback = function() {
  this.setSellerfeedback(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.CoreSchema.V1.InvoicePayment.prototype.hasSellerfeedback = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional bool OwnerFeedbackIsNull = 9;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.CoreSchema.V1.InvoicePayment.prototype.getOwnerfeedbackisnull = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 9, false));
};


/** @param {boolean} value */
proto.CoreSchema.V1.InvoicePayment.prototype.setOwnerfeedbackisnull = function(value) {
  jspb.Message.setOneofField(this, 9, proto.CoreSchema.V1.InvoicePayment.oneofGroups_[1], value);
};


proto.CoreSchema.V1.InvoicePayment.prototype.clearOwnerfeedbackisnull = function() {
  jspb.Message.setOneofField(this, 9, proto.CoreSchema.V1.InvoicePayment.oneofGroups_[1], undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.CoreSchema.V1.InvoicePayment.prototype.hasOwnerfeedbackisnull = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional Feedback OwnerFeedback = 10;
 * @return {?proto.CoreSchema.V1.Feedback}
 */
proto.CoreSchema.V1.InvoicePayment.prototype.getOwnerfeedback = function() {
  return /** @type{?proto.CoreSchema.V1.Feedback} */ (
    jspb.Message.getWrapperField(this, proto.CoreSchema.V1.Feedback, 10));
};


/** @param {?proto.CoreSchema.V1.Feedback|undefined} value */
proto.CoreSchema.V1.InvoicePayment.prototype.setOwnerfeedback = function(value) {
  jspb.Message.setOneofWrapperField(this, 10, proto.CoreSchema.V1.InvoicePayment.oneofGroups_[1], value);
};


proto.CoreSchema.V1.InvoicePayment.prototype.clearOwnerfeedback = function() {
  this.setOwnerfeedback(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.CoreSchema.V1.InvoicePayment.prototype.hasOwnerfeedback = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * optional InvoicePaymentStatus Status = 11;
 * @return {!proto.CoreSchema.V1.InvoicePayment.InvoicePaymentStatus}
 */
proto.CoreSchema.V1.InvoicePayment.prototype.getStatus = function() {
  return /** @type {!proto.CoreSchema.V1.InvoicePayment.InvoicePaymentStatus} */ (jspb.Message.getFieldWithDefault(this, 11, 0));
};


/** @param {!proto.CoreSchema.V1.InvoicePayment.InvoicePaymentStatus} value */
proto.CoreSchema.V1.InvoicePayment.prototype.setStatus = function(value) {
  jspb.Message.setProto3EnumField(this, 11, value);
};


/**
 * optional bool DealIsNull = 12;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.CoreSchema.V1.InvoicePayment.prototype.getDealisnull = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 12, false));
};


/** @param {boolean} value */
proto.CoreSchema.V1.InvoicePayment.prototype.setDealisnull = function(value) {
  jspb.Message.setOneofField(this, 12, proto.CoreSchema.V1.InvoicePayment.oneofGroups_[2], value);
};


proto.CoreSchema.V1.InvoicePayment.prototype.clearDealisnull = function() {
  jspb.Message.setOneofField(this, 12, proto.CoreSchema.V1.InvoicePayment.oneofGroups_[2], undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.CoreSchema.V1.InvoicePayment.prototype.hasDealisnull = function() {
  return jspb.Message.getField(this, 12) != null;
};


/**
 * optional Deal Deal = 13;
 * @return {?proto.CoreSchema.V1.Deal}
 */
proto.CoreSchema.V1.InvoicePayment.prototype.getDeal = function() {
  return /** @type{?proto.CoreSchema.V1.Deal} */ (
    jspb.Message.getWrapperField(this, proto.CoreSchema.V1.Deal, 13));
};


/** @param {?proto.CoreSchema.V1.Deal|undefined} value */
proto.CoreSchema.V1.InvoicePayment.prototype.setDeal = function(value) {
  jspb.Message.setOneofWrapperField(this, 13, proto.CoreSchema.V1.InvoicePayment.oneofGroups_[2], value);
};


proto.CoreSchema.V1.InvoicePayment.prototype.clearDeal = function() {
  this.setDeal(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.CoreSchema.V1.InvoicePayment.prototype.hasDeal = function() {
  return jspb.Message.getField(this, 13) != null;
};


/**
 * optional uint32 Pieces = 14;
 * @return {number}
 */
proto.CoreSchema.V1.InvoicePayment.prototype.getPieces = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 14, 0));
};


/** @param {number} value */
proto.CoreSchema.V1.InvoicePayment.prototype.setPieces = function(value) {
  jspb.Message.setProto3IntField(this, 14, value);
};


/**
 * optional bool IsRefund = 16;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.CoreSchema.V1.InvoicePayment.prototype.getIsrefund = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 16, false));
};


/** @param {boolean} value */
proto.CoreSchema.V1.InvoicePayment.prototype.setIsrefund = function(value) {
  jspb.Message.setProto3BooleanField(this, 16, value);
};


/**
 * repeated Invoice Refunds = 17;
 * @return {!Array<!proto.CoreSchema.V1.Invoice>}
 */
proto.CoreSchema.V1.InvoicePayment.prototype.getRefundsList = function() {
  return /** @type{!Array<!proto.CoreSchema.V1.Invoice>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.CoreSchema.V1.Invoice, 17));
};


/** @param {!Array<!proto.CoreSchema.V1.Invoice>} value */
proto.CoreSchema.V1.InvoicePayment.prototype.setRefundsList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 17, value);
};


/**
 * @param {!proto.CoreSchema.V1.Invoice=} opt_value
 * @param {number=} opt_index
 * @return {!proto.CoreSchema.V1.Invoice}
 */
proto.CoreSchema.V1.InvoicePayment.prototype.addRefunds = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 17, opt_value, proto.CoreSchema.V1.Invoice, opt_index);
};


proto.CoreSchema.V1.InvoicePayment.prototype.clearRefundsList = function() {
  this.setRefundsList([]);
};


/**
 * optional uint32 Refunded = 18;
 * @return {number}
 */
proto.CoreSchema.V1.InvoicePayment.prototype.getRefunded = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 18, 0));
};


/** @param {number} value */
proto.CoreSchema.V1.InvoicePayment.prototype.setRefunded = function(value) {
  jspb.Message.setProto3IntField(this, 18, value);
};


/**
 * optional uint32 Refunding = 19;
 * @return {number}
 */
proto.CoreSchema.V1.InvoicePayment.prototype.getRefunding = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 19, 0));
};


/** @param {number} value */
proto.CoreSchema.V1.InvoicePayment.prototype.setRefunding = function(value) {
  jspb.Message.setProto3IntField(this, 19, value);
};


/**
 * optional string OddPromise = 20;
 * @return {string}
 */
proto.CoreSchema.V1.InvoicePayment.prototype.getOddpromise = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 20, ""));
};


/** @param {string} value */
proto.CoreSchema.V1.InvoicePayment.prototype.setOddpromise = function(value) {
  jspb.Message.setProto3StringField(this, 20, value);
};


/**
 * repeated InvoiceSecret Secrets = 21;
 * @return {!Array<!proto.CoreSchema.V1.InvoiceSecret>}
 */
proto.CoreSchema.V1.InvoicePayment.prototype.getSecretsList = function() {
  return /** @type{!Array<!proto.CoreSchema.V1.InvoiceSecret>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.CoreSchema.V1.InvoiceSecret, 21));
};


/** @param {!Array<!proto.CoreSchema.V1.InvoiceSecret>} value */
proto.CoreSchema.V1.InvoicePayment.prototype.setSecretsList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 21, value);
};


/**
 * @param {!proto.CoreSchema.V1.InvoiceSecret=} opt_value
 * @param {number=} opt_index
 * @return {!proto.CoreSchema.V1.InvoiceSecret}
 */
proto.CoreSchema.V1.InvoicePayment.prototype.addSecrets = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 21, opt_value, proto.CoreSchema.V1.InvoiceSecret, opt_index);
};


proto.CoreSchema.V1.InvoicePayment.prototype.clearSecretsList = function() {
  this.setSecretsList([]);
};


/**
 * optional string LNInvoice = 22;
 * @return {string}
 */
proto.CoreSchema.V1.InvoicePayment.prototype.getLninvoice = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 22, ""));
};


/** @param {string} value */
proto.CoreSchema.V1.InvoicePayment.prototype.setLninvoice = function(value) {
  jspb.Message.setProto3StringField(this, 22, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.CoreSchema.V1.GetInvoicePaymentsRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.CoreSchema.V1.GetInvoicePaymentsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.CoreSchema.V1.GetInvoicePaymentsRequest.displayName = 'proto.CoreSchema.V1.GetInvoicePaymentsRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.CoreSchema.V1.GetInvoicePaymentsRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.CoreSchema.V1.GetInvoicePaymentsRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.CoreSchema.V1.GetInvoicePaymentsRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.CoreSchema.V1.GetInvoicePaymentsRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    paymentid: jspb.Message.getFieldWithDefault(msg, 1, 0),
    istome: jspb.Message.getFieldWithDefault(msg, 2, false),
    istomehasvalue: jspb.Message.getFieldWithDefault(msg, 3, false),
    lastid: jspb.Message.getFieldWithDefault(msg, 4, 0),
    count: jspb.Message.getFieldWithDefault(msg, 5, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.CoreSchema.V1.GetInvoicePaymentsRequest}
 */
proto.CoreSchema.V1.GetInvoicePaymentsRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.CoreSchema.V1.GetInvoicePaymentsRequest;
  return proto.CoreSchema.V1.GetInvoicePaymentsRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.CoreSchema.V1.GetInvoicePaymentsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.CoreSchema.V1.GetInvoicePaymentsRequest}
 */
proto.CoreSchema.V1.GetInvoicePaymentsRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setPaymentid(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIstome(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIstomehasvalue(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setLastid(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setCount(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.CoreSchema.V1.GetInvoicePaymentsRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.CoreSchema.V1.GetInvoicePaymentsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.CoreSchema.V1.GetInvoicePaymentsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.CoreSchema.V1.GetInvoicePaymentsRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPaymentid();
  if (f !== 0) {
    writer.writeUint64(
      1,
      f
    );
  }
  f = message.getIstome();
  if (f) {
    writer.writeBool(
      2,
      f
    );
  }
  f = message.getIstomehasvalue();
  if (f) {
    writer.writeBool(
      3,
      f
    );
  }
  f = message.getLastid();
  if (f !== 0) {
    writer.writeUint64(
      4,
      f
    );
  }
  f = message.getCount();
  if (f !== 0) {
    writer.writeUint32(
      5,
      f
    );
  }
};


/**
 * optional uint64 PaymentId = 1;
 * @return {number}
 */
proto.CoreSchema.V1.GetInvoicePaymentsRequest.prototype.getPaymentid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.CoreSchema.V1.GetInvoicePaymentsRequest.prototype.setPaymentid = function(value) {
  jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional bool IsToMe = 2;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.CoreSchema.V1.GetInvoicePaymentsRequest.prototype.getIstome = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 2, false));
};


/** @param {boolean} value */
proto.CoreSchema.V1.GetInvoicePaymentsRequest.prototype.setIstome = function(value) {
  jspb.Message.setProto3BooleanField(this, 2, value);
};


/**
 * optional bool IsToMeHasValue = 3;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.CoreSchema.V1.GetInvoicePaymentsRequest.prototype.getIstomehasvalue = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 3, false));
};


/** @param {boolean} value */
proto.CoreSchema.V1.GetInvoicePaymentsRequest.prototype.setIstomehasvalue = function(value) {
  jspb.Message.setProto3BooleanField(this, 3, value);
};


/**
 * optional uint64 LastId = 4;
 * @return {number}
 */
proto.CoreSchema.V1.GetInvoicePaymentsRequest.prototype.getLastid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/** @param {number} value */
proto.CoreSchema.V1.GetInvoicePaymentsRequest.prototype.setLastid = function(value) {
  jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional uint32 Count = 5;
 * @return {number}
 */
proto.CoreSchema.V1.GetInvoicePaymentsRequest.prototype.getCount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/** @param {number} value */
proto.CoreSchema.V1.GetInvoicePaymentsRequest.prototype.setCount = function(value) {
  jspb.Message.setProto3IntField(this, 5, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.CoreSchema.V1.GetInvoicePaymentsResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.CoreSchema.V1.GetInvoicePaymentsResponse.repeatedFields_, null);
};
goog.inherits(proto.CoreSchema.V1.GetInvoicePaymentsResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.CoreSchema.V1.GetInvoicePaymentsResponse.displayName = 'proto.CoreSchema.V1.GetInvoicePaymentsResponse';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.CoreSchema.V1.GetInvoicePaymentsResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.CoreSchema.V1.GetInvoicePaymentsResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.CoreSchema.V1.GetInvoicePaymentsResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.CoreSchema.V1.GetInvoicePaymentsResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.CoreSchema.V1.GetInvoicePaymentsResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    paymentsList: jspb.Message.toObjectList(msg.getPaymentsList(),
    proto.CoreSchema.V1.InvoicePayment.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.CoreSchema.V1.GetInvoicePaymentsResponse}
 */
proto.CoreSchema.V1.GetInvoicePaymentsResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.CoreSchema.V1.GetInvoicePaymentsResponse;
  return proto.CoreSchema.V1.GetInvoicePaymentsResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.CoreSchema.V1.GetInvoicePaymentsResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.CoreSchema.V1.GetInvoicePaymentsResponse}
 */
proto.CoreSchema.V1.GetInvoicePaymentsResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.CoreSchema.V1.InvoicePayment;
      reader.readMessage(value,proto.CoreSchema.V1.InvoicePayment.deserializeBinaryFromReader);
      msg.addPayments(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.CoreSchema.V1.GetInvoicePaymentsResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.CoreSchema.V1.GetInvoicePaymentsResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.CoreSchema.V1.GetInvoicePaymentsResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.CoreSchema.V1.GetInvoicePaymentsResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPaymentsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.CoreSchema.V1.InvoicePayment.serializeBinaryToWriter
    );
  }
};


/**
 * repeated InvoicePayment Payments = 1;
 * @return {!Array<!proto.CoreSchema.V1.InvoicePayment>}
 */
proto.CoreSchema.V1.GetInvoicePaymentsResponse.prototype.getPaymentsList = function() {
  return /** @type{!Array<!proto.CoreSchema.V1.InvoicePayment>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.CoreSchema.V1.InvoicePayment, 1));
};


/** @param {!Array<!proto.CoreSchema.V1.InvoicePayment>} value */
proto.CoreSchema.V1.GetInvoicePaymentsResponse.prototype.setPaymentsList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.CoreSchema.V1.InvoicePayment=} opt_value
 * @param {number=} opt_index
 * @return {!proto.CoreSchema.V1.InvoicePayment}
 */
proto.CoreSchema.V1.GetInvoicePaymentsResponse.prototype.addPayments = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.CoreSchema.V1.InvoicePayment, opt_index);
};


proto.CoreSchema.V1.GetInvoicePaymentsResponse.prototype.clearPaymentsList = function() {
  this.setPaymentsList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.CoreSchema.V1.LastAdSearchParams = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.CoreSchema.V1.LastAdSearchParams, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.CoreSchema.V1.LastAdSearchParams.displayName = 'proto.CoreSchema.V1.LastAdSearchParams';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.CoreSchema.V1.LastAdSearchParams.prototype.toObject = function(opt_includeInstance) {
  return proto.CoreSchema.V1.LastAdSearchParams.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.CoreSchema.V1.LastAdSearchParams} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.CoreSchema.V1.LastAdSearchParams.toObject = function(includeInstance, msg) {
  var f, obj = {
    country: jspb.Message.getFieldWithDefault(msg, 1, ""),
    currency: jspb.Message.getFieldWithDefault(msg, 2, ""),
    paymenttype: jspb.Message.getFieldWithDefault(msg, 3, ""),
    amount: (f = msg.getAmount()) && proto.CoreSchema.V1.Decimal.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.CoreSchema.V1.LastAdSearchParams}
 */
proto.CoreSchema.V1.LastAdSearchParams.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.CoreSchema.V1.LastAdSearchParams;
  return proto.CoreSchema.V1.LastAdSearchParams.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.CoreSchema.V1.LastAdSearchParams} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.CoreSchema.V1.LastAdSearchParams}
 */
proto.CoreSchema.V1.LastAdSearchParams.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setCountry(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setCurrency(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setPaymenttype(value);
      break;
    case 4:
      var value = new proto.CoreSchema.V1.Decimal;
      reader.readMessage(value,proto.CoreSchema.V1.Decimal.deserializeBinaryFromReader);
      msg.setAmount(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.CoreSchema.V1.LastAdSearchParams.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.CoreSchema.V1.LastAdSearchParams.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.CoreSchema.V1.LastAdSearchParams} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.CoreSchema.V1.LastAdSearchParams.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCountry();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getCurrency();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getPaymenttype();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getAmount();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.CoreSchema.V1.Decimal.serializeBinaryToWriter
    );
  }
};


/**
 * optional string Country = 1;
 * @return {string}
 */
proto.CoreSchema.V1.LastAdSearchParams.prototype.getCountry = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.CoreSchema.V1.LastAdSearchParams.prototype.setCountry = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string Currency = 2;
 * @return {string}
 */
proto.CoreSchema.V1.LastAdSearchParams.prototype.getCurrency = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.CoreSchema.V1.LastAdSearchParams.prototype.setCurrency = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string PaymentType = 3;
 * @return {string}
 */
proto.CoreSchema.V1.LastAdSearchParams.prototype.getPaymenttype = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.CoreSchema.V1.LastAdSearchParams.prototype.setPaymenttype = function(value) {
  jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional Decimal Amount = 4;
 * @return {?proto.CoreSchema.V1.Decimal}
 */
proto.CoreSchema.V1.LastAdSearchParams.prototype.getAmount = function() {
  return /** @type{?proto.CoreSchema.V1.Decimal} */ (
    jspb.Message.getWrapperField(this, proto.CoreSchema.V1.Decimal, 4));
};


/** @param {?proto.CoreSchema.V1.Decimal|undefined} value */
proto.CoreSchema.V1.LastAdSearchParams.prototype.setAmount = function(value) {
  jspb.Message.setWrapperField(this, 4, value);
};


proto.CoreSchema.V1.LastAdSearchParams.prototype.clearAmount = function() {
  this.setAmount(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.CoreSchema.V1.LastAdSearchParams.prototype.hasAmount = function() {
  return jspb.Message.getField(this, 4) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.CoreSchema.V1.GetLastAdSearchParamsResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.CoreSchema.V1.GetLastAdSearchParamsResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.CoreSchema.V1.GetLastAdSearchParamsResponse.displayName = 'proto.CoreSchema.V1.GetLastAdSearchParamsResponse';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.CoreSchema.V1.GetLastAdSearchParamsResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.CoreSchema.V1.GetLastAdSearchParamsResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.CoreSchema.V1.GetLastAdSearchParamsResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.CoreSchema.V1.GetLastAdSearchParamsResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    lastbuysearchhasvalue: jspb.Message.getFieldWithDefault(msg, 1, false),
    lastsellsearchhasvalue: jspb.Message.getFieldWithDefault(msg, 2, false),
    lastbuysearch: (f = msg.getLastbuysearch()) && proto.CoreSchema.V1.LastAdSearchParams.toObject(includeInstance, f),
    lastsellsearch: (f = msg.getLastsellsearch()) && proto.CoreSchema.V1.LastAdSearchParams.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.CoreSchema.V1.GetLastAdSearchParamsResponse}
 */
proto.CoreSchema.V1.GetLastAdSearchParamsResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.CoreSchema.V1.GetLastAdSearchParamsResponse;
  return proto.CoreSchema.V1.GetLastAdSearchParamsResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.CoreSchema.V1.GetLastAdSearchParamsResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.CoreSchema.V1.GetLastAdSearchParamsResponse}
 */
proto.CoreSchema.V1.GetLastAdSearchParamsResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setLastbuysearchhasvalue(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setLastsellsearchhasvalue(value);
      break;
    case 3:
      var value = new proto.CoreSchema.V1.LastAdSearchParams;
      reader.readMessage(value,proto.CoreSchema.V1.LastAdSearchParams.deserializeBinaryFromReader);
      msg.setLastbuysearch(value);
      break;
    case 4:
      var value = new proto.CoreSchema.V1.LastAdSearchParams;
      reader.readMessage(value,proto.CoreSchema.V1.LastAdSearchParams.deserializeBinaryFromReader);
      msg.setLastsellsearch(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.CoreSchema.V1.GetLastAdSearchParamsResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.CoreSchema.V1.GetLastAdSearchParamsResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.CoreSchema.V1.GetLastAdSearchParamsResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.CoreSchema.V1.GetLastAdSearchParamsResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getLastbuysearchhasvalue();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
  f = message.getLastsellsearchhasvalue();
  if (f) {
    writer.writeBool(
      2,
      f
    );
  }
  f = message.getLastbuysearch();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.CoreSchema.V1.LastAdSearchParams.serializeBinaryToWriter
    );
  }
  f = message.getLastsellsearch();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.CoreSchema.V1.LastAdSearchParams.serializeBinaryToWriter
    );
  }
};


/**
 * optional bool LastBuySearchHasValue = 1;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.CoreSchema.V1.GetLastAdSearchParamsResponse.prototype.getLastbuysearchhasvalue = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 1, false));
};


/** @param {boolean} value */
proto.CoreSchema.V1.GetLastAdSearchParamsResponse.prototype.setLastbuysearchhasvalue = function(value) {
  jspb.Message.setProto3BooleanField(this, 1, value);
};


/**
 * optional bool LastSellSearchHasValue = 2;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.CoreSchema.V1.GetLastAdSearchParamsResponse.prototype.getLastsellsearchhasvalue = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 2, false));
};


/** @param {boolean} value */
proto.CoreSchema.V1.GetLastAdSearchParamsResponse.prototype.setLastsellsearchhasvalue = function(value) {
  jspb.Message.setProto3BooleanField(this, 2, value);
};


/**
 * optional LastAdSearchParams LastBuySearch = 3;
 * @return {?proto.CoreSchema.V1.LastAdSearchParams}
 */
proto.CoreSchema.V1.GetLastAdSearchParamsResponse.prototype.getLastbuysearch = function() {
  return /** @type{?proto.CoreSchema.V1.LastAdSearchParams} */ (
    jspb.Message.getWrapperField(this, proto.CoreSchema.V1.LastAdSearchParams, 3));
};


/** @param {?proto.CoreSchema.V1.LastAdSearchParams|undefined} value */
proto.CoreSchema.V1.GetLastAdSearchParamsResponse.prototype.setLastbuysearch = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


proto.CoreSchema.V1.GetLastAdSearchParamsResponse.prototype.clearLastbuysearch = function() {
  this.setLastbuysearch(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.CoreSchema.V1.GetLastAdSearchParamsResponse.prototype.hasLastbuysearch = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional LastAdSearchParams LastSellSearch = 4;
 * @return {?proto.CoreSchema.V1.LastAdSearchParams}
 */
proto.CoreSchema.V1.GetLastAdSearchParamsResponse.prototype.getLastsellsearch = function() {
  return /** @type{?proto.CoreSchema.V1.LastAdSearchParams} */ (
    jspb.Message.getWrapperField(this, proto.CoreSchema.V1.LastAdSearchParams, 4));
};


/** @param {?proto.CoreSchema.V1.LastAdSearchParams|undefined} value */
proto.CoreSchema.V1.GetLastAdSearchParamsResponse.prototype.setLastsellsearch = function(value) {
  jspb.Message.setWrapperField(this, 4, value);
};


proto.CoreSchema.V1.GetLastAdSearchParamsResponse.prototype.clearLastsellsearch = function() {
  this.setLastsellsearch(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.CoreSchema.V1.GetLastAdSearchParamsResponse.prototype.hasLastsellsearch = function() {
  return jspb.Message.getField(this, 4) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.CoreSchema.V1.SendInvoicePaymentFeedbackRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.CoreSchema.V1.SendInvoicePaymentFeedbackRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.CoreSchema.V1.SendInvoicePaymentFeedbackRequest.displayName = 'proto.CoreSchema.V1.SendInvoicePaymentFeedbackRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.CoreSchema.V1.SendInvoicePaymentFeedbackRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.CoreSchema.V1.SendInvoicePaymentFeedbackRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.CoreSchema.V1.SendInvoicePaymentFeedbackRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.CoreSchema.V1.SendInvoicePaymentFeedbackRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    paymentid: jspb.Message.getFieldWithDefault(msg, 1, 0),
    feedback: (f = msg.getFeedback()) && proto.CoreSchema.V1.Feedback.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.CoreSchema.V1.SendInvoicePaymentFeedbackRequest}
 */
proto.CoreSchema.V1.SendInvoicePaymentFeedbackRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.CoreSchema.V1.SendInvoicePaymentFeedbackRequest;
  return proto.CoreSchema.V1.SendInvoicePaymentFeedbackRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.CoreSchema.V1.SendInvoicePaymentFeedbackRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.CoreSchema.V1.SendInvoicePaymentFeedbackRequest}
 */
proto.CoreSchema.V1.SendInvoicePaymentFeedbackRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setPaymentid(value);
      break;
    case 2:
      var value = new proto.CoreSchema.V1.Feedback;
      reader.readMessage(value,proto.CoreSchema.V1.Feedback.deserializeBinaryFromReader);
      msg.setFeedback(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.CoreSchema.V1.SendInvoicePaymentFeedbackRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.CoreSchema.V1.SendInvoicePaymentFeedbackRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.CoreSchema.V1.SendInvoicePaymentFeedbackRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.CoreSchema.V1.SendInvoicePaymentFeedbackRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPaymentid();
  if (f !== 0) {
    writer.writeUint64(
      1,
      f
    );
  }
  f = message.getFeedback();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.CoreSchema.V1.Feedback.serializeBinaryToWriter
    );
  }
};


/**
 * optional uint64 PaymentId = 1;
 * @return {number}
 */
proto.CoreSchema.V1.SendInvoicePaymentFeedbackRequest.prototype.getPaymentid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.CoreSchema.V1.SendInvoicePaymentFeedbackRequest.prototype.setPaymentid = function(value) {
  jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional Feedback Feedback = 2;
 * @return {?proto.CoreSchema.V1.Feedback}
 */
proto.CoreSchema.V1.SendInvoicePaymentFeedbackRequest.prototype.getFeedback = function() {
  return /** @type{?proto.CoreSchema.V1.Feedback} */ (
    jspb.Message.getWrapperField(this, proto.CoreSchema.V1.Feedback, 2));
};


/** @param {?proto.CoreSchema.V1.Feedback|undefined} value */
proto.CoreSchema.V1.SendInvoicePaymentFeedbackRequest.prototype.setFeedback = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.CoreSchema.V1.SendInvoicePaymentFeedbackRequest.prototype.clearFeedback = function() {
  this.setFeedback(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.CoreSchema.V1.SendInvoicePaymentFeedbackRequest.prototype.hasFeedback = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.CoreSchema.V1.PayInvoiceByBestDealRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.CoreSchema.V1.PayInvoiceByBestDealRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.CoreSchema.V1.PayInvoiceByBestDealRequest.displayName = 'proto.CoreSchema.V1.PayInvoiceByBestDealRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.CoreSchema.V1.PayInvoiceByBestDealRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.CoreSchema.V1.PayInvoiceByBestDealRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.CoreSchema.V1.PayInvoiceByBestDealRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.CoreSchema.V1.PayInvoiceByBestDealRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    country: jspb.Message.getFieldWithDefault(msg, 1, ""),
    currency: jspb.Message.getFieldWithDefault(msg, 2, ""),
    paymenttype: jspb.Message.getFieldWithDefault(msg, 3, ""),
    invoiceid: jspb.Message.getFieldWithDefault(msg, 4, 0),
    pieces: jspb.Message.getFieldWithDefault(msg, 5, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.CoreSchema.V1.PayInvoiceByBestDealRequest}
 */
proto.CoreSchema.V1.PayInvoiceByBestDealRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.CoreSchema.V1.PayInvoiceByBestDealRequest;
  return proto.CoreSchema.V1.PayInvoiceByBestDealRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.CoreSchema.V1.PayInvoiceByBestDealRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.CoreSchema.V1.PayInvoiceByBestDealRequest}
 */
proto.CoreSchema.V1.PayInvoiceByBestDealRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setCountry(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setCurrency(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setPaymenttype(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setInvoiceid(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setPieces(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.CoreSchema.V1.PayInvoiceByBestDealRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.CoreSchema.V1.PayInvoiceByBestDealRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.CoreSchema.V1.PayInvoiceByBestDealRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.CoreSchema.V1.PayInvoiceByBestDealRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCountry();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getCurrency();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getPaymenttype();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getInvoiceid();
  if (f !== 0) {
    writer.writeUint64(
      4,
      f
    );
  }
  f = message.getPieces();
  if (f !== 0) {
    writer.writeUint32(
      5,
      f
    );
  }
};


/**
 * optional string Country = 1;
 * @return {string}
 */
proto.CoreSchema.V1.PayInvoiceByBestDealRequest.prototype.getCountry = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.CoreSchema.V1.PayInvoiceByBestDealRequest.prototype.setCountry = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string Currency = 2;
 * @return {string}
 */
proto.CoreSchema.V1.PayInvoiceByBestDealRequest.prototype.getCurrency = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.CoreSchema.V1.PayInvoiceByBestDealRequest.prototype.setCurrency = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string PaymentType = 3;
 * @return {string}
 */
proto.CoreSchema.V1.PayInvoiceByBestDealRequest.prototype.getPaymenttype = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.CoreSchema.V1.PayInvoiceByBestDealRequest.prototype.setPaymenttype = function(value) {
  jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional uint64 InvoiceId = 4;
 * @return {number}
 */
proto.CoreSchema.V1.PayInvoiceByBestDealRequest.prototype.getInvoiceid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/** @param {number} value */
proto.CoreSchema.V1.PayInvoiceByBestDealRequest.prototype.setInvoiceid = function(value) {
  jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional uint32 Pieces = 5;
 * @return {number}
 */
proto.CoreSchema.V1.PayInvoiceByBestDealRequest.prototype.getPieces = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/** @param {number} value */
proto.CoreSchema.V1.PayInvoiceByBestDealRequest.prototype.setPieces = function(value) {
  jspb.Message.setProto3IntField(this, 5, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.CoreSchema.V1.GetInvoiceSuitableAdvertisementsRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.CoreSchema.V1.GetInvoiceSuitableAdvertisementsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.CoreSchema.V1.GetInvoiceSuitableAdvertisementsRequest.displayName = 'proto.CoreSchema.V1.GetInvoiceSuitableAdvertisementsRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.CoreSchema.V1.GetInvoiceSuitableAdvertisementsRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.CoreSchema.V1.GetInvoiceSuitableAdvertisementsRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.CoreSchema.V1.GetInvoiceSuitableAdvertisementsRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.CoreSchema.V1.GetInvoiceSuitableAdvertisementsRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    country: jspb.Message.getFieldWithDefault(msg, 1, ""),
    currency: jspb.Message.getFieldWithDefault(msg, 2, ""),
    paymenttype: jspb.Message.getFieldWithDefault(msg, 3, ""),
    invoiceid: jspb.Message.getFieldWithDefault(msg, 4, 0),
    pieces: jspb.Message.getFieldWithDefault(msg, 5, 0),
    skip: jspb.Message.getFieldWithDefault(msg, 6, 0),
    count: jspb.Message.getFieldWithDefault(msg, 7, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.CoreSchema.V1.GetInvoiceSuitableAdvertisementsRequest}
 */
proto.CoreSchema.V1.GetInvoiceSuitableAdvertisementsRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.CoreSchema.V1.GetInvoiceSuitableAdvertisementsRequest;
  return proto.CoreSchema.V1.GetInvoiceSuitableAdvertisementsRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.CoreSchema.V1.GetInvoiceSuitableAdvertisementsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.CoreSchema.V1.GetInvoiceSuitableAdvertisementsRequest}
 */
proto.CoreSchema.V1.GetInvoiceSuitableAdvertisementsRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setCountry(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setCurrency(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setPaymenttype(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setInvoiceid(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setPieces(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setSkip(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setCount(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.CoreSchema.V1.GetInvoiceSuitableAdvertisementsRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.CoreSchema.V1.GetInvoiceSuitableAdvertisementsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.CoreSchema.V1.GetInvoiceSuitableAdvertisementsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.CoreSchema.V1.GetInvoiceSuitableAdvertisementsRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCountry();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getCurrency();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getPaymenttype();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getInvoiceid();
  if (f !== 0) {
    writer.writeUint64(
      4,
      f
    );
  }
  f = message.getPieces();
  if (f !== 0) {
    writer.writeUint32(
      5,
      f
    );
  }
  f = message.getSkip();
  if (f !== 0) {
    writer.writeUint32(
      6,
      f
    );
  }
  f = message.getCount();
  if (f !== 0) {
    writer.writeUint32(
      7,
      f
    );
  }
};


/**
 * optional string Country = 1;
 * @return {string}
 */
proto.CoreSchema.V1.GetInvoiceSuitableAdvertisementsRequest.prototype.getCountry = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.CoreSchema.V1.GetInvoiceSuitableAdvertisementsRequest.prototype.setCountry = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string Currency = 2;
 * @return {string}
 */
proto.CoreSchema.V1.GetInvoiceSuitableAdvertisementsRequest.prototype.getCurrency = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.CoreSchema.V1.GetInvoiceSuitableAdvertisementsRequest.prototype.setCurrency = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string PaymentType = 3;
 * @return {string}
 */
proto.CoreSchema.V1.GetInvoiceSuitableAdvertisementsRequest.prototype.getPaymenttype = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.CoreSchema.V1.GetInvoiceSuitableAdvertisementsRequest.prototype.setPaymenttype = function(value) {
  jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional uint64 InvoiceId = 4;
 * @return {number}
 */
proto.CoreSchema.V1.GetInvoiceSuitableAdvertisementsRequest.prototype.getInvoiceid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/** @param {number} value */
proto.CoreSchema.V1.GetInvoiceSuitableAdvertisementsRequest.prototype.setInvoiceid = function(value) {
  jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional uint32 Pieces = 5;
 * @return {number}
 */
proto.CoreSchema.V1.GetInvoiceSuitableAdvertisementsRequest.prototype.getPieces = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/** @param {number} value */
proto.CoreSchema.V1.GetInvoiceSuitableAdvertisementsRequest.prototype.setPieces = function(value) {
  jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional uint32 Skip = 6;
 * @return {number}
 */
proto.CoreSchema.V1.GetInvoiceSuitableAdvertisementsRequest.prototype.getSkip = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/** @param {number} value */
proto.CoreSchema.V1.GetInvoiceSuitableAdvertisementsRequest.prototype.setSkip = function(value) {
  jspb.Message.setProto3IntField(this, 6, value);
};


/**
 * optional uint32 Count = 7;
 * @return {number}
 */
proto.CoreSchema.V1.GetInvoiceSuitableAdvertisementsRequest.prototype.getCount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/** @param {number} value */
proto.CoreSchema.V1.GetInvoiceSuitableAdvertisementsRequest.prototype.setCount = function(value) {
  jspb.Message.setProto3IntField(this, 7, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.CoreSchema.V1.GetInvoiceSuitableAdvertisementResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.CoreSchema.V1.GetInvoiceSuitableAdvertisementResponse.repeatedFields_, null);
};
goog.inherits(proto.CoreSchema.V1.GetInvoiceSuitableAdvertisementResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.CoreSchema.V1.GetInvoiceSuitableAdvertisementResponse.displayName = 'proto.CoreSchema.V1.GetInvoiceSuitableAdvertisementResponse';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.CoreSchema.V1.GetInvoiceSuitableAdvertisementResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.CoreSchema.V1.GetInvoiceSuitableAdvertisementResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.CoreSchema.V1.GetInvoiceSuitableAdvertisementResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.CoreSchema.V1.GetInvoiceSuitableAdvertisementResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.CoreSchema.V1.GetInvoiceSuitableAdvertisementResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    advertisementsList: jspb.Message.toObjectList(msg.getAdvertisementsList(),
    proto.CoreSchema.V1.Advertisement.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.CoreSchema.V1.GetInvoiceSuitableAdvertisementResponse}
 */
proto.CoreSchema.V1.GetInvoiceSuitableAdvertisementResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.CoreSchema.V1.GetInvoiceSuitableAdvertisementResponse;
  return proto.CoreSchema.V1.GetInvoiceSuitableAdvertisementResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.CoreSchema.V1.GetInvoiceSuitableAdvertisementResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.CoreSchema.V1.GetInvoiceSuitableAdvertisementResponse}
 */
proto.CoreSchema.V1.GetInvoiceSuitableAdvertisementResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.CoreSchema.V1.Advertisement;
      reader.readMessage(value,proto.CoreSchema.V1.Advertisement.deserializeBinaryFromReader);
      msg.addAdvertisements(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.CoreSchema.V1.GetInvoiceSuitableAdvertisementResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.CoreSchema.V1.GetInvoiceSuitableAdvertisementResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.CoreSchema.V1.GetInvoiceSuitableAdvertisementResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.CoreSchema.V1.GetInvoiceSuitableAdvertisementResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAdvertisementsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.CoreSchema.V1.Advertisement.serializeBinaryToWriter
    );
  }
};


/**
 * repeated Advertisement Advertisements = 1;
 * @return {!Array<!proto.CoreSchema.V1.Advertisement>}
 */
proto.CoreSchema.V1.GetInvoiceSuitableAdvertisementResponse.prototype.getAdvertisementsList = function() {
  return /** @type{!Array<!proto.CoreSchema.V1.Advertisement>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.CoreSchema.V1.Advertisement, 1));
};


/** @param {!Array<!proto.CoreSchema.V1.Advertisement>} value */
proto.CoreSchema.V1.GetInvoiceSuitableAdvertisementResponse.prototype.setAdvertisementsList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.CoreSchema.V1.Advertisement=} opt_value
 * @param {number=} opt_index
 * @return {!proto.CoreSchema.V1.Advertisement}
 */
proto.CoreSchema.V1.GetInvoiceSuitableAdvertisementResponse.prototype.addAdvertisements = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.CoreSchema.V1.Advertisement, opt_index);
};


proto.CoreSchema.V1.GetInvoiceSuitableAdvertisementResponse.prototype.clearAdvertisementsList = function() {
  this.setAdvertisementsList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.CoreSchema.V1.PayInvoiceByDealRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.CoreSchema.V1.PayInvoiceByDealRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.CoreSchema.V1.PayInvoiceByDealRequest.displayName = 'proto.CoreSchema.V1.PayInvoiceByDealRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.CoreSchema.V1.PayInvoiceByDealRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.CoreSchema.V1.PayInvoiceByDealRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.CoreSchema.V1.PayInvoiceByDealRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.CoreSchema.V1.PayInvoiceByDealRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    invoiceid: jspb.Message.getFieldWithDefault(msg, 1, 0),
    pieces: jspb.Message.getFieldWithDefault(msg, 2, 0),
    advertisementid: jspb.Message.getFieldWithDefault(msg, 3, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.CoreSchema.V1.PayInvoiceByDealRequest}
 */
proto.CoreSchema.V1.PayInvoiceByDealRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.CoreSchema.V1.PayInvoiceByDealRequest;
  return proto.CoreSchema.V1.PayInvoiceByDealRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.CoreSchema.V1.PayInvoiceByDealRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.CoreSchema.V1.PayInvoiceByDealRequest}
 */
proto.CoreSchema.V1.PayInvoiceByDealRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setInvoiceid(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setPieces(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setAdvertisementid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.CoreSchema.V1.PayInvoiceByDealRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.CoreSchema.V1.PayInvoiceByDealRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.CoreSchema.V1.PayInvoiceByDealRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.CoreSchema.V1.PayInvoiceByDealRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getInvoiceid();
  if (f !== 0) {
    writer.writeUint64(
      1,
      f
    );
  }
  f = message.getPieces();
  if (f !== 0) {
    writer.writeUint32(
      2,
      f
    );
  }
  f = message.getAdvertisementid();
  if (f !== 0) {
    writer.writeUint64(
      3,
      f
    );
  }
};


/**
 * optional uint64 InvoiceId = 1;
 * @return {number}
 */
proto.CoreSchema.V1.PayInvoiceByDealRequest.prototype.getInvoiceid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.CoreSchema.V1.PayInvoiceByDealRequest.prototype.setInvoiceid = function(value) {
  jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional uint32 Pieces = 2;
 * @return {number}
 */
proto.CoreSchema.V1.PayInvoiceByDealRequest.prototype.getPieces = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.CoreSchema.V1.PayInvoiceByDealRequest.prototype.setPieces = function(value) {
  jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional uint64 AdvertisementId = 3;
 * @return {number}
 */
proto.CoreSchema.V1.PayInvoiceByDealRequest.prototype.getAdvertisementid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/** @param {number} value */
proto.CoreSchema.V1.PayInvoiceByDealRequest.prototype.setAdvertisementid = function(value) {
  jspb.Message.setProto3IntField(this, 3, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.CoreSchema.V1.CancelInvoicePaymentRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.CoreSchema.V1.CancelInvoicePaymentRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.CoreSchema.V1.CancelInvoicePaymentRequest.displayName = 'proto.CoreSchema.V1.CancelInvoicePaymentRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.CoreSchema.V1.CancelInvoicePaymentRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.CoreSchema.V1.CancelInvoicePaymentRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.CoreSchema.V1.CancelInvoicePaymentRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.CoreSchema.V1.CancelInvoicePaymentRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    paymentid: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.CoreSchema.V1.CancelInvoicePaymentRequest}
 */
proto.CoreSchema.V1.CancelInvoicePaymentRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.CoreSchema.V1.CancelInvoicePaymentRequest;
  return proto.CoreSchema.V1.CancelInvoicePaymentRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.CoreSchema.V1.CancelInvoicePaymentRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.CoreSchema.V1.CancelInvoicePaymentRequest}
 */
proto.CoreSchema.V1.CancelInvoicePaymentRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setPaymentid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.CoreSchema.V1.CancelInvoicePaymentRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.CoreSchema.V1.CancelInvoicePaymentRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.CoreSchema.V1.CancelInvoicePaymentRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.CoreSchema.V1.CancelInvoicePaymentRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPaymentid();
  if (f !== 0) {
    writer.writeUint64(
      1,
      f
    );
  }
};


/**
 * optional uint64 PaymentId = 1;
 * @return {number}
 */
proto.CoreSchema.V1.CancelInvoicePaymentRequest.prototype.getPaymentid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.CoreSchema.V1.CancelInvoicePaymentRequest.prototype.setPaymentid = function(value) {
  jspb.Message.setProto3IntField(this, 1, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.CoreSchema.V1.ConversationMessage = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.CoreSchema.V1.ConversationMessage.repeatedFields_, null);
};
goog.inherits(proto.CoreSchema.V1.ConversationMessage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.CoreSchema.V1.ConversationMessage.displayName = 'proto.CoreSchema.V1.ConversationMessage';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.CoreSchema.V1.ConversationMessage.repeatedFields_ = [5];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.CoreSchema.V1.ConversationMessage.prototype.toObject = function(opt_includeInstance) {
  return proto.CoreSchema.V1.ConversationMessage.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.CoreSchema.V1.ConversationMessage} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.CoreSchema.V1.ConversationMessage.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0),
    ownerid: jspb.Message.getFieldWithDefault(msg, 2, ""),
    text: jspb.Message.getFieldWithDefault(msg, 3, ""),
    createdat: (f = msg.getCreatedat()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    imagesList: jspb.Message.getRepeatedField(msg, 5)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.CoreSchema.V1.ConversationMessage}
 */
proto.CoreSchema.V1.ConversationMessage.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.CoreSchema.V1.ConversationMessage;
  return proto.CoreSchema.V1.ConversationMessage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.CoreSchema.V1.ConversationMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.CoreSchema.V1.ConversationMessage}
 */
proto.CoreSchema.V1.ConversationMessage.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setOwnerid(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setText(value);
      break;
    case 4:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setCreatedat(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.addImages(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.CoreSchema.V1.ConversationMessage.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.CoreSchema.V1.ConversationMessage.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.CoreSchema.V1.ConversationMessage} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.CoreSchema.V1.ConversationMessage.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeUint64(
      1,
      f
    );
  }
  f = message.getOwnerid();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getText();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getCreatedat();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getImagesList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      5,
      f
    );
  }
};


/**
 * optional uint64 Id = 1;
 * @return {number}
 */
proto.CoreSchema.V1.ConversationMessage.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.CoreSchema.V1.ConversationMessage.prototype.setId = function(value) {
  jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string OwnerId = 2;
 * @return {string}
 */
proto.CoreSchema.V1.ConversationMessage.prototype.getOwnerid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.CoreSchema.V1.ConversationMessage.prototype.setOwnerid = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string Text = 3;
 * @return {string}
 */
proto.CoreSchema.V1.ConversationMessage.prototype.getText = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.CoreSchema.V1.ConversationMessage.prototype.setText = function(value) {
  jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional google.protobuf.Timestamp CreatedAt = 4;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.CoreSchema.V1.ConversationMessage.prototype.getCreatedat = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 4));
};


/** @param {?proto.google.protobuf.Timestamp|undefined} value */
proto.CoreSchema.V1.ConversationMessage.prototype.setCreatedat = function(value) {
  jspb.Message.setWrapperField(this, 4, value);
};


proto.CoreSchema.V1.ConversationMessage.prototype.clearCreatedat = function() {
  this.setCreatedat(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.CoreSchema.V1.ConversationMessage.prototype.hasCreatedat = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * repeated string Images = 5;
 * @return {!Array<string>}
 */
proto.CoreSchema.V1.ConversationMessage.prototype.getImagesList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 5));
};


/** @param {!Array<string>} value */
proto.CoreSchema.V1.ConversationMessage.prototype.setImagesList = function(value) {
  jspb.Message.setField(this, 5, value || []);
};


/**
 * @param {!string} value
 * @param {number=} opt_index
 */
proto.CoreSchema.V1.ConversationMessage.prototype.addImages = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 5, value, opt_index);
};


proto.CoreSchema.V1.ConversationMessage.prototype.clearImagesList = function() {
  this.setImagesList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.CoreSchema.V1.Conversation = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.CoreSchema.V1.Conversation.repeatedFields_, proto.CoreSchema.V1.Conversation.oneofGroups_);
};
goog.inherits(proto.CoreSchema.V1.Conversation, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.CoreSchema.V1.Conversation.displayName = 'proto.CoreSchema.V1.Conversation';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.CoreSchema.V1.Conversation.repeatedFields_ = [6];

/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.CoreSchema.V1.Conversation.oneofGroups_ = [[4,5]];

/**
 * @enum {number}
 */
proto.CoreSchema.V1.Conversation.ParentCase = {
  PARENT_NOT_SET: 0,
  INVOICE: 4,
  PAYMENT: 5
};

/**
 * @return {proto.CoreSchema.V1.Conversation.ParentCase}
 */
proto.CoreSchema.V1.Conversation.prototype.getParentCase = function() {
  return /** @type {proto.CoreSchema.V1.Conversation.ParentCase} */(jspb.Message.computeOneofCase(this, proto.CoreSchema.V1.Conversation.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.CoreSchema.V1.Conversation.prototype.toObject = function(opt_includeInstance) {
  return proto.CoreSchema.V1.Conversation.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.CoreSchema.V1.Conversation} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.CoreSchema.V1.Conversation.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0),
    seller: (f = msg.getSeller()) && proto.CoreSchema.V1.UserInfo.toObject(includeInstance, f),
    buyer: (f = msg.getBuyer()) && proto.CoreSchema.V1.UserInfo.toObject(includeInstance, f),
    invoice: (f = msg.getInvoice()) && proto.CoreSchema.V1.Invoice.toObject(includeInstance, f),
    payment: (f = msg.getPayment()) && proto.CoreSchema.V1.InvoicePayment.toObject(includeInstance, f),
    messagesList: jspb.Message.toObjectList(msg.getMessagesList(),
    proto.CoreSchema.V1.ConversationMessage.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.CoreSchema.V1.Conversation}
 */
proto.CoreSchema.V1.Conversation.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.CoreSchema.V1.Conversation;
  return proto.CoreSchema.V1.Conversation.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.CoreSchema.V1.Conversation} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.CoreSchema.V1.Conversation}
 */
proto.CoreSchema.V1.Conversation.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setId(value);
      break;
    case 2:
      var value = new proto.CoreSchema.V1.UserInfo;
      reader.readMessage(value,proto.CoreSchema.V1.UserInfo.deserializeBinaryFromReader);
      msg.setSeller(value);
      break;
    case 3:
      var value = new proto.CoreSchema.V1.UserInfo;
      reader.readMessage(value,proto.CoreSchema.V1.UserInfo.deserializeBinaryFromReader);
      msg.setBuyer(value);
      break;
    case 4:
      var value = new proto.CoreSchema.V1.Invoice;
      reader.readMessage(value,proto.CoreSchema.V1.Invoice.deserializeBinaryFromReader);
      msg.setInvoice(value);
      break;
    case 5:
      var value = new proto.CoreSchema.V1.InvoicePayment;
      reader.readMessage(value,proto.CoreSchema.V1.InvoicePayment.deserializeBinaryFromReader);
      msg.setPayment(value);
      break;
    case 6:
      var value = new proto.CoreSchema.V1.ConversationMessage;
      reader.readMessage(value,proto.CoreSchema.V1.ConversationMessage.deserializeBinaryFromReader);
      msg.addMessages(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.CoreSchema.V1.Conversation.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.CoreSchema.V1.Conversation.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.CoreSchema.V1.Conversation} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.CoreSchema.V1.Conversation.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeUint64(
      1,
      f
    );
  }
  f = message.getSeller();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.CoreSchema.V1.UserInfo.serializeBinaryToWriter
    );
  }
  f = message.getBuyer();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.CoreSchema.V1.UserInfo.serializeBinaryToWriter
    );
  }
  f = message.getInvoice();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.CoreSchema.V1.Invoice.serializeBinaryToWriter
    );
  }
  f = message.getPayment();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.CoreSchema.V1.InvoicePayment.serializeBinaryToWriter
    );
  }
  f = message.getMessagesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      6,
      f,
      proto.CoreSchema.V1.ConversationMessage.serializeBinaryToWriter
    );
  }
};


/**
 * optional uint64 Id = 1;
 * @return {number}
 */
proto.CoreSchema.V1.Conversation.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.CoreSchema.V1.Conversation.prototype.setId = function(value) {
  jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional UserInfo Seller = 2;
 * @return {?proto.CoreSchema.V1.UserInfo}
 */
proto.CoreSchema.V1.Conversation.prototype.getSeller = function() {
  return /** @type{?proto.CoreSchema.V1.UserInfo} */ (
    jspb.Message.getWrapperField(this, proto.CoreSchema.V1.UserInfo, 2));
};


/** @param {?proto.CoreSchema.V1.UserInfo|undefined} value */
proto.CoreSchema.V1.Conversation.prototype.setSeller = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.CoreSchema.V1.Conversation.prototype.clearSeller = function() {
  this.setSeller(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.CoreSchema.V1.Conversation.prototype.hasSeller = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional UserInfo Buyer = 3;
 * @return {?proto.CoreSchema.V1.UserInfo}
 */
proto.CoreSchema.V1.Conversation.prototype.getBuyer = function() {
  return /** @type{?proto.CoreSchema.V1.UserInfo} */ (
    jspb.Message.getWrapperField(this, proto.CoreSchema.V1.UserInfo, 3));
};


/** @param {?proto.CoreSchema.V1.UserInfo|undefined} value */
proto.CoreSchema.V1.Conversation.prototype.setBuyer = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


proto.CoreSchema.V1.Conversation.prototype.clearBuyer = function() {
  this.setBuyer(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.CoreSchema.V1.Conversation.prototype.hasBuyer = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional Invoice Invoice = 4;
 * @return {?proto.CoreSchema.V1.Invoice}
 */
proto.CoreSchema.V1.Conversation.prototype.getInvoice = function() {
  return /** @type{?proto.CoreSchema.V1.Invoice} */ (
    jspb.Message.getWrapperField(this, proto.CoreSchema.V1.Invoice, 4));
};


/** @param {?proto.CoreSchema.V1.Invoice|undefined} value */
proto.CoreSchema.V1.Conversation.prototype.setInvoice = function(value) {
  jspb.Message.setOneofWrapperField(this, 4, proto.CoreSchema.V1.Conversation.oneofGroups_[0], value);
};


proto.CoreSchema.V1.Conversation.prototype.clearInvoice = function() {
  this.setInvoice(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.CoreSchema.V1.Conversation.prototype.hasInvoice = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional InvoicePayment Payment = 5;
 * @return {?proto.CoreSchema.V1.InvoicePayment}
 */
proto.CoreSchema.V1.Conversation.prototype.getPayment = function() {
  return /** @type{?proto.CoreSchema.V1.InvoicePayment} */ (
    jspb.Message.getWrapperField(this, proto.CoreSchema.V1.InvoicePayment, 5));
};


/** @param {?proto.CoreSchema.V1.InvoicePayment|undefined} value */
proto.CoreSchema.V1.Conversation.prototype.setPayment = function(value) {
  jspb.Message.setOneofWrapperField(this, 5, proto.CoreSchema.V1.Conversation.oneofGroups_[0], value);
};


proto.CoreSchema.V1.Conversation.prototype.clearPayment = function() {
  this.setPayment(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.CoreSchema.V1.Conversation.prototype.hasPayment = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * repeated ConversationMessage Messages = 6;
 * @return {!Array<!proto.CoreSchema.V1.ConversationMessage>}
 */
proto.CoreSchema.V1.Conversation.prototype.getMessagesList = function() {
  return /** @type{!Array<!proto.CoreSchema.V1.ConversationMessage>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.CoreSchema.V1.ConversationMessage, 6));
};


/** @param {!Array<!proto.CoreSchema.V1.ConversationMessage>} value */
proto.CoreSchema.V1.Conversation.prototype.setMessagesList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 6, value);
};


/**
 * @param {!proto.CoreSchema.V1.ConversationMessage=} opt_value
 * @param {number=} opt_index
 * @return {!proto.CoreSchema.V1.ConversationMessage}
 */
proto.CoreSchema.V1.Conversation.prototype.addMessages = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 6, opt_value, proto.CoreSchema.V1.ConversationMessage, opt_index);
};


proto.CoreSchema.V1.Conversation.prototype.clearMessagesList = function() {
  this.setMessagesList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.CoreSchema.V1.SendInvoiceMessageRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.CoreSchema.V1.SendInvoiceMessageRequest.repeatedFields_, null);
};
goog.inherits(proto.CoreSchema.V1.SendInvoiceMessageRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.CoreSchema.V1.SendInvoiceMessageRequest.displayName = 'proto.CoreSchema.V1.SendInvoiceMessageRequest';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.CoreSchema.V1.SendInvoiceMessageRequest.repeatedFields_ = [4];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.CoreSchema.V1.SendInvoiceMessageRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.CoreSchema.V1.SendInvoiceMessageRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.CoreSchema.V1.SendInvoiceMessageRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.CoreSchema.V1.SendInvoiceMessageRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    touserid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    invoiceid: jspb.Message.getFieldWithDefault(msg, 2, 0),
    text: jspb.Message.getFieldWithDefault(msg, 3, ""),
    imageidsList: jspb.Message.getRepeatedField(msg, 4)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.CoreSchema.V1.SendInvoiceMessageRequest}
 */
proto.CoreSchema.V1.SendInvoiceMessageRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.CoreSchema.V1.SendInvoiceMessageRequest;
  return proto.CoreSchema.V1.SendInvoiceMessageRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.CoreSchema.V1.SendInvoiceMessageRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.CoreSchema.V1.SendInvoiceMessageRequest}
 */
proto.CoreSchema.V1.SendInvoiceMessageRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setTouserid(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setInvoiceid(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setText(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.addImageids(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.CoreSchema.V1.SendInvoiceMessageRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.CoreSchema.V1.SendInvoiceMessageRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.CoreSchema.V1.SendInvoiceMessageRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.CoreSchema.V1.SendInvoiceMessageRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTouserid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getInvoiceid();
  if (f !== 0) {
    writer.writeUint64(
      2,
      f
    );
  }
  f = message.getText();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getImageidsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      4,
      f
    );
  }
};


/**
 * optional string ToUserId = 1;
 * @return {string}
 */
proto.CoreSchema.V1.SendInvoiceMessageRequest.prototype.getTouserid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.CoreSchema.V1.SendInvoiceMessageRequest.prototype.setTouserid = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional uint64 InvoiceId = 2;
 * @return {number}
 */
proto.CoreSchema.V1.SendInvoiceMessageRequest.prototype.getInvoiceid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.CoreSchema.V1.SendInvoiceMessageRequest.prototype.setInvoiceid = function(value) {
  jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional string Text = 3;
 * @return {string}
 */
proto.CoreSchema.V1.SendInvoiceMessageRequest.prototype.getText = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.CoreSchema.V1.SendInvoiceMessageRequest.prototype.setText = function(value) {
  jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * repeated string ImageIds = 4;
 * @return {!Array<string>}
 */
proto.CoreSchema.V1.SendInvoiceMessageRequest.prototype.getImageidsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 4));
};


/** @param {!Array<string>} value */
proto.CoreSchema.V1.SendInvoiceMessageRequest.prototype.setImageidsList = function(value) {
  jspb.Message.setField(this, 4, value || []);
};


/**
 * @param {!string} value
 * @param {number=} opt_index
 */
proto.CoreSchema.V1.SendInvoiceMessageRequest.prototype.addImageids = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 4, value, opt_index);
};


proto.CoreSchema.V1.SendInvoiceMessageRequest.prototype.clearImageidsList = function() {
  this.setImageidsList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.CoreSchema.V1.SendInvoicePaymentMessageRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.CoreSchema.V1.SendInvoicePaymentMessageRequest.repeatedFields_, null);
};
goog.inherits(proto.CoreSchema.V1.SendInvoicePaymentMessageRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.CoreSchema.V1.SendInvoicePaymentMessageRequest.displayName = 'proto.CoreSchema.V1.SendInvoicePaymentMessageRequest';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.CoreSchema.V1.SendInvoicePaymentMessageRequest.repeatedFields_ = [3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.CoreSchema.V1.SendInvoicePaymentMessageRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.CoreSchema.V1.SendInvoicePaymentMessageRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.CoreSchema.V1.SendInvoicePaymentMessageRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.CoreSchema.V1.SendInvoicePaymentMessageRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    paymentid: jspb.Message.getFieldWithDefault(msg, 1, 0),
    text: jspb.Message.getFieldWithDefault(msg, 2, ""),
    imageidsList: jspb.Message.getRepeatedField(msg, 3)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.CoreSchema.V1.SendInvoicePaymentMessageRequest}
 */
proto.CoreSchema.V1.SendInvoicePaymentMessageRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.CoreSchema.V1.SendInvoicePaymentMessageRequest;
  return proto.CoreSchema.V1.SendInvoicePaymentMessageRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.CoreSchema.V1.SendInvoicePaymentMessageRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.CoreSchema.V1.SendInvoicePaymentMessageRequest}
 */
proto.CoreSchema.V1.SendInvoicePaymentMessageRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setPaymentid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setText(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.addImageids(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.CoreSchema.V1.SendInvoicePaymentMessageRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.CoreSchema.V1.SendInvoicePaymentMessageRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.CoreSchema.V1.SendInvoicePaymentMessageRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.CoreSchema.V1.SendInvoicePaymentMessageRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPaymentid();
  if (f !== 0) {
    writer.writeUint64(
      1,
      f
    );
  }
  f = message.getText();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getImageidsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      3,
      f
    );
  }
};


/**
 * optional uint64 PaymentId = 1;
 * @return {number}
 */
proto.CoreSchema.V1.SendInvoicePaymentMessageRequest.prototype.getPaymentid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.CoreSchema.V1.SendInvoicePaymentMessageRequest.prototype.setPaymentid = function(value) {
  jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string Text = 2;
 * @return {string}
 */
proto.CoreSchema.V1.SendInvoicePaymentMessageRequest.prototype.getText = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.CoreSchema.V1.SendInvoicePaymentMessageRequest.prototype.setText = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * repeated string ImageIds = 3;
 * @return {!Array<string>}
 */
proto.CoreSchema.V1.SendInvoicePaymentMessageRequest.prototype.getImageidsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 3));
};


/** @param {!Array<string>} value */
proto.CoreSchema.V1.SendInvoicePaymentMessageRequest.prototype.setImageidsList = function(value) {
  jspb.Message.setField(this, 3, value || []);
};


/**
 * @param {!string} value
 * @param {number=} opt_index
 */
proto.CoreSchema.V1.SendInvoicePaymentMessageRequest.prototype.addImageids = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 3, value, opt_index);
};


proto.CoreSchema.V1.SendInvoicePaymentMessageRequest.prototype.clearImageidsList = function() {
  this.setImageidsList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.CoreSchema.V1.GetConversationsResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.CoreSchema.V1.GetConversationsResponse.repeatedFields_, null);
};
goog.inherits(proto.CoreSchema.V1.GetConversationsResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.CoreSchema.V1.GetConversationsResponse.displayName = 'proto.CoreSchema.V1.GetConversationsResponse';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.CoreSchema.V1.GetConversationsResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.CoreSchema.V1.GetConversationsResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.CoreSchema.V1.GetConversationsResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.CoreSchema.V1.GetConversationsResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.CoreSchema.V1.GetConversationsResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    conversationsList: jspb.Message.toObjectList(msg.getConversationsList(),
    proto.CoreSchema.V1.Conversation.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.CoreSchema.V1.GetConversationsResponse}
 */
proto.CoreSchema.V1.GetConversationsResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.CoreSchema.V1.GetConversationsResponse;
  return proto.CoreSchema.V1.GetConversationsResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.CoreSchema.V1.GetConversationsResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.CoreSchema.V1.GetConversationsResponse}
 */
proto.CoreSchema.V1.GetConversationsResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.CoreSchema.V1.Conversation;
      reader.readMessage(value,proto.CoreSchema.V1.Conversation.deserializeBinaryFromReader);
      msg.addConversations(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.CoreSchema.V1.GetConversationsResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.CoreSchema.V1.GetConversationsResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.CoreSchema.V1.GetConversationsResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.CoreSchema.V1.GetConversationsResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getConversationsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.CoreSchema.V1.Conversation.serializeBinaryToWriter
    );
  }
};


/**
 * repeated Conversation Conversations = 1;
 * @return {!Array<!proto.CoreSchema.V1.Conversation>}
 */
proto.CoreSchema.V1.GetConversationsResponse.prototype.getConversationsList = function() {
  return /** @type{!Array<!proto.CoreSchema.V1.Conversation>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.CoreSchema.V1.Conversation, 1));
};


/** @param {!Array<!proto.CoreSchema.V1.Conversation>} value */
proto.CoreSchema.V1.GetConversationsResponse.prototype.setConversationsList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.CoreSchema.V1.Conversation=} opt_value
 * @param {number=} opt_index
 * @return {!proto.CoreSchema.V1.Conversation}
 */
proto.CoreSchema.V1.GetConversationsResponse.prototype.addConversations = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.CoreSchema.V1.Conversation, opt_index);
};


proto.CoreSchema.V1.GetConversationsResponse.prototype.clearConversationsList = function() {
  this.setConversationsList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.CoreSchema.V1.GetConversationsByIdRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.CoreSchema.V1.GetConversationsByIdRequest.oneofGroups_);
};
goog.inherits(proto.CoreSchema.V1.GetConversationsByIdRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.CoreSchema.V1.GetConversationsByIdRequest.displayName = 'proto.CoreSchema.V1.GetConversationsByIdRequest';
}
/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.CoreSchema.V1.GetConversationsByIdRequest.oneofGroups_ = [[1,2,3]];

/**
 * @enum {number}
 */
proto.CoreSchema.V1.GetConversationsByIdRequest.IdsCase = {
  IDS_NOT_SET: 0,
  INVOICEID: 1,
  PAYMENTID: 2,
  USERID: 3
};

/**
 * @return {proto.CoreSchema.V1.GetConversationsByIdRequest.IdsCase}
 */
proto.CoreSchema.V1.GetConversationsByIdRequest.prototype.getIdsCase = function() {
  return /** @type {proto.CoreSchema.V1.GetConversationsByIdRequest.IdsCase} */(jspb.Message.computeOneofCase(this, proto.CoreSchema.V1.GetConversationsByIdRequest.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.CoreSchema.V1.GetConversationsByIdRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.CoreSchema.V1.GetConversationsByIdRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.CoreSchema.V1.GetConversationsByIdRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.CoreSchema.V1.GetConversationsByIdRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    invoiceid: jspb.Message.getFieldWithDefault(msg, 1, 0),
    paymentid: jspb.Message.getFieldWithDefault(msg, 2, 0),
    userid: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.CoreSchema.V1.GetConversationsByIdRequest}
 */
proto.CoreSchema.V1.GetConversationsByIdRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.CoreSchema.V1.GetConversationsByIdRequest;
  return proto.CoreSchema.V1.GetConversationsByIdRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.CoreSchema.V1.GetConversationsByIdRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.CoreSchema.V1.GetConversationsByIdRequest}
 */
proto.CoreSchema.V1.GetConversationsByIdRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setInvoiceid(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setPaymentid(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.CoreSchema.V1.GetConversationsByIdRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.CoreSchema.V1.GetConversationsByIdRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.CoreSchema.V1.GetConversationsByIdRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.CoreSchema.V1.GetConversationsByIdRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {number} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeUint64(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeUint64(
      2,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional uint64 InvoiceId = 1;
 * @return {number}
 */
proto.CoreSchema.V1.GetConversationsByIdRequest.prototype.getInvoiceid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.CoreSchema.V1.GetConversationsByIdRequest.prototype.setInvoiceid = function(value) {
  jspb.Message.setOneofField(this, 1, proto.CoreSchema.V1.GetConversationsByIdRequest.oneofGroups_[0], value);
};


proto.CoreSchema.V1.GetConversationsByIdRequest.prototype.clearInvoiceid = function() {
  jspb.Message.setOneofField(this, 1, proto.CoreSchema.V1.GetConversationsByIdRequest.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.CoreSchema.V1.GetConversationsByIdRequest.prototype.hasInvoiceid = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional uint64 PaymentId = 2;
 * @return {number}
 */
proto.CoreSchema.V1.GetConversationsByIdRequest.prototype.getPaymentid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.CoreSchema.V1.GetConversationsByIdRequest.prototype.setPaymentid = function(value) {
  jspb.Message.setOneofField(this, 2, proto.CoreSchema.V1.GetConversationsByIdRequest.oneofGroups_[0], value);
};


proto.CoreSchema.V1.GetConversationsByIdRequest.prototype.clearPaymentid = function() {
  jspb.Message.setOneofField(this, 2, proto.CoreSchema.V1.GetConversationsByIdRequest.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.CoreSchema.V1.GetConversationsByIdRequest.prototype.hasPaymentid = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string UserId = 3;
 * @return {string}
 */
proto.CoreSchema.V1.GetConversationsByIdRequest.prototype.getUserid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.CoreSchema.V1.GetConversationsByIdRequest.prototype.setUserid = function(value) {
  jspb.Message.setOneofField(this, 3, proto.CoreSchema.V1.GetConversationsByIdRequest.oneofGroups_[0], value);
};


proto.CoreSchema.V1.GetConversationsByIdRequest.prototype.clearUserid = function() {
  jspb.Message.setOneofField(this, 3, proto.CoreSchema.V1.GetConversationsByIdRequest.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.CoreSchema.V1.GetConversationsByIdRequest.prototype.hasUserid = function() {
  return jspb.Message.getField(this, 3) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.CoreSchema.V1.DeleteConversationRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.CoreSchema.V1.DeleteConversationRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.CoreSchema.V1.DeleteConversationRequest.displayName = 'proto.CoreSchema.V1.DeleteConversationRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.CoreSchema.V1.DeleteConversationRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.CoreSchema.V1.DeleteConversationRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.CoreSchema.V1.DeleteConversationRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.CoreSchema.V1.DeleteConversationRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    conversationid: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.CoreSchema.V1.DeleteConversationRequest}
 */
proto.CoreSchema.V1.DeleteConversationRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.CoreSchema.V1.DeleteConversationRequest;
  return proto.CoreSchema.V1.DeleteConversationRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.CoreSchema.V1.DeleteConversationRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.CoreSchema.V1.DeleteConversationRequest}
 */
proto.CoreSchema.V1.DeleteConversationRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setConversationid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.CoreSchema.V1.DeleteConversationRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.CoreSchema.V1.DeleteConversationRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.CoreSchema.V1.DeleteConversationRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.CoreSchema.V1.DeleteConversationRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getConversationid();
  if (f !== 0) {
    writer.writeUint64(
      1,
      f
    );
  }
};


/**
 * optional uint64 ConversationId = 1;
 * @return {number}
 */
proto.CoreSchema.V1.DeleteConversationRequest.prototype.getConversationid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.CoreSchema.V1.DeleteConversationRequest.prototype.setConversationid = function(value) {
  jspb.Message.setProto3IntField(this, 1, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.CoreSchema.V1.CreateRefundRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.CoreSchema.V1.CreateRefundRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.CoreSchema.V1.CreateRefundRequest.displayName = 'proto.CoreSchema.V1.CreateRefundRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.CoreSchema.V1.CreateRefundRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.CoreSchema.V1.CreateRefundRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.CoreSchema.V1.CreateRefundRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.CoreSchema.V1.CreateRefundRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    paymentid: jspb.Message.getFieldWithDefault(msg, 1, 0),
    pieces: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.CoreSchema.V1.CreateRefundRequest}
 */
proto.CoreSchema.V1.CreateRefundRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.CoreSchema.V1.CreateRefundRequest;
  return proto.CoreSchema.V1.CreateRefundRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.CoreSchema.V1.CreateRefundRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.CoreSchema.V1.CreateRefundRequest}
 */
proto.CoreSchema.V1.CreateRefundRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setPaymentid(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setPieces(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.CoreSchema.V1.CreateRefundRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.CoreSchema.V1.CreateRefundRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.CoreSchema.V1.CreateRefundRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.CoreSchema.V1.CreateRefundRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPaymentid();
  if (f !== 0) {
    writer.writeUint64(
      1,
      f
    );
  }
  f = message.getPieces();
  if (f !== 0) {
    writer.writeUint32(
      2,
      f
    );
  }
};


/**
 * optional uint64 PaymentId = 1;
 * @return {number}
 */
proto.CoreSchema.V1.CreateRefundRequest.prototype.getPaymentid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.CoreSchema.V1.CreateRefundRequest.prototype.setPaymentid = function(value) {
  jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional uint32 Pieces = 2;
 * @return {number}
 */
proto.CoreSchema.V1.CreateRefundRequest.prototype.getPieces = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.CoreSchema.V1.CreateRefundRequest.prototype.setPieces = function(value) {
  jspb.Message.setProto3IntField(this, 2, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.CoreSchema.V1.CreateRefundResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.CoreSchema.V1.CreateRefundResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.CoreSchema.V1.CreateRefundResponse.displayName = 'proto.CoreSchema.V1.CreateRefundResponse';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.CoreSchema.V1.CreateRefundResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.CoreSchema.V1.CreateRefundResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.CoreSchema.V1.CreateRefundResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.CoreSchema.V1.CreateRefundResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    payment: (f = msg.getPayment()) && proto.CoreSchema.V1.InvoicePayment.toObject(includeInstance, f),
    refund: (f = msg.getRefund()) && proto.CoreSchema.V1.Invoice.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.CoreSchema.V1.CreateRefundResponse}
 */
proto.CoreSchema.V1.CreateRefundResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.CoreSchema.V1.CreateRefundResponse;
  return proto.CoreSchema.V1.CreateRefundResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.CoreSchema.V1.CreateRefundResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.CoreSchema.V1.CreateRefundResponse}
 */
proto.CoreSchema.V1.CreateRefundResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.CoreSchema.V1.InvoicePayment;
      reader.readMessage(value,proto.CoreSchema.V1.InvoicePayment.deserializeBinaryFromReader);
      msg.setPayment(value);
      break;
    case 2:
      var value = new proto.CoreSchema.V1.Invoice;
      reader.readMessage(value,proto.CoreSchema.V1.Invoice.deserializeBinaryFromReader);
      msg.setRefund(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.CoreSchema.V1.CreateRefundResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.CoreSchema.V1.CreateRefundResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.CoreSchema.V1.CreateRefundResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.CoreSchema.V1.CreateRefundResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPayment();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.CoreSchema.V1.InvoicePayment.serializeBinaryToWriter
    );
  }
  f = message.getRefund();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.CoreSchema.V1.Invoice.serializeBinaryToWriter
    );
  }
};


/**
 * optional InvoicePayment Payment = 1;
 * @return {?proto.CoreSchema.V1.InvoicePayment}
 */
proto.CoreSchema.V1.CreateRefundResponse.prototype.getPayment = function() {
  return /** @type{?proto.CoreSchema.V1.InvoicePayment} */ (
    jspb.Message.getWrapperField(this, proto.CoreSchema.V1.InvoicePayment, 1));
};


/** @param {?proto.CoreSchema.V1.InvoicePayment|undefined} value */
proto.CoreSchema.V1.CreateRefundResponse.prototype.setPayment = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.CoreSchema.V1.CreateRefundResponse.prototype.clearPayment = function() {
  this.setPayment(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.CoreSchema.V1.CreateRefundResponse.prototype.hasPayment = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional Invoice Refund = 2;
 * @return {?proto.CoreSchema.V1.Invoice}
 */
proto.CoreSchema.V1.CreateRefundResponse.prototype.getRefund = function() {
  return /** @type{?proto.CoreSchema.V1.Invoice} */ (
    jspb.Message.getWrapperField(this, proto.CoreSchema.V1.Invoice, 2));
};


/** @param {?proto.CoreSchema.V1.Invoice|undefined} value */
proto.CoreSchema.V1.CreateRefundResponse.prototype.setRefund = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.CoreSchema.V1.CreateRefundResponse.prototype.clearRefund = function() {
  this.setRefund(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.CoreSchema.V1.CreateRefundResponse.prototype.hasRefund = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.CoreSchema.V1.BuyAutoPriceRecalcsRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.CoreSchema.V1.BuyAutoPriceRecalcsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.CoreSchema.V1.BuyAutoPriceRecalcsRequest.displayName = 'proto.CoreSchema.V1.BuyAutoPriceRecalcsRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.CoreSchema.V1.BuyAutoPriceRecalcsRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.CoreSchema.V1.BuyAutoPriceRecalcsRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.CoreSchema.V1.BuyAutoPriceRecalcsRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.CoreSchema.V1.BuyAutoPriceRecalcsRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    recalcs: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.CoreSchema.V1.BuyAutoPriceRecalcsRequest}
 */
proto.CoreSchema.V1.BuyAutoPriceRecalcsRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.CoreSchema.V1.BuyAutoPriceRecalcsRequest;
  return proto.CoreSchema.V1.BuyAutoPriceRecalcsRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.CoreSchema.V1.BuyAutoPriceRecalcsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.CoreSchema.V1.BuyAutoPriceRecalcsRequest}
 */
proto.CoreSchema.V1.BuyAutoPriceRecalcsRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setRecalcs(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.CoreSchema.V1.BuyAutoPriceRecalcsRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.CoreSchema.V1.BuyAutoPriceRecalcsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.CoreSchema.V1.BuyAutoPriceRecalcsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.CoreSchema.V1.BuyAutoPriceRecalcsRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRecalcs();
  if (f !== 0) {
    writer.writeUint32(
      1,
      f
    );
  }
};


/**
 * optional uint32 Recalcs = 1;
 * @return {number}
 */
proto.CoreSchema.V1.BuyAutoPriceRecalcsRequest.prototype.getRecalcs = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.CoreSchema.V1.BuyAutoPriceRecalcsRequest.prototype.setRecalcs = function(value) {
  jspb.Message.setProto3IntField(this, 1, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.CoreSchema.V1.CreatePromiseRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.CoreSchema.V1.CreatePromiseRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.CoreSchema.V1.CreatePromiseRequest.displayName = 'proto.CoreSchema.V1.CreatePromiseRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.CoreSchema.V1.CreatePromiseRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.CoreSchema.V1.CreatePromiseRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.CoreSchema.V1.CreatePromiseRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.CoreSchema.V1.CreatePromiseRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    amount: (f = msg.getAmount()) && proto.CoreSchema.V1.Decimal.toObject(includeInstance, f),
    password: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.CoreSchema.V1.CreatePromiseRequest}
 */
proto.CoreSchema.V1.CreatePromiseRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.CoreSchema.V1.CreatePromiseRequest;
  return proto.CoreSchema.V1.CreatePromiseRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.CoreSchema.V1.CreatePromiseRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.CoreSchema.V1.CreatePromiseRequest}
 */
proto.CoreSchema.V1.CreatePromiseRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.CoreSchema.V1.Decimal;
      reader.readMessage(value,proto.CoreSchema.V1.Decimal.deserializeBinaryFromReader);
      msg.setAmount(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setPassword(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.CoreSchema.V1.CreatePromiseRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.CoreSchema.V1.CreatePromiseRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.CoreSchema.V1.CreatePromiseRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.CoreSchema.V1.CreatePromiseRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAmount();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.CoreSchema.V1.Decimal.serializeBinaryToWriter
    );
  }
  f = message.getPassword();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional Decimal Amount = 1;
 * @return {?proto.CoreSchema.V1.Decimal}
 */
proto.CoreSchema.V1.CreatePromiseRequest.prototype.getAmount = function() {
  return /** @type{?proto.CoreSchema.V1.Decimal} */ (
    jspb.Message.getWrapperField(this, proto.CoreSchema.V1.Decimal, 1));
};


/** @param {?proto.CoreSchema.V1.Decimal|undefined} value */
proto.CoreSchema.V1.CreatePromiseRequest.prototype.setAmount = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.CoreSchema.V1.CreatePromiseRequest.prototype.clearAmount = function() {
  this.setAmount(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.CoreSchema.V1.CreatePromiseRequest.prototype.hasAmount = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string Password = 2;
 * @return {string}
 */
proto.CoreSchema.V1.CreatePromiseRequest.prototype.getPassword = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.CoreSchema.V1.CreatePromiseRequest.prototype.setPassword = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.CoreSchema.V1.CreatePromiseResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.CoreSchema.V1.CreatePromiseResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.CoreSchema.V1.CreatePromiseResponse.displayName = 'proto.CoreSchema.V1.CreatePromiseResponse';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.CoreSchema.V1.CreatePromiseResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.CoreSchema.V1.CreatePromiseResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.CoreSchema.V1.CreatePromiseResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.CoreSchema.V1.CreatePromiseResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    promise: jspb.Message.getFieldWithDefault(msg, 1, ""),
    balance: (f = msg.getBalance()) && proto.CoreSchema.V1.Balance.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.CoreSchema.V1.CreatePromiseResponse}
 */
proto.CoreSchema.V1.CreatePromiseResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.CoreSchema.V1.CreatePromiseResponse;
  return proto.CoreSchema.V1.CreatePromiseResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.CoreSchema.V1.CreatePromiseResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.CoreSchema.V1.CreatePromiseResponse}
 */
proto.CoreSchema.V1.CreatePromiseResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setPromise(value);
      break;
    case 2:
      var value = new proto.CoreSchema.V1.Balance;
      reader.readMessage(value,proto.CoreSchema.V1.Balance.deserializeBinaryFromReader);
      msg.setBalance(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.CoreSchema.V1.CreatePromiseResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.CoreSchema.V1.CreatePromiseResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.CoreSchema.V1.CreatePromiseResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.CoreSchema.V1.CreatePromiseResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPromise();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getBalance();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.CoreSchema.V1.Balance.serializeBinaryToWriter
    );
  }
};


/**
 * optional string Promise = 1;
 * @return {string}
 */
proto.CoreSchema.V1.CreatePromiseResponse.prototype.getPromise = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.CoreSchema.V1.CreatePromiseResponse.prototype.setPromise = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional Balance Balance = 2;
 * @return {?proto.CoreSchema.V1.Balance}
 */
proto.CoreSchema.V1.CreatePromiseResponse.prototype.getBalance = function() {
  return /** @type{?proto.CoreSchema.V1.Balance} */ (
    jspb.Message.getWrapperField(this, proto.CoreSchema.V1.Balance, 2));
};


/** @param {?proto.CoreSchema.V1.Balance|undefined} value */
proto.CoreSchema.V1.CreatePromiseResponse.prototype.setBalance = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.CoreSchema.V1.CreatePromiseResponse.prototype.clearBalance = function() {
  this.setBalance(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.CoreSchema.V1.CreatePromiseResponse.prototype.hasBalance = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.CoreSchema.V1.PromiseToBalanceRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.CoreSchema.V1.PromiseToBalanceRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.CoreSchema.V1.PromiseToBalanceRequest.displayName = 'proto.CoreSchema.V1.PromiseToBalanceRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.CoreSchema.V1.PromiseToBalanceRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.CoreSchema.V1.PromiseToBalanceRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.CoreSchema.V1.PromiseToBalanceRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.CoreSchema.V1.PromiseToBalanceRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    promise: jspb.Message.getFieldWithDefault(msg, 1, ""),
    password: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.CoreSchema.V1.PromiseToBalanceRequest}
 */
proto.CoreSchema.V1.PromiseToBalanceRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.CoreSchema.V1.PromiseToBalanceRequest;
  return proto.CoreSchema.V1.PromiseToBalanceRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.CoreSchema.V1.PromiseToBalanceRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.CoreSchema.V1.PromiseToBalanceRequest}
 */
proto.CoreSchema.V1.PromiseToBalanceRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setPromise(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setPassword(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.CoreSchema.V1.PromiseToBalanceRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.CoreSchema.V1.PromiseToBalanceRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.CoreSchema.V1.PromiseToBalanceRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.CoreSchema.V1.PromiseToBalanceRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPromise();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getPassword();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string Promise = 1;
 * @return {string}
 */
proto.CoreSchema.V1.PromiseToBalanceRequest.prototype.getPromise = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.CoreSchema.V1.PromiseToBalanceRequest.prototype.setPromise = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string Password = 2;
 * @return {string}
 */
proto.CoreSchema.V1.PromiseToBalanceRequest.prototype.getPassword = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.CoreSchema.V1.PromiseToBalanceRequest.prototype.setPassword = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.CoreSchema.V1.PromiseSellByBestDealRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.CoreSchema.V1.PromiseSellByBestDealRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.CoreSchema.V1.PromiseSellByBestDealRequest.displayName = 'proto.CoreSchema.V1.PromiseSellByBestDealRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.CoreSchema.V1.PromiseSellByBestDealRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.CoreSchema.V1.PromiseSellByBestDealRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.CoreSchema.V1.PromiseSellByBestDealRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.CoreSchema.V1.PromiseSellByBestDealRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    country: jspb.Message.getFieldWithDefault(msg, 1, ""),
    currency: jspb.Message.getFieldWithDefault(msg, 2, ""),
    paymenttype: jspb.Message.getFieldWithDefault(msg, 3, ""),
    promise: jspb.Message.getFieldWithDefault(msg, 4, ""),
    password: jspb.Message.getFieldWithDefault(msg, 5, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.CoreSchema.V1.PromiseSellByBestDealRequest}
 */
proto.CoreSchema.V1.PromiseSellByBestDealRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.CoreSchema.V1.PromiseSellByBestDealRequest;
  return proto.CoreSchema.V1.PromiseSellByBestDealRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.CoreSchema.V1.PromiseSellByBestDealRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.CoreSchema.V1.PromiseSellByBestDealRequest}
 */
proto.CoreSchema.V1.PromiseSellByBestDealRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setCountry(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setCurrency(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setPaymenttype(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setPromise(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setPassword(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.CoreSchema.V1.PromiseSellByBestDealRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.CoreSchema.V1.PromiseSellByBestDealRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.CoreSchema.V1.PromiseSellByBestDealRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.CoreSchema.V1.PromiseSellByBestDealRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCountry();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getCurrency();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getPaymenttype();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getPromise();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getPassword();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
};


/**
 * optional string Country = 1;
 * @return {string}
 */
proto.CoreSchema.V1.PromiseSellByBestDealRequest.prototype.getCountry = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.CoreSchema.V1.PromiseSellByBestDealRequest.prototype.setCountry = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string Currency = 2;
 * @return {string}
 */
proto.CoreSchema.V1.PromiseSellByBestDealRequest.prototype.getCurrency = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.CoreSchema.V1.PromiseSellByBestDealRequest.prototype.setCurrency = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string PaymentType = 3;
 * @return {string}
 */
proto.CoreSchema.V1.PromiseSellByBestDealRequest.prototype.getPaymenttype = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.CoreSchema.V1.PromiseSellByBestDealRequest.prototype.setPaymenttype = function(value) {
  jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string Promise = 4;
 * @return {string}
 */
proto.CoreSchema.V1.PromiseSellByBestDealRequest.prototype.getPromise = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/** @param {string} value */
proto.CoreSchema.V1.PromiseSellByBestDealRequest.prototype.setPromise = function(value) {
  jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string Password = 5;
 * @return {string}
 */
proto.CoreSchema.V1.PromiseSellByBestDealRequest.prototype.getPassword = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/** @param {string} value */
proto.CoreSchema.V1.PromiseSellByBestDealRequest.prototype.setPassword = function(value) {
  jspb.Message.setProto3StringField(this, 5, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.CoreSchema.V1.GetPromiseSuitableAdvertisementsRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.CoreSchema.V1.GetPromiseSuitableAdvertisementsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.CoreSchema.V1.GetPromiseSuitableAdvertisementsRequest.displayName = 'proto.CoreSchema.V1.GetPromiseSuitableAdvertisementsRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.CoreSchema.V1.GetPromiseSuitableAdvertisementsRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.CoreSchema.V1.GetPromiseSuitableAdvertisementsRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.CoreSchema.V1.GetPromiseSuitableAdvertisementsRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.CoreSchema.V1.GetPromiseSuitableAdvertisementsRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    country: jspb.Message.getFieldWithDefault(msg, 1, ""),
    currency: jspb.Message.getFieldWithDefault(msg, 2, ""),
    paymenttype: jspb.Message.getFieldWithDefault(msg, 3, ""),
    promise: jspb.Message.getFieldWithDefault(msg, 4, ""),
    password: jspb.Message.getFieldWithDefault(msg, 5, ""),
    skip: jspb.Message.getFieldWithDefault(msg, 6, 0),
    count: jspb.Message.getFieldWithDefault(msg, 7, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.CoreSchema.V1.GetPromiseSuitableAdvertisementsRequest}
 */
proto.CoreSchema.V1.GetPromiseSuitableAdvertisementsRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.CoreSchema.V1.GetPromiseSuitableAdvertisementsRequest;
  return proto.CoreSchema.V1.GetPromiseSuitableAdvertisementsRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.CoreSchema.V1.GetPromiseSuitableAdvertisementsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.CoreSchema.V1.GetPromiseSuitableAdvertisementsRequest}
 */
proto.CoreSchema.V1.GetPromiseSuitableAdvertisementsRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setCountry(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setCurrency(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setPaymenttype(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setPromise(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setPassword(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setSkip(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setCount(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.CoreSchema.V1.GetPromiseSuitableAdvertisementsRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.CoreSchema.V1.GetPromiseSuitableAdvertisementsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.CoreSchema.V1.GetPromiseSuitableAdvertisementsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.CoreSchema.V1.GetPromiseSuitableAdvertisementsRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCountry();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getCurrency();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getPaymenttype();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getPromise();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getPassword();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getSkip();
  if (f !== 0) {
    writer.writeUint32(
      6,
      f
    );
  }
  f = message.getCount();
  if (f !== 0) {
    writer.writeUint32(
      7,
      f
    );
  }
};


/**
 * optional string Country = 1;
 * @return {string}
 */
proto.CoreSchema.V1.GetPromiseSuitableAdvertisementsRequest.prototype.getCountry = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.CoreSchema.V1.GetPromiseSuitableAdvertisementsRequest.prototype.setCountry = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string Currency = 2;
 * @return {string}
 */
proto.CoreSchema.V1.GetPromiseSuitableAdvertisementsRequest.prototype.getCurrency = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.CoreSchema.V1.GetPromiseSuitableAdvertisementsRequest.prototype.setCurrency = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string PaymentType = 3;
 * @return {string}
 */
proto.CoreSchema.V1.GetPromiseSuitableAdvertisementsRequest.prototype.getPaymenttype = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.CoreSchema.V1.GetPromiseSuitableAdvertisementsRequest.prototype.setPaymenttype = function(value) {
  jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string Promise = 4;
 * @return {string}
 */
proto.CoreSchema.V1.GetPromiseSuitableAdvertisementsRequest.prototype.getPromise = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/** @param {string} value */
proto.CoreSchema.V1.GetPromiseSuitableAdvertisementsRequest.prototype.setPromise = function(value) {
  jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string Password = 5;
 * @return {string}
 */
proto.CoreSchema.V1.GetPromiseSuitableAdvertisementsRequest.prototype.getPassword = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/** @param {string} value */
proto.CoreSchema.V1.GetPromiseSuitableAdvertisementsRequest.prototype.setPassword = function(value) {
  jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional uint32 Skip = 6;
 * @return {number}
 */
proto.CoreSchema.V1.GetPromiseSuitableAdvertisementsRequest.prototype.getSkip = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/** @param {number} value */
proto.CoreSchema.V1.GetPromiseSuitableAdvertisementsRequest.prototype.setSkip = function(value) {
  jspb.Message.setProto3IntField(this, 6, value);
};


/**
 * optional uint32 Count = 7;
 * @return {number}
 */
proto.CoreSchema.V1.GetPromiseSuitableAdvertisementsRequest.prototype.getCount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/** @param {number} value */
proto.CoreSchema.V1.GetPromiseSuitableAdvertisementsRequest.prototype.setCount = function(value) {
  jspb.Message.setProto3IntField(this, 7, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.CoreSchema.V1.GetPromiseSuitableAdvertisementsResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.CoreSchema.V1.GetPromiseSuitableAdvertisementsResponse.repeatedFields_, null);
};
goog.inherits(proto.CoreSchema.V1.GetPromiseSuitableAdvertisementsResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.CoreSchema.V1.GetPromiseSuitableAdvertisementsResponse.displayName = 'proto.CoreSchema.V1.GetPromiseSuitableAdvertisementsResponse';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.CoreSchema.V1.GetPromiseSuitableAdvertisementsResponse.repeatedFields_ = [1,2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.CoreSchema.V1.GetPromiseSuitableAdvertisementsResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.CoreSchema.V1.GetPromiseSuitableAdvertisementsResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.CoreSchema.V1.GetPromiseSuitableAdvertisementsResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.CoreSchema.V1.GetPromiseSuitableAdvertisementsResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    advertisementsList: jspb.Message.toObjectList(msg.getAdvertisementsList(),
    proto.CoreSchema.V1.Advertisement.toObject, includeInstance),
    fiatamountsList: jspb.Message.toObjectList(msg.getFiatamountsList(),
    proto.CoreSchema.V1.Decimal.toObject, includeInstance),
    promiseamount: (f = msg.getPromiseamount()) && proto.CoreSchema.V1.Decimal.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.CoreSchema.V1.GetPromiseSuitableAdvertisementsResponse}
 */
proto.CoreSchema.V1.GetPromiseSuitableAdvertisementsResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.CoreSchema.V1.GetPromiseSuitableAdvertisementsResponse;
  return proto.CoreSchema.V1.GetPromiseSuitableAdvertisementsResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.CoreSchema.V1.GetPromiseSuitableAdvertisementsResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.CoreSchema.V1.GetPromiseSuitableAdvertisementsResponse}
 */
proto.CoreSchema.V1.GetPromiseSuitableAdvertisementsResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.CoreSchema.V1.Advertisement;
      reader.readMessage(value,proto.CoreSchema.V1.Advertisement.deserializeBinaryFromReader);
      msg.addAdvertisements(value);
      break;
    case 2:
      var value = new proto.CoreSchema.V1.Decimal;
      reader.readMessage(value,proto.CoreSchema.V1.Decimal.deserializeBinaryFromReader);
      msg.addFiatamounts(value);
      break;
    case 3:
      var value = new proto.CoreSchema.V1.Decimal;
      reader.readMessage(value,proto.CoreSchema.V1.Decimal.deserializeBinaryFromReader);
      msg.setPromiseamount(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.CoreSchema.V1.GetPromiseSuitableAdvertisementsResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.CoreSchema.V1.GetPromiseSuitableAdvertisementsResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.CoreSchema.V1.GetPromiseSuitableAdvertisementsResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.CoreSchema.V1.GetPromiseSuitableAdvertisementsResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAdvertisementsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.CoreSchema.V1.Advertisement.serializeBinaryToWriter
    );
  }
  f = message.getFiatamountsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.CoreSchema.V1.Decimal.serializeBinaryToWriter
    );
  }
  f = message.getPromiseamount();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.CoreSchema.V1.Decimal.serializeBinaryToWriter
    );
  }
};


/**
 * repeated Advertisement Advertisements = 1;
 * @return {!Array<!proto.CoreSchema.V1.Advertisement>}
 */
proto.CoreSchema.V1.GetPromiseSuitableAdvertisementsResponse.prototype.getAdvertisementsList = function() {
  return /** @type{!Array<!proto.CoreSchema.V1.Advertisement>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.CoreSchema.V1.Advertisement, 1));
};


/** @param {!Array<!proto.CoreSchema.V1.Advertisement>} value */
proto.CoreSchema.V1.GetPromiseSuitableAdvertisementsResponse.prototype.setAdvertisementsList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.CoreSchema.V1.Advertisement=} opt_value
 * @param {number=} opt_index
 * @return {!proto.CoreSchema.V1.Advertisement}
 */
proto.CoreSchema.V1.GetPromiseSuitableAdvertisementsResponse.prototype.addAdvertisements = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.CoreSchema.V1.Advertisement, opt_index);
};


proto.CoreSchema.V1.GetPromiseSuitableAdvertisementsResponse.prototype.clearAdvertisementsList = function() {
  this.setAdvertisementsList([]);
};


/**
 * repeated Decimal FiatAmounts = 2;
 * @return {!Array<!proto.CoreSchema.V1.Decimal>}
 */
proto.CoreSchema.V1.GetPromiseSuitableAdvertisementsResponse.prototype.getFiatamountsList = function() {
  return /** @type{!Array<!proto.CoreSchema.V1.Decimal>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.CoreSchema.V1.Decimal, 2));
};


/** @param {!Array<!proto.CoreSchema.V1.Decimal>} value */
proto.CoreSchema.V1.GetPromiseSuitableAdvertisementsResponse.prototype.setFiatamountsList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.CoreSchema.V1.Decimal=} opt_value
 * @param {number=} opt_index
 * @return {!proto.CoreSchema.V1.Decimal}
 */
proto.CoreSchema.V1.GetPromiseSuitableAdvertisementsResponse.prototype.addFiatamounts = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.CoreSchema.V1.Decimal, opt_index);
};


proto.CoreSchema.V1.GetPromiseSuitableAdvertisementsResponse.prototype.clearFiatamountsList = function() {
  this.setFiatamountsList([]);
};


/**
 * optional Decimal PromiseAmount = 3;
 * @return {?proto.CoreSchema.V1.Decimal}
 */
proto.CoreSchema.V1.GetPromiseSuitableAdvertisementsResponse.prototype.getPromiseamount = function() {
  return /** @type{?proto.CoreSchema.V1.Decimal} */ (
    jspb.Message.getWrapperField(this, proto.CoreSchema.V1.Decimal, 3));
};


/** @param {?proto.CoreSchema.V1.Decimal|undefined} value */
proto.CoreSchema.V1.GetPromiseSuitableAdvertisementsResponse.prototype.setPromiseamount = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


proto.CoreSchema.V1.GetPromiseSuitableAdvertisementsResponse.prototype.clearPromiseamount = function() {
  this.setPromiseamount(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.CoreSchema.V1.GetPromiseSuitableAdvertisementsResponse.prototype.hasPromiseamount = function() {
  return jspb.Message.getField(this, 3) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.CoreSchema.V1.PromiseSellByDealRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.CoreSchema.V1.PromiseSellByDealRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.CoreSchema.V1.PromiseSellByDealRequest.displayName = 'proto.CoreSchema.V1.PromiseSellByDealRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.CoreSchema.V1.PromiseSellByDealRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.CoreSchema.V1.PromiseSellByDealRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.CoreSchema.V1.PromiseSellByDealRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.CoreSchema.V1.PromiseSellByDealRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    promise: jspb.Message.getFieldWithDefault(msg, 1, ""),
    password: jspb.Message.getFieldWithDefault(msg, 2, ""),
    advertisementid: jspb.Message.getFieldWithDefault(msg, 3, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.CoreSchema.V1.PromiseSellByDealRequest}
 */
proto.CoreSchema.V1.PromiseSellByDealRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.CoreSchema.V1.PromiseSellByDealRequest;
  return proto.CoreSchema.V1.PromiseSellByDealRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.CoreSchema.V1.PromiseSellByDealRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.CoreSchema.V1.PromiseSellByDealRequest}
 */
proto.CoreSchema.V1.PromiseSellByDealRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setPromise(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setPassword(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setAdvertisementid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.CoreSchema.V1.PromiseSellByDealRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.CoreSchema.V1.PromiseSellByDealRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.CoreSchema.V1.PromiseSellByDealRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.CoreSchema.V1.PromiseSellByDealRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPromise();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getPassword();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getAdvertisementid();
  if (f !== 0) {
    writer.writeUint64(
      3,
      f
    );
  }
};


/**
 * optional string Promise = 1;
 * @return {string}
 */
proto.CoreSchema.V1.PromiseSellByDealRequest.prototype.getPromise = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.CoreSchema.V1.PromiseSellByDealRequest.prototype.setPromise = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string Password = 2;
 * @return {string}
 */
proto.CoreSchema.V1.PromiseSellByDealRequest.prototype.getPassword = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.CoreSchema.V1.PromiseSellByDealRequest.prototype.setPassword = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional uint64 AdvertisementId = 3;
 * @return {number}
 */
proto.CoreSchema.V1.PromiseSellByDealRequest.prototype.getAdvertisementid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/** @param {number} value */
proto.CoreSchema.V1.PromiseSellByDealRequest.prototype.setAdvertisementid = function(value) {
  jspb.Message.setProto3IntField(this, 3, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.CoreSchema.V1.PayInvoiceByPromiseRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.CoreSchema.V1.PayInvoiceByPromiseRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.CoreSchema.V1.PayInvoiceByPromiseRequest.displayName = 'proto.CoreSchema.V1.PayInvoiceByPromiseRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.CoreSchema.V1.PayInvoiceByPromiseRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.CoreSchema.V1.PayInvoiceByPromiseRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.CoreSchema.V1.PayInvoiceByPromiseRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.CoreSchema.V1.PayInvoiceByPromiseRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    promise: jspb.Message.getFieldWithDefault(msg, 1, ""),
    password: jspb.Message.getFieldWithDefault(msg, 2, ""),
    invoiceid: jspb.Message.getFieldWithDefault(msg, 3, 0),
    pieces: jspb.Message.getFieldWithDefault(msg, 4, 0),
    oddtype: jspb.Message.getFieldWithDefault(msg, 5, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.CoreSchema.V1.PayInvoiceByPromiseRequest}
 */
proto.CoreSchema.V1.PayInvoiceByPromiseRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.CoreSchema.V1.PayInvoiceByPromiseRequest;
  return proto.CoreSchema.V1.PayInvoiceByPromiseRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.CoreSchema.V1.PayInvoiceByPromiseRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.CoreSchema.V1.PayInvoiceByPromiseRequest}
 */
proto.CoreSchema.V1.PayInvoiceByPromiseRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setPromise(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setPassword(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setInvoiceid(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setPieces(value);
      break;
    case 5:
      var value = /** @type {!proto.CoreSchema.V1.PayInvoiceByPromiseRequest.OddTypes} */ (reader.readEnum());
      msg.setOddtype(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.CoreSchema.V1.PayInvoiceByPromiseRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.CoreSchema.V1.PayInvoiceByPromiseRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.CoreSchema.V1.PayInvoiceByPromiseRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.CoreSchema.V1.PayInvoiceByPromiseRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPromise();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getPassword();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getInvoiceid();
  if (f !== 0) {
    writer.writeUint64(
      3,
      f
    );
  }
  f = message.getPieces();
  if (f !== 0) {
    writer.writeUint32(
      4,
      f
    );
  }
  f = message.getOddtype();
  if (f !== 0.0) {
    writer.writeEnum(
      5,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.CoreSchema.V1.PayInvoiceByPromiseRequest.OddTypes = {
  NOODD: 0,
  TOBALANCE: 1,
  TOPROMISE: 2
};

/**
 * optional string Promise = 1;
 * @return {string}
 */
proto.CoreSchema.V1.PayInvoiceByPromiseRequest.prototype.getPromise = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.CoreSchema.V1.PayInvoiceByPromiseRequest.prototype.setPromise = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string Password = 2;
 * @return {string}
 */
proto.CoreSchema.V1.PayInvoiceByPromiseRequest.prototype.getPassword = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.CoreSchema.V1.PayInvoiceByPromiseRequest.prototype.setPassword = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional uint64 InvoiceId = 3;
 * @return {number}
 */
proto.CoreSchema.V1.PayInvoiceByPromiseRequest.prototype.getInvoiceid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/** @param {number} value */
proto.CoreSchema.V1.PayInvoiceByPromiseRequest.prototype.setInvoiceid = function(value) {
  jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional uint32 Pieces = 4;
 * @return {number}
 */
proto.CoreSchema.V1.PayInvoiceByPromiseRequest.prototype.getPieces = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/** @param {number} value */
proto.CoreSchema.V1.PayInvoiceByPromiseRequest.prototype.setPieces = function(value) {
  jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional OddTypes OddType = 5;
 * @return {!proto.CoreSchema.V1.PayInvoiceByPromiseRequest.OddTypes}
 */
proto.CoreSchema.V1.PayInvoiceByPromiseRequest.prototype.getOddtype = function() {
  return /** @type {!proto.CoreSchema.V1.PayInvoiceByPromiseRequest.OddTypes} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/** @param {!proto.CoreSchema.V1.PayInvoiceByPromiseRequest.OddTypes} value */
proto.CoreSchema.V1.PayInvoiceByPromiseRequest.prototype.setOddtype = function(value) {
  jspb.Message.setProto3EnumField(this, 5, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.CoreSchema.V1.Image = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.CoreSchema.V1.Image, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.CoreSchema.V1.Image.displayName = 'proto.CoreSchema.V1.Image';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.CoreSchema.V1.Image.prototype.toObject = function(opt_includeInstance) {
  return proto.CoreSchema.V1.Image.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.CoreSchema.V1.Image} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.CoreSchema.V1.Image.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    createdat: (f = msg.getCreatedat()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    preview: msg.getPreview_asB64(),
    original: msg.getOriginal_asB64(),
    ispreview: jspb.Message.getFieldWithDefault(msg, 5, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.CoreSchema.V1.Image}
 */
proto.CoreSchema.V1.Image.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.CoreSchema.V1.Image;
  return proto.CoreSchema.V1.Image.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.CoreSchema.V1.Image} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.CoreSchema.V1.Image}
 */
proto.CoreSchema.V1.Image.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setCreatedat(value);
      break;
    case 3:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setPreview(value);
      break;
    case 4:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setOriginal(value);
      break;
    case 5:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIspreview(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.CoreSchema.V1.Image.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.CoreSchema.V1.Image.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.CoreSchema.V1.Image} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.CoreSchema.V1.Image.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getCreatedat();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getPreview_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      3,
      f
    );
  }
  f = message.getOriginal_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      4,
      f
    );
  }
  f = message.getIspreview();
  if (f) {
    writer.writeBool(
      5,
      f
    );
  }
};


/**
 * optional string Id = 1;
 * @return {string}
 */
proto.CoreSchema.V1.Image.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.CoreSchema.V1.Image.prototype.setId = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional google.protobuf.Timestamp CreatedAt = 2;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.CoreSchema.V1.Image.prototype.getCreatedat = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 2));
};


/** @param {?proto.google.protobuf.Timestamp|undefined} value */
proto.CoreSchema.V1.Image.prototype.setCreatedat = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.CoreSchema.V1.Image.prototype.clearCreatedat = function() {
  this.setCreatedat(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.CoreSchema.V1.Image.prototype.hasCreatedat = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional bytes Preview = 3;
 * @return {string}
 */
proto.CoreSchema.V1.Image.prototype.getPreview = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * optional bytes Preview = 3;
 * This is a type-conversion wrapper around `getPreview()`
 * @return {string}
 */
proto.CoreSchema.V1.Image.prototype.getPreview_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getPreview()));
};


/**
 * optional bytes Preview = 3;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getPreview()`
 * @return {!Uint8Array}
 */
proto.CoreSchema.V1.Image.prototype.getPreview_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getPreview()));
};


/** @param {!(string|Uint8Array)} value */
proto.CoreSchema.V1.Image.prototype.setPreview = function(value) {
  jspb.Message.setProto3BytesField(this, 3, value);
};


/**
 * optional bytes Original = 4;
 * @return {string}
 */
proto.CoreSchema.V1.Image.prototype.getOriginal = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * optional bytes Original = 4;
 * This is a type-conversion wrapper around `getOriginal()`
 * @return {string}
 */
proto.CoreSchema.V1.Image.prototype.getOriginal_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getOriginal()));
};


/**
 * optional bytes Original = 4;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getOriginal()`
 * @return {!Uint8Array}
 */
proto.CoreSchema.V1.Image.prototype.getOriginal_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getOriginal()));
};


/** @param {!(string|Uint8Array)} value */
proto.CoreSchema.V1.Image.prototype.setOriginal = function(value) {
  jspb.Message.setProto3BytesField(this, 4, value);
};


/**
 * optional bool IsPreview = 5;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.CoreSchema.V1.Image.prototype.getIspreview = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 5, false));
};


/** @param {boolean} value */
proto.CoreSchema.V1.Image.prototype.setIspreview = function(value) {
  jspb.Message.setProto3BooleanField(this, 5, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.CoreSchema.V1.StoreImageRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.CoreSchema.V1.StoreImageRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.CoreSchema.V1.StoreImageRequest.displayName = 'proto.CoreSchema.V1.StoreImageRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.CoreSchema.V1.StoreImageRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.CoreSchema.V1.StoreImageRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.CoreSchema.V1.StoreImageRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.CoreSchema.V1.StoreImageRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    data: msg.getData_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.CoreSchema.V1.StoreImageRequest}
 */
proto.CoreSchema.V1.StoreImageRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.CoreSchema.V1.StoreImageRequest;
  return proto.CoreSchema.V1.StoreImageRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.CoreSchema.V1.StoreImageRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.CoreSchema.V1.StoreImageRequest}
 */
proto.CoreSchema.V1.StoreImageRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setData(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.CoreSchema.V1.StoreImageRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.CoreSchema.V1.StoreImageRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.CoreSchema.V1.StoreImageRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.CoreSchema.V1.StoreImageRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getData_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      2,
      f
    );
  }
};


/**
 * optional string Id = 1;
 * @return {string}
 */
proto.CoreSchema.V1.StoreImageRequest.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.CoreSchema.V1.StoreImageRequest.prototype.setId = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional bytes Data = 2;
 * @return {string}
 */
proto.CoreSchema.V1.StoreImageRequest.prototype.getData = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * optional bytes Data = 2;
 * This is a type-conversion wrapper around `getData()`
 * @return {string}
 */
proto.CoreSchema.V1.StoreImageRequest.prototype.getData_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getData()));
};


/**
 * optional bytes Data = 2;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getData()`
 * @return {!Uint8Array}
 */
proto.CoreSchema.V1.StoreImageRequest.prototype.getData_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getData()));
};


/** @param {!(string|Uint8Array)} value */
proto.CoreSchema.V1.StoreImageRequest.prototype.setData = function(value) {
  jspb.Message.setProto3BytesField(this, 2, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.CoreSchema.V1.GetImageRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.CoreSchema.V1.GetImageRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.CoreSchema.V1.GetImageRequest.displayName = 'proto.CoreSchema.V1.GetImageRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.CoreSchema.V1.GetImageRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.CoreSchema.V1.GetImageRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.CoreSchema.V1.GetImageRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.CoreSchema.V1.GetImageRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    ispreview: jspb.Message.getFieldWithDefault(msg, 2, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.CoreSchema.V1.GetImageRequest}
 */
proto.CoreSchema.V1.GetImageRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.CoreSchema.V1.GetImageRequest;
  return proto.CoreSchema.V1.GetImageRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.CoreSchema.V1.GetImageRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.CoreSchema.V1.GetImageRequest}
 */
proto.CoreSchema.V1.GetImageRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIspreview(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.CoreSchema.V1.GetImageRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.CoreSchema.V1.GetImageRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.CoreSchema.V1.GetImageRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.CoreSchema.V1.GetImageRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getIspreview();
  if (f) {
    writer.writeBool(
      2,
      f
    );
  }
};


/**
 * optional string Id = 1;
 * @return {string}
 */
proto.CoreSchema.V1.GetImageRequest.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.CoreSchema.V1.GetImageRequest.prototype.setId = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional bool IsPreview = 2;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.CoreSchema.V1.GetImageRequest.prototype.getIspreview = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 2, false));
};


/** @param {boolean} value */
proto.CoreSchema.V1.GetImageRequest.prototype.setIspreview = function(value) {
  jspb.Message.setProto3BooleanField(this, 2, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.CoreSchema.V1.InvoiceSecret = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.CoreSchema.V1.InvoiceSecret.repeatedFields_, proto.CoreSchema.V1.InvoiceSecret.oneofGroups_);
};
goog.inherits(proto.CoreSchema.V1.InvoiceSecret, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.CoreSchema.V1.InvoiceSecret.displayName = 'proto.CoreSchema.V1.InvoiceSecret';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.CoreSchema.V1.InvoiceSecret.repeatedFields_ = [3];

/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.CoreSchema.V1.InvoiceSecret.oneofGroups_ = [[5,6]];

/**
 * @enum {number}
 */
proto.CoreSchema.V1.InvoiceSecret.NullablepaymentCase = {
  NULLABLEPAYMENT_NOT_SET: 0,
  PAYMENTIDISNULL: 5,
  PAYMENTID: 6
};

/**
 * @return {proto.CoreSchema.V1.InvoiceSecret.NullablepaymentCase}
 */
proto.CoreSchema.V1.InvoiceSecret.prototype.getNullablepaymentCase = function() {
  return /** @type {proto.CoreSchema.V1.InvoiceSecret.NullablepaymentCase} */(jspb.Message.computeOneofCase(this, proto.CoreSchema.V1.InvoiceSecret.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.CoreSchema.V1.InvoiceSecret.prototype.toObject = function(opt_includeInstance) {
  return proto.CoreSchema.V1.InvoiceSecret.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.CoreSchema.V1.InvoiceSecret} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.CoreSchema.V1.InvoiceSecret.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0),
    text: jspb.Message.getFieldWithDefault(msg, 2, ""),
    imagesList: jspb.Message.getRepeatedField(msg, 3),
    order: jspb.Message.getFieldWithDefault(msg, 4, 0),
    paymentidisnull: jspb.Message.getFieldWithDefault(msg, 5, false),
    paymentid: jspb.Message.getFieldWithDefault(msg, 6, 0),
    url: jspb.Message.getFieldWithDefault(msg, 7, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.CoreSchema.V1.InvoiceSecret}
 */
proto.CoreSchema.V1.InvoiceSecret.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.CoreSchema.V1.InvoiceSecret;
  return proto.CoreSchema.V1.InvoiceSecret.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.CoreSchema.V1.InvoiceSecret} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.CoreSchema.V1.InvoiceSecret}
 */
proto.CoreSchema.V1.InvoiceSecret.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setText(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.addImages(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setOrder(value);
      break;
    case 5:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setPaymentidisnull(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setPaymentid(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setUrl(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.CoreSchema.V1.InvoiceSecret.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.CoreSchema.V1.InvoiceSecret.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.CoreSchema.V1.InvoiceSecret} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.CoreSchema.V1.InvoiceSecret.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeUint64(
      1,
      f
    );
  }
  f = message.getText();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getImagesList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      3,
      f
    );
  }
  f = message.getOrder();
  if (f !== 0) {
    writer.writeUint32(
      4,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeBool(
      5,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeUint64(
      6,
      f
    );
  }
  f = message.getUrl();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
};


/**
 * optional uint64 Id = 1;
 * @return {number}
 */
proto.CoreSchema.V1.InvoiceSecret.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.CoreSchema.V1.InvoiceSecret.prototype.setId = function(value) {
  jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string Text = 2;
 * @return {string}
 */
proto.CoreSchema.V1.InvoiceSecret.prototype.getText = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.CoreSchema.V1.InvoiceSecret.prototype.setText = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * repeated string Images = 3;
 * @return {!Array<string>}
 */
proto.CoreSchema.V1.InvoiceSecret.prototype.getImagesList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 3));
};


/** @param {!Array<string>} value */
proto.CoreSchema.V1.InvoiceSecret.prototype.setImagesList = function(value) {
  jspb.Message.setField(this, 3, value || []);
};


/**
 * @param {!string} value
 * @param {number=} opt_index
 */
proto.CoreSchema.V1.InvoiceSecret.prototype.addImages = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 3, value, opt_index);
};


proto.CoreSchema.V1.InvoiceSecret.prototype.clearImagesList = function() {
  this.setImagesList([]);
};


/**
 * optional uint32 Order = 4;
 * @return {number}
 */
proto.CoreSchema.V1.InvoiceSecret.prototype.getOrder = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/** @param {number} value */
proto.CoreSchema.V1.InvoiceSecret.prototype.setOrder = function(value) {
  jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional bool PaymentIdIsNull = 5;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.CoreSchema.V1.InvoiceSecret.prototype.getPaymentidisnull = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 5, false));
};


/** @param {boolean} value */
proto.CoreSchema.V1.InvoiceSecret.prototype.setPaymentidisnull = function(value) {
  jspb.Message.setOneofField(this, 5, proto.CoreSchema.V1.InvoiceSecret.oneofGroups_[0], value);
};


proto.CoreSchema.V1.InvoiceSecret.prototype.clearPaymentidisnull = function() {
  jspb.Message.setOneofField(this, 5, proto.CoreSchema.V1.InvoiceSecret.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.CoreSchema.V1.InvoiceSecret.prototype.hasPaymentidisnull = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional uint64 PaymentId = 6;
 * @return {number}
 */
proto.CoreSchema.V1.InvoiceSecret.prototype.getPaymentid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/** @param {number} value */
proto.CoreSchema.V1.InvoiceSecret.prototype.setPaymentid = function(value) {
  jspb.Message.setOneofField(this, 6, proto.CoreSchema.V1.InvoiceSecret.oneofGroups_[0], value);
};


proto.CoreSchema.V1.InvoiceSecret.prototype.clearPaymentid = function() {
  jspb.Message.setOneofField(this, 6, proto.CoreSchema.V1.InvoiceSecret.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.CoreSchema.V1.InvoiceSecret.prototype.hasPaymentid = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional string Url = 7;
 * @return {string}
 */
proto.CoreSchema.V1.InvoiceSecret.prototype.getUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/** @param {string} value */
proto.CoreSchema.V1.InvoiceSecret.prototype.setUrl = function(value) {
  jspb.Message.setProto3StringField(this, 7, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.CoreSchema.V1.InvoiceSecretsList = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.CoreSchema.V1.InvoiceSecretsList.repeatedFields_, null);
};
goog.inherits(proto.CoreSchema.V1.InvoiceSecretsList, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.CoreSchema.V1.InvoiceSecretsList.displayName = 'proto.CoreSchema.V1.InvoiceSecretsList';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.CoreSchema.V1.InvoiceSecretsList.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.CoreSchema.V1.InvoiceSecretsList.prototype.toObject = function(opt_includeInstance) {
  return proto.CoreSchema.V1.InvoiceSecretsList.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.CoreSchema.V1.InvoiceSecretsList} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.CoreSchema.V1.InvoiceSecretsList.toObject = function(includeInstance, msg) {
  var f, obj = {
    secretsList: jspb.Message.toObjectList(msg.getSecretsList(),
    proto.CoreSchema.V1.InvoiceSecret.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.CoreSchema.V1.InvoiceSecretsList}
 */
proto.CoreSchema.V1.InvoiceSecretsList.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.CoreSchema.V1.InvoiceSecretsList;
  return proto.CoreSchema.V1.InvoiceSecretsList.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.CoreSchema.V1.InvoiceSecretsList} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.CoreSchema.V1.InvoiceSecretsList}
 */
proto.CoreSchema.V1.InvoiceSecretsList.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.CoreSchema.V1.InvoiceSecret;
      reader.readMessage(value,proto.CoreSchema.V1.InvoiceSecret.deserializeBinaryFromReader);
      msg.addSecrets(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.CoreSchema.V1.InvoiceSecretsList.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.CoreSchema.V1.InvoiceSecretsList.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.CoreSchema.V1.InvoiceSecretsList} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.CoreSchema.V1.InvoiceSecretsList.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSecretsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.CoreSchema.V1.InvoiceSecret.serializeBinaryToWriter
    );
  }
};


/**
 * repeated InvoiceSecret Secrets = 1;
 * @return {!Array<!proto.CoreSchema.V1.InvoiceSecret>}
 */
proto.CoreSchema.V1.InvoiceSecretsList.prototype.getSecretsList = function() {
  return /** @type{!Array<!proto.CoreSchema.V1.InvoiceSecret>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.CoreSchema.V1.InvoiceSecret, 1));
};


/** @param {!Array<!proto.CoreSchema.V1.InvoiceSecret>} value */
proto.CoreSchema.V1.InvoiceSecretsList.prototype.setSecretsList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.CoreSchema.V1.InvoiceSecret=} opt_value
 * @param {number=} opt_index
 * @return {!proto.CoreSchema.V1.InvoiceSecret}
 */
proto.CoreSchema.V1.InvoiceSecretsList.prototype.addSecrets = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.CoreSchema.V1.InvoiceSecret, opt_index);
};


proto.CoreSchema.V1.InvoiceSecretsList.prototype.clearSecretsList = function() {
  this.setSecretsList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.CoreSchema.V1.GetInvoiceSecretsRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.CoreSchema.V1.GetInvoiceSecretsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.CoreSchema.V1.GetInvoiceSecretsRequest.displayName = 'proto.CoreSchema.V1.GetInvoiceSecretsRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.CoreSchema.V1.GetInvoiceSecretsRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.CoreSchema.V1.GetInvoiceSecretsRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.CoreSchema.V1.GetInvoiceSecretsRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.CoreSchema.V1.GetInvoiceSecretsRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    invoiceid: jspb.Message.getFieldWithDefault(msg, 1, 0),
    issold: jspb.Message.getFieldWithDefault(msg, 2, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.CoreSchema.V1.GetInvoiceSecretsRequest}
 */
proto.CoreSchema.V1.GetInvoiceSecretsRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.CoreSchema.V1.GetInvoiceSecretsRequest;
  return proto.CoreSchema.V1.GetInvoiceSecretsRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.CoreSchema.V1.GetInvoiceSecretsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.CoreSchema.V1.GetInvoiceSecretsRequest}
 */
proto.CoreSchema.V1.GetInvoiceSecretsRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setInvoiceid(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIssold(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.CoreSchema.V1.GetInvoiceSecretsRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.CoreSchema.V1.GetInvoiceSecretsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.CoreSchema.V1.GetInvoiceSecretsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.CoreSchema.V1.GetInvoiceSecretsRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getInvoiceid();
  if (f !== 0) {
    writer.writeUint64(
      1,
      f
    );
  }
  f = message.getIssold();
  if (f) {
    writer.writeBool(
      2,
      f
    );
  }
};


/**
 * optional uint64 InvoiceId = 1;
 * @return {number}
 */
proto.CoreSchema.V1.GetInvoiceSecretsRequest.prototype.getInvoiceid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.CoreSchema.V1.GetInvoiceSecretsRequest.prototype.setInvoiceid = function(value) {
  jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional bool isSold = 2;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.CoreSchema.V1.GetInvoiceSecretsRequest.prototype.getIssold = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 2, false));
};


/** @param {boolean} value */
proto.CoreSchema.V1.GetInvoiceSecretsRequest.prototype.setIssold = function(value) {
  jspb.Message.setProto3BooleanField(this, 2, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.CoreSchema.V1.ChangeInvoiceSecretRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.CoreSchema.V1.ChangeInvoiceSecretRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.CoreSchema.V1.ChangeInvoiceSecretRequest.displayName = 'proto.CoreSchema.V1.ChangeInvoiceSecretRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.CoreSchema.V1.ChangeInvoiceSecretRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.CoreSchema.V1.ChangeInvoiceSecretRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.CoreSchema.V1.ChangeInvoiceSecretRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.CoreSchema.V1.ChangeInvoiceSecretRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    secretid: jspb.Message.getFieldWithDefault(msg, 1, 0),
    operation: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.CoreSchema.V1.ChangeInvoiceSecretRequest}
 */
proto.CoreSchema.V1.ChangeInvoiceSecretRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.CoreSchema.V1.ChangeInvoiceSecretRequest;
  return proto.CoreSchema.V1.ChangeInvoiceSecretRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.CoreSchema.V1.ChangeInvoiceSecretRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.CoreSchema.V1.ChangeInvoiceSecretRequest}
 */
proto.CoreSchema.V1.ChangeInvoiceSecretRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setSecretid(value);
      break;
    case 2:
      var value = /** @type {!proto.CoreSchema.V1.ChangeInvoiceSecretRequest.SecretOperations} */ (reader.readEnum());
      msg.setOperation(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.CoreSchema.V1.ChangeInvoiceSecretRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.CoreSchema.V1.ChangeInvoiceSecretRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.CoreSchema.V1.ChangeInvoiceSecretRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.CoreSchema.V1.ChangeInvoiceSecretRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSecretid();
  if (f !== 0) {
    writer.writeUint64(
      1,
      f
    );
  }
  f = message.getOperation();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.CoreSchema.V1.ChangeInvoiceSecretRequest.SecretOperations = {
  TOUP: 0,
  TODOWN: 1,
  TOTOP: 2,
  TOBOTTOM: 3,
  REMOVE: 5
};

/**
 * optional uint64 SecretId = 1;
 * @return {number}
 */
proto.CoreSchema.V1.ChangeInvoiceSecretRequest.prototype.getSecretid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.CoreSchema.V1.ChangeInvoiceSecretRequest.prototype.setSecretid = function(value) {
  jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional SecretOperations Operation = 2;
 * @return {!proto.CoreSchema.V1.ChangeInvoiceSecretRequest.SecretOperations}
 */
proto.CoreSchema.V1.ChangeInvoiceSecretRequest.prototype.getOperation = function() {
  return /** @type {!proto.CoreSchema.V1.ChangeInvoiceSecretRequest.SecretOperations} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {!proto.CoreSchema.V1.ChangeInvoiceSecretRequest.SecretOperations} value */
proto.CoreSchema.V1.ChangeInvoiceSecretRequest.prototype.setOperation = function(value) {
  jspb.Message.setProto3EnumField(this, 2, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.CoreSchema.V1.CreateInvoiceSecretRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.CoreSchema.V1.CreateInvoiceSecretRequest.repeatedFields_, null);
};
goog.inherits(proto.CoreSchema.V1.CreateInvoiceSecretRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.CoreSchema.V1.CreateInvoiceSecretRequest.displayName = 'proto.CoreSchema.V1.CreateInvoiceSecretRequest';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.CoreSchema.V1.CreateInvoiceSecretRequest.repeatedFields_ = [3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.CoreSchema.V1.CreateInvoiceSecretRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.CoreSchema.V1.CreateInvoiceSecretRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.CoreSchema.V1.CreateInvoiceSecretRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.CoreSchema.V1.CreateInvoiceSecretRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    invoiceid: jspb.Message.getFieldWithDefault(msg, 1, 0),
    text: jspb.Message.getFieldWithDefault(msg, 2, ""),
    imagesList: jspb.Message.getRepeatedField(msg, 3),
    order: jspb.Message.getFieldWithDefault(msg, 4, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.CoreSchema.V1.CreateInvoiceSecretRequest}
 */
proto.CoreSchema.V1.CreateInvoiceSecretRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.CoreSchema.V1.CreateInvoiceSecretRequest;
  return proto.CoreSchema.V1.CreateInvoiceSecretRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.CoreSchema.V1.CreateInvoiceSecretRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.CoreSchema.V1.CreateInvoiceSecretRequest}
 */
proto.CoreSchema.V1.CreateInvoiceSecretRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setInvoiceid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setText(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.addImages(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setOrder(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.CoreSchema.V1.CreateInvoiceSecretRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.CoreSchema.V1.CreateInvoiceSecretRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.CoreSchema.V1.CreateInvoiceSecretRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.CoreSchema.V1.CreateInvoiceSecretRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getInvoiceid();
  if (f !== 0) {
    writer.writeUint64(
      1,
      f
    );
  }
  f = message.getText();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getImagesList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      3,
      f
    );
  }
  f = message.getOrder();
  if (f !== 0) {
    writer.writeUint32(
      4,
      f
    );
  }
};


/**
 * optional uint64 InvoiceId = 1;
 * @return {number}
 */
proto.CoreSchema.V1.CreateInvoiceSecretRequest.prototype.getInvoiceid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.CoreSchema.V1.CreateInvoiceSecretRequest.prototype.setInvoiceid = function(value) {
  jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string Text = 2;
 * @return {string}
 */
proto.CoreSchema.V1.CreateInvoiceSecretRequest.prototype.getText = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.CoreSchema.V1.CreateInvoiceSecretRequest.prototype.setText = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * repeated string Images = 3;
 * @return {!Array<string>}
 */
proto.CoreSchema.V1.CreateInvoiceSecretRequest.prototype.getImagesList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 3));
};


/** @param {!Array<string>} value */
proto.CoreSchema.V1.CreateInvoiceSecretRequest.prototype.setImagesList = function(value) {
  jspb.Message.setField(this, 3, value || []);
};


/**
 * @param {!string} value
 * @param {number=} opt_index
 */
proto.CoreSchema.V1.CreateInvoiceSecretRequest.prototype.addImages = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 3, value, opt_index);
};


proto.CoreSchema.V1.CreateInvoiceSecretRequest.prototype.clearImagesList = function() {
  this.setImagesList([]);
};


/**
 * optional uint32 Order = 4;
 * @return {number}
 */
proto.CoreSchema.V1.CreateInvoiceSecretRequest.prototype.getOrder = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/** @param {number} value */
proto.CoreSchema.V1.CreateInvoiceSecretRequest.prototype.setOrder = function(value) {
  jspb.Message.setProto3IntField(this, 4, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.CoreSchema.V1.UpdateInvoiceSecretRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.CoreSchema.V1.UpdateInvoiceSecretRequest.repeatedFields_, null);
};
goog.inherits(proto.CoreSchema.V1.UpdateInvoiceSecretRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.CoreSchema.V1.UpdateInvoiceSecretRequest.displayName = 'proto.CoreSchema.V1.UpdateInvoiceSecretRequest';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.CoreSchema.V1.UpdateInvoiceSecretRequest.repeatedFields_ = [4];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.CoreSchema.V1.UpdateInvoiceSecretRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.CoreSchema.V1.UpdateInvoiceSecretRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.CoreSchema.V1.UpdateInvoiceSecretRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.CoreSchema.V1.UpdateInvoiceSecretRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    secretid: jspb.Message.getFieldWithDefault(msg, 2, 0),
    text: jspb.Message.getFieldWithDefault(msg, 3, ""),
    imagesList: jspb.Message.getRepeatedField(msg, 4),
    order: jspb.Message.getFieldWithDefault(msg, 5, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.CoreSchema.V1.UpdateInvoiceSecretRequest}
 */
proto.CoreSchema.V1.UpdateInvoiceSecretRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.CoreSchema.V1.UpdateInvoiceSecretRequest;
  return proto.CoreSchema.V1.UpdateInvoiceSecretRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.CoreSchema.V1.UpdateInvoiceSecretRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.CoreSchema.V1.UpdateInvoiceSecretRequest}
 */
proto.CoreSchema.V1.UpdateInvoiceSecretRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 2:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setSecretid(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setText(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.addImages(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setOrder(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.CoreSchema.V1.UpdateInvoiceSecretRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.CoreSchema.V1.UpdateInvoiceSecretRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.CoreSchema.V1.UpdateInvoiceSecretRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.CoreSchema.V1.UpdateInvoiceSecretRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSecretid();
  if (f !== 0) {
    writer.writeUint64(
      2,
      f
    );
  }
  f = message.getText();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getImagesList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      4,
      f
    );
  }
  f = message.getOrder();
  if (f !== 0) {
    writer.writeUint32(
      5,
      f
    );
  }
};


/**
 * optional uint64 SecretId = 2;
 * @return {number}
 */
proto.CoreSchema.V1.UpdateInvoiceSecretRequest.prototype.getSecretid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.CoreSchema.V1.UpdateInvoiceSecretRequest.prototype.setSecretid = function(value) {
  jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional string Text = 3;
 * @return {string}
 */
proto.CoreSchema.V1.UpdateInvoiceSecretRequest.prototype.getText = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.CoreSchema.V1.UpdateInvoiceSecretRequest.prototype.setText = function(value) {
  jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * repeated string Images = 4;
 * @return {!Array<string>}
 */
proto.CoreSchema.V1.UpdateInvoiceSecretRequest.prototype.getImagesList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 4));
};


/** @param {!Array<string>} value */
proto.CoreSchema.V1.UpdateInvoiceSecretRequest.prototype.setImagesList = function(value) {
  jspb.Message.setField(this, 4, value || []);
};


/**
 * @param {!string} value
 * @param {number=} opt_index
 */
proto.CoreSchema.V1.UpdateInvoiceSecretRequest.prototype.addImages = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 4, value, opt_index);
};


proto.CoreSchema.V1.UpdateInvoiceSecretRequest.prototype.clearImagesList = function() {
  this.setImagesList([]);
};


/**
 * optional uint32 Order = 5;
 * @return {number}
 */
proto.CoreSchema.V1.UpdateInvoiceSecretRequest.prototype.getOrder = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/** @param {number} value */
proto.CoreSchema.V1.UpdateInvoiceSecretRequest.prototype.setOrder = function(value) {
  jspb.Message.setProto3IntField(this, 5, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.CoreSchema.V1.PayInvoiceFromLNRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.CoreSchema.V1.PayInvoiceFromLNRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.CoreSchema.V1.PayInvoiceFromLNRequest.displayName = 'proto.CoreSchema.V1.PayInvoiceFromLNRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.CoreSchema.V1.PayInvoiceFromLNRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.CoreSchema.V1.PayInvoiceFromLNRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.CoreSchema.V1.PayInvoiceFromLNRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.CoreSchema.V1.PayInvoiceFromLNRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    invoiceid: jspb.Message.getFieldWithDefault(msg, 1, 0),
    pieces: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.CoreSchema.V1.PayInvoiceFromLNRequest}
 */
proto.CoreSchema.V1.PayInvoiceFromLNRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.CoreSchema.V1.PayInvoiceFromLNRequest;
  return proto.CoreSchema.V1.PayInvoiceFromLNRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.CoreSchema.V1.PayInvoiceFromLNRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.CoreSchema.V1.PayInvoiceFromLNRequest}
 */
proto.CoreSchema.V1.PayInvoiceFromLNRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setInvoiceid(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setPieces(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.CoreSchema.V1.PayInvoiceFromLNRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.CoreSchema.V1.PayInvoiceFromLNRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.CoreSchema.V1.PayInvoiceFromLNRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.CoreSchema.V1.PayInvoiceFromLNRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getInvoiceid();
  if (f !== 0) {
    writer.writeUint64(
      1,
      f
    );
  }
  f = message.getPieces();
  if (f !== 0) {
    writer.writeUint32(
      2,
      f
    );
  }
};


/**
 * optional uint64 InvoiceId = 1;
 * @return {number}
 */
proto.CoreSchema.V1.PayInvoiceFromLNRequest.prototype.getInvoiceid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.CoreSchema.V1.PayInvoiceFromLNRequest.prototype.setInvoiceid = function(value) {
  jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional uint32 Pieces = 2;
 * @return {number}
 */
proto.CoreSchema.V1.PayInvoiceFromLNRequest.prototype.getPieces = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.CoreSchema.V1.PayInvoiceFromLNRequest.prototype.setPieces = function(value) {
  jspb.Message.setProto3IntField(this, 2, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.CoreSchema.V1.LNWithdrawalRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.CoreSchema.V1.LNWithdrawalRequest.oneofGroups_);
};
goog.inherits(proto.CoreSchema.V1.LNWithdrawalRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.CoreSchema.V1.LNWithdrawalRequest.displayName = 'proto.CoreSchema.V1.LNWithdrawalRequest';
}
/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.CoreSchema.V1.LNWithdrawalRequest.oneofGroups_ = [[2,3]];

/**
 * @enum {number}
 */
proto.CoreSchema.V1.LNWithdrawalRequest.AmountnullableCase = {
  AMOUNTNULLABLE_NOT_SET: 0,
  AMOUNT: 2,
  AMOUNTISNULL: 3
};

/**
 * @return {proto.CoreSchema.V1.LNWithdrawalRequest.AmountnullableCase}
 */
proto.CoreSchema.V1.LNWithdrawalRequest.prototype.getAmountnullableCase = function() {
  return /** @type {proto.CoreSchema.V1.LNWithdrawalRequest.AmountnullableCase} */(jspb.Message.computeOneofCase(this, proto.CoreSchema.V1.LNWithdrawalRequest.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.CoreSchema.V1.LNWithdrawalRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.CoreSchema.V1.LNWithdrawalRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.CoreSchema.V1.LNWithdrawalRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.CoreSchema.V1.LNWithdrawalRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    invoice: jspb.Message.getFieldWithDefault(msg, 1, ""),
    amount: (f = msg.getAmount()) && proto.CoreSchema.V1.Decimal.toObject(includeInstance, f),
    amountisnull: jspb.Message.getFieldWithDefault(msg, 3, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.CoreSchema.V1.LNWithdrawalRequest}
 */
proto.CoreSchema.V1.LNWithdrawalRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.CoreSchema.V1.LNWithdrawalRequest;
  return proto.CoreSchema.V1.LNWithdrawalRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.CoreSchema.V1.LNWithdrawalRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.CoreSchema.V1.LNWithdrawalRequest}
 */
proto.CoreSchema.V1.LNWithdrawalRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setInvoice(value);
      break;
    case 2:
      var value = new proto.CoreSchema.V1.Decimal;
      reader.readMessage(value,proto.CoreSchema.V1.Decimal.deserializeBinaryFromReader);
      msg.setAmount(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setAmountisnull(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.CoreSchema.V1.LNWithdrawalRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.CoreSchema.V1.LNWithdrawalRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.CoreSchema.V1.LNWithdrawalRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.CoreSchema.V1.LNWithdrawalRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getInvoice();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getAmount();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.CoreSchema.V1.Decimal.serializeBinaryToWriter
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeBool(
      3,
      f
    );
  }
};


/**
 * optional string Invoice = 1;
 * @return {string}
 */
proto.CoreSchema.V1.LNWithdrawalRequest.prototype.getInvoice = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.CoreSchema.V1.LNWithdrawalRequest.prototype.setInvoice = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional Decimal Amount = 2;
 * @return {?proto.CoreSchema.V1.Decimal}
 */
proto.CoreSchema.V1.LNWithdrawalRequest.prototype.getAmount = function() {
  return /** @type{?proto.CoreSchema.V1.Decimal} */ (
    jspb.Message.getWrapperField(this, proto.CoreSchema.V1.Decimal, 2));
};


/** @param {?proto.CoreSchema.V1.Decimal|undefined} value */
proto.CoreSchema.V1.LNWithdrawalRequest.prototype.setAmount = function(value) {
  jspb.Message.setOneofWrapperField(this, 2, proto.CoreSchema.V1.LNWithdrawalRequest.oneofGroups_[0], value);
};


proto.CoreSchema.V1.LNWithdrawalRequest.prototype.clearAmount = function() {
  this.setAmount(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.CoreSchema.V1.LNWithdrawalRequest.prototype.hasAmount = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional bool AmountIsNull = 3;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.CoreSchema.V1.LNWithdrawalRequest.prototype.getAmountisnull = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 3, false));
};


/** @param {boolean} value */
proto.CoreSchema.V1.LNWithdrawalRequest.prototype.setAmountisnull = function(value) {
  jspb.Message.setOneofField(this, 3, proto.CoreSchema.V1.LNWithdrawalRequest.oneofGroups_[0], value);
};


proto.CoreSchema.V1.LNWithdrawalRequest.prototype.clearAmountisnull = function() {
  jspb.Message.setOneofField(this, 3, proto.CoreSchema.V1.LNWithdrawalRequest.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.CoreSchema.V1.LNWithdrawalRequest.prototype.hasAmountisnull = function() {
  return jspb.Message.getField(this, 3) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.CoreSchema.V1.LNDepositRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.CoreSchema.V1.LNDepositRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.CoreSchema.V1.LNDepositRequest.displayName = 'proto.CoreSchema.V1.LNDepositRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.CoreSchema.V1.LNDepositRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.CoreSchema.V1.LNDepositRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.CoreSchema.V1.LNDepositRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.CoreSchema.V1.LNDepositRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    amount: (f = msg.getAmount()) && proto.CoreSchema.V1.Decimal.toObject(includeInstance, f),
    description: jspb.Message.getFieldWithDefault(msg, 2, ""),
    expiresin: jspb.Message.getFieldWithDefault(msg, 3, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.CoreSchema.V1.LNDepositRequest}
 */
proto.CoreSchema.V1.LNDepositRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.CoreSchema.V1.LNDepositRequest;
  return proto.CoreSchema.V1.LNDepositRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.CoreSchema.V1.LNDepositRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.CoreSchema.V1.LNDepositRequest}
 */
proto.CoreSchema.V1.LNDepositRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.CoreSchema.V1.Decimal;
      reader.readMessage(value,proto.CoreSchema.V1.Decimal.deserializeBinaryFromReader);
      msg.setAmount(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setExpiresin(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.CoreSchema.V1.LNDepositRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.CoreSchema.V1.LNDepositRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.CoreSchema.V1.LNDepositRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.CoreSchema.V1.LNDepositRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAmount();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.CoreSchema.V1.Decimal.serializeBinaryToWriter
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getExpiresin();
  if (f !== 0) {
    writer.writeUint32(
      3,
      f
    );
  }
};


/**
 * optional Decimal Amount = 1;
 * @return {?proto.CoreSchema.V1.Decimal}
 */
proto.CoreSchema.V1.LNDepositRequest.prototype.getAmount = function() {
  return /** @type{?proto.CoreSchema.V1.Decimal} */ (
    jspb.Message.getWrapperField(this, proto.CoreSchema.V1.Decimal, 1));
};


/** @param {?proto.CoreSchema.V1.Decimal|undefined} value */
proto.CoreSchema.V1.LNDepositRequest.prototype.setAmount = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.CoreSchema.V1.LNDepositRequest.prototype.clearAmount = function() {
  this.setAmount(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.CoreSchema.V1.LNDepositRequest.prototype.hasAmount = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string Description = 2;
 * @return {string}
 */
proto.CoreSchema.V1.LNDepositRequest.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.CoreSchema.V1.LNDepositRequest.prototype.setDescription = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional uint32 ExpiresIn = 3;
 * @return {number}
 */
proto.CoreSchema.V1.LNDepositRequest.prototype.getExpiresin = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/** @param {number} value */
proto.CoreSchema.V1.LNDepositRequest.prototype.setExpiresin = function(value) {
  jspb.Message.setProto3IntField(this, 3, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.CoreSchema.V1.LNDepositResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.CoreSchema.V1.LNDepositResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.CoreSchema.V1.LNDepositResponse.displayName = 'proto.CoreSchema.V1.LNDepositResponse';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.CoreSchema.V1.LNDepositResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.CoreSchema.V1.LNDepositResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.CoreSchema.V1.LNDepositResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.CoreSchema.V1.LNDepositResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    invoice: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.CoreSchema.V1.LNDepositResponse}
 */
proto.CoreSchema.V1.LNDepositResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.CoreSchema.V1.LNDepositResponse;
  return proto.CoreSchema.V1.LNDepositResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.CoreSchema.V1.LNDepositResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.CoreSchema.V1.LNDepositResponse}
 */
proto.CoreSchema.V1.LNDepositResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setInvoice(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.CoreSchema.V1.LNDepositResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.CoreSchema.V1.LNDepositResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.CoreSchema.V1.LNDepositResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.CoreSchema.V1.LNDepositResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getInvoice();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string Invoice = 1;
 * @return {string}
 */
proto.CoreSchema.V1.LNDepositResponse.prototype.getInvoice = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.CoreSchema.V1.LNDepositResponse.prototype.setInvoice = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.CoreSchema.V1.LNInvoice = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.CoreSchema.V1.LNInvoice.oneofGroups_);
};
goog.inherits(proto.CoreSchema.V1.LNInvoice, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.CoreSchema.V1.LNInvoice.displayName = 'proto.CoreSchema.V1.LNInvoice';
}
/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.CoreSchema.V1.LNInvoice.oneofGroups_ = [[8,9]];

/**
 * @enum {number}
 */
proto.CoreSchema.V1.LNInvoice.RelationsCase = {
  RELATIONS_NOT_SET: 0,
  NORELATIONS: 8,
  PAYMENTID: 9
};

/**
 * @return {proto.CoreSchema.V1.LNInvoice.RelationsCase}
 */
proto.CoreSchema.V1.LNInvoice.prototype.getRelationsCase = function() {
  return /** @type {proto.CoreSchema.V1.LNInvoice.RelationsCase} */(jspb.Message.computeOneofCase(this, proto.CoreSchema.V1.LNInvoice.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.CoreSchema.V1.LNInvoice.prototype.toObject = function(opt_includeInstance) {
  return proto.CoreSchema.V1.LNInvoice.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.CoreSchema.V1.LNInvoice} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.CoreSchema.V1.LNInvoice.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    amount: (f = msg.getAmount()) && proto.CoreSchema.V1.Decimal.toObject(includeInstance, f),
    description: jspb.Message.getFieldWithDefault(msg, 3, ""),
    expiresin: jspb.Message.getFieldWithDefault(msg, 4, 0),
    createdat: (f = msg.getCreatedat()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    bolt11: jspb.Message.getFieldWithDefault(msg, 6, ""),
    ispaid: jspb.Message.getFieldWithDefault(msg, 7, false),
    norelations: jspb.Message.getFieldWithDefault(msg, 8, false),
    paymentid: jspb.Message.getFieldWithDefault(msg, 9, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.CoreSchema.V1.LNInvoice}
 */
proto.CoreSchema.V1.LNInvoice.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.CoreSchema.V1.LNInvoice;
  return proto.CoreSchema.V1.LNInvoice.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.CoreSchema.V1.LNInvoice} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.CoreSchema.V1.LNInvoice}
 */
proto.CoreSchema.V1.LNInvoice.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = new proto.CoreSchema.V1.Decimal;
      reader.readMessage(value,proto.CoreSchema.V1.Decimal.deserializeBinaryFromReader);
      msg.setAmount(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setExpiresin(value);
      break;
    case 5:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setCreatedat(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setBolt11(value);
      break;
    case 7:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIspaid(value);
      break;
    case 8:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setNorelations(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setPaymentid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.CoreSchema.V1.LNInvoice.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.CoreSchema.V1.LNInvoice.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.CoreSchema.V1.LNInvoice} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.CoreSchema.V1.LNInvoice.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getAmount();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.CoreSchema.V1.Decimal.serializeBinaryToWriter
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getExpiresin();
  if (f !== 0) {
    writer.writeUint32(
      4,
      f
    );
  }
  f = message.getCreatedat();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getBolt11();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getIspaid();
  if (f) {
    writer.writeBool(
      7,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 8));
  if (f != null) {
    writer.writeBool(
      8,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 9));
  if (f != null) {
    writer.writeUint64(
      9,
      f
    );
  }
};


/**
 * optional string Id = 1;
 * @return {string}
 */
proto.CoreSchema.V1.LNInvoice.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.CoreSchema.V1.LNInvoice.prototype.setId = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional Decimal Amount = 2;
 * @return {?proto.CoreSchema.V1.Decimal}
 */
proto.CoreSchema.V1.LNInvoice.prototype.getAmount = function() {
  return /** @type{?proto.CoreSchema.V1.Decimal} */ (
    jspb.Message.getWrapperField(this, proto.CoreSchema.V1.Decimal, 2));
};


/** @param {?proto.CoreSchema.V1.Decimal|undefined} value */
proto.CoreSchema.V1.LNInvoice.prototype.setAmount = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.CoreSchema.V1.LNInvoice.prototype.clearAmount = function() {
  this.setAmount(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.CoreSchema.V1.LNInvoice.prototype.hasAmount = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string Description = 3;
 * @return {string}
 */
proto.CoreSchema.V1.LNInvoice.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.CoreSchema.V1.LNInvoice.prototype.setDescription = function(value) {
  jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional uint32 ExpiresIn = 4;
 * @return {number}
 */
proto.CoreSchema.V1.LNInvoice.prototype.getExpiresin = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/** @param {number} value */
proto.CoreSchema.V1.LNInvoice.prototype.setExpiresin = function(value) {
  jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional google.protobuf.Timestamp CreatedAt = 5;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.CoreSchema.V1.LNInvoice.prototype.getCreatedat = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 5));
};


/** @param {?proto.google.protobuf.Timestamp|undefined} value */
proto.CoreSchema.V1.LNInvoice.prototype.setCreatedat = function(value) {
  jspb.Message.setWrapperField(this, 5, value);
};


proto.CoreSchema.V1.LNInvoice.prototype.clearCreatedat = function() {
  this.setCreatedat(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.CoreSchema.V1.LNInvoice.prototype.hasCreatedat = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional string Bolt11 = 6;
 * @return {string}
 */
proto.CoreSchema.V1.LNInvoice.prototype.getBolt11 = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/** @param {string} value */
proto.CoreSchema.V1.LNInvoice.prototype.setBolt11 = function(value) {
  jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional bool IsPaid = 7;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.CoreSchema.V1.LNInvoice.prototype.getIspaid = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 7, false));
};


/** @param {boolean} value */
proto.CoreSchema.V1.LNInvoice.prototype.setIspaid = function(value) {
  jspb.Message.setProto3BooleanField(this, 7, value);
};


/**
 * optional bool NoRelations = 8;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.CoreSchema.V1.LNInvoice.prototype.getNorelations = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 8, false));
};


/** @param {boolean} value */
proto.CoreSchema.V1.LNInvoice.prototype.setNorelations = function(value) {
  jspb.Message.setOneofField(this, 8, proto.CoreSchema.V1.LNInvoice.oneofGroups_[0], value);
};


proto.CoreSchema.V1.LNInvoice.prototype.clearNorelations = function() {
  jspb.Message.setOneofField(this, 8, proto.CoreSchema.V1.LNInvoice.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.CoreSchema.V1.LNInvoice.prototype.hasNorelations = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional uint64 PaymentId = 9;
 * @return {number}
 */
proto.CoreSchema.V1.LNInvoice.prototype.getPaymentid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/** @param {number} value */
proto.CoreSchema.V1.LNInvoice.prototype.setPaymentid = function(value) {
  jspb.Message.setOneofField(this, 9, proto.CoreSchema.V1.LNInvoice.oneofGroups_[0], value);
};


proto.CoreSchema.V1.LNInvoice.prototype.clearPaymentid = function() {
  jspb.Message.setOneofField(this, 9, proto.CoreSchema.V1.LNInvoice.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.CoreSchema.V1.LNInvoice.prototype.hasPaymentid = function() {
  return jspb.Message.getField(this, 9) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.CoreSchema.V1.LNPayment = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.CoreSchema.V1.LNPayment, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.CoreSchema.V1.LNPayment.displayName = 'proto.CoreSchema.V1.LNPayment';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.CoreSchema.V1.LNPayment.prototype.toObject = function(opt_includeInstance) {
  return proto.CoreSchema.V1.LNPayment.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.CoreSchema.V1.LNPayment} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.CoreSchema.V1.LNPayment.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    amount: (f = msg.getAmount()) && proto.CoreSchema.V1.Decimal.toObject(includeInstance, f),
    description: jspb.Message.getFieldWithDefault(msg, 3, ""),
    bolt11: jspb.Message.getFieldWithDefault(msg, 4, ""),
    createdat: (f = msg.getCreatedat()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    status: jspb.Message.getFieldWithDefault(msg, 6, 0),
    error: jspb.Message.getFieldWithDefault(msg, 7, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.CoreSchema.V1.LNPayment}
 */
proto.CoreSchema.V1.LNPayment.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.CoreSchema.V1.LNPayment;
  return proto.CoreSchema.V1.LNPayment.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.CoreSchema.V1.LNPayment} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.CoreSchema.V1.LNPayment}
 */
proto.CoreSchema.V1.LNPayment.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = new proto.CoreSchema.V1.Decimal;
      reader.readMessage(value,proto.CoreSchema.V1.Decimal.deserializeBinaryFromReader);
      msg.setAmount(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setBolt11(value);
      break;
    case 5:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setCreatedat(value);
      break;
    case 6:
      var value = /** @type {!proto.CoreSchema.V1.LNPaymentStatus} */ (reader.readEnum());
      msg.setStatus(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setError(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.CoreSchema.V1.LNPayment.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.CoreSchema.V1.LNPayment.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.CoreSchema.V1.LNPayment} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.CoreSchema.V1.LNPayment.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getAmount();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.CoreSchema.V1.Decimal.serializeBinaryToWriter
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getBolt11();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getCreatedat();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getStatus();
  if (f !== 0.0) {
    writer.writeEnum(
      6,
      f
    );
  }
  f = message.getError();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
};


/**
 * optional string Id = 1;
 * @return {string}
 */
proto.CoreSchema.V1.LNPayment.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.CoreSchema.V1.LNPayment.prototype.setId = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional Decimal Amount = 2;
 * @return {?proto.CoreSchema.V1.Decimal}
 */
proto.CoreSchema.V1.LNPayment.prototype.getAmount = function() {
  return /** @type{?proto.CoreSchema.V1.Decimal} */ (
    jspb.Message.getWrapperField(this, proto.CoreSchema.V1.Decimal, 2));
};


/** @param {?proto.CoreSchema.V1.Decimal|undefined} value */
proto.CoreSchema.V1.LNPayment.prototype.setAmount = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.CoreSchema.V1.LNPayment.prototype.clearAmount = function() {
  this.setAmount(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.CoreSchema.V1.LNPayment.prototype.hasAmount = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string Description = 3;
 * @return {string}
 */
proto.CoreSchema.V1.LNPayment.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.CoreSchema.V1.LNPayment.prototype.setDescription = function(value) {
  jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string Bolt11 = 4;
 * @return {string}
 */
proto.CoreSchema.V1.LNPayment.prototype.getBolt11 = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/** @param {string} value */
proto.CoreSchema.V1.LNPayment.prototype.setBolt11 = function(value) {
  jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional google.protobuf.Timestamp CreatedAt = 5;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.CoreSchema.V1.LNPayment.prototype.getCreatedat = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 5));
};


/** @param {?proto.google.protobuf.Timestamp|undefined} value */
proto.CoreSchema.V1.LNPayment.prototype.setCreatedat = function(value) {
  jspb.Message.setWrapperField(this, 5, value);
};


proto.CoreSchema.V1.LNPayment.prototype.clearCreatedat = function() {
  this.setCreatedat(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.CoreSchema.V1.LNPayment.prototype.hasCreatedat = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional LNPaymentStatus Status = 6;
 * @return {!proto.CoreSchema.V1.LNPaymentStatus}
 */
proto.CoreSchema.V1.LNPayment.prototype.getStatus = function() {
  return /** @type {!proto.CoreSchema.V1.LNPaymentStatus} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/** @param {!proto.CoreSchema.V1.LNPaymentStatus} value */
proto.CoreSchema.V1.LNPayment.prototype.setStatus = function(value) {
  jspb.Message.setProto3EnumField(this, 6, value);
};


/**
 * optional string Error = 7;
 * @return {string}
 */
proto.CoreSchema.V1.LNPayment.prototype.getError = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/** @param {string} value */
proto.CoreSchema.V1.LNPayment.prototype.setError = function(value) {
  jspb.Message.setProto3StringField(this, 7, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.CoreSchema.V1.LNGetInvoicesRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.CoreSchema.V1.LNGetInvoicesRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.CoreSchema.V1.LNGetInvoicesRequest.displayName = 'proto.CoreSchema.V1.LNGetInvoicesRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.CoreSchema.V1.LNGetInvoicesRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.CoreSchema.V1.LNGetInvoicesRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.CoreSchema.V1.LNGetInvoicesRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.CoreSchema.V1.LNGetInvoicesRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    skip: jspb.Message.getFieldWithDefault(msg, 1, 0),
    take: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.CoreSchema.V1.LNGetInvoicesRequest}
 */
proto.CoreSchema.V1.LNGetInvoicesRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.CoreSchema.V1.LNGetInvoicesRequest;
  return proto.CoreSchema.V1.LNGetInvoicesRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.CoreSchema.V1.LNGetInvoicesRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.CoreSchema.V1.LNGetInvoicesRequest}
 */
proto.CoreSchema.V1.LNGetInvoicesRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setSkip(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setTake(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.CoreSchema.V1.LNGetInvoicesRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.CoreSchema.V1.LNGetInvoicesRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.CoreSchema.V1.LNGetInvoicesRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.CoreSchema.V1.LNGetInvoicesRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSkip();
  if (f !== 0) {
    writer.writeUint32(
      1,
      f
    );
  }
  f = message.getTake();
  if (f !== 0) {
    writer.writeUint32(
      2,
      f
    );
  }
};


/**
 * optional uint32 Skip = 1;
 * @return {number}
 */
proto.CoreSchema.V1.LNGetInvoicesRequest.prototype.getSkip = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.CoreSchema.V1.LNGetInvoicesRequest.prototype.setSkip = function(value) {
  jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional uint32 Take = 2;
 * @return {number}
 */
proto.CoreSchema.V1.LNGetInvoicesRequest.prototype.getTake = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.CoreSchema.V1.LNGetInvoicesRequest.prototype.setTake = function(value) {
  jspb.Message.setProto3IntField(this, 2, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.CoreSchema.V1.LNGetInvoicesResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.CoreSchema.V1.LNGetInvoicesResponse.repeatedFields_, null);
};
goog.inherits(proto.CoreSchema.V1.LNGetInvoicesResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.CoreSchema.V1.LNGetInvoicesResponse.displayName = 'proto.CoreSchema.V1.LNGetInvoicesResponse';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.CoreSchema.V1.LNGetInvoicesResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.CoreSchema.V1.LNGetInvoicesResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.CoreSchema.V1.LNGetInvoicesResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.CoreSchema.V1.LNGetInvoicesResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.CoreSchema.V1.LNGetInvoicesResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    invoicesList: jspb.Message.toObjectList(msg.getInvoicesList(),
    proto.CoreSchema.V1.LNInvoice.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.CoreSchema.V1.LNGetInvoicesResponse}
 */
proto.CoreSchema.V1.LNGetInvoicesResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.CoreSchema.V1.LNGetInvoicesResponse;
  return proto.CoreSchema.V1.LNGetInvoicesResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.CoreSchema.V1.LNGetInvoicesResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.CoreSchema.V1.LNGetInvoicesResponse}
 */
proto.CoreSchema.V1.LNGetInvoicesResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.CoreSchema.V1.LNInvoice;
      reader.readMessage(value,proto.CoreSchema.V1.LNInvoice.deserializeBinaryFromReader);
      msg.addInvoices(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.CoreSchema.V1.LNGetInvoicesResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.CoreSchema.V1.LNGetInvoicesResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.CoreSchema.V1.LNGetInvoicesResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.CoreSchema.V1.LNGetInvoicesResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getInvoicesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.CoreSchema.V1.LNInvoice.serializeBinaryToWriter
    );
  }
};


/**
 * repeated LNInvoice Invoices = 1;
 * @return {!Array<!proto.CoreSchema.V1.LNInvoice>}
 */
proto.CoreSchema.V1.LNGetInvoicesResponse.prototype.getInvoicesList = function() {
  return /** @type{!Array<!proto.CoreSchema.V1.LNInvoice>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.CoreSchema.V1.LNInvoice, 1));
};


/** @param {!Array<!proto.CoreSchema.V1.LNInvoice>} value */
proto.CoreSchema.V1.LNGetInvoicesResponse.prototype.setInvoicesList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.CoreSchema.V1.LNInvoice=} opt_value
 * @param {number=} opt_index
 * @return {!proto.CoreSchema.V1.LNInvoice}
 */
proto.CoreSchema.V1.LNGetInvoicesResponse.prototype.addInvoices = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.CoreSchema.V1.LNInvoice, opt_index);
};


proto.CoreSchema.V1.LNGetInvoicesResponse.prototype.clearInvoicesList = function() {
  this.setInvoicesList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.CoreSchema.V1.LNGetPaymentsRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.CoreSchema.V1.LNGetPaymentsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.CoreSchema.V1.LNGetPaymentsRequest.displayName = 'proto.CoreSchema.V1.LNGetPaymentsRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.CoreSchema.V1.LNGetPaymentsRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.CoreSchema.V1.LNGetPaymentsRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.CoreSchema.V1.LNGetPaymentsRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.CoreSchema.V1.LNGetPaymentsRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    skip: jspb.Message.getFieldWithDefault(msg, 1, 0),
    take: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.CoreSchema.V1.LNGetPaymentsRequest}
 */
proto.CoreSchema.V1.LNGetPaymentsRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.CoreSchema.V1.LNGetPaymentsRequest;
  return proto.CoreSchema.V1.LNGetPaymentsRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.CoreSchema.V1.LNGetPaymentsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.CoreSchema.V1.LNGetPaymentsRequest}
 */
proto.CoreSchema.V1.LNGetPaymentsRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setSkip(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setTake(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.CoreSchema.V1.LNGetPaymentsRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.CoreSchema.V1.LNGetPaymentsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.CoreSchema.V1.LNGetPaymentsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.CoreSchema.V1.LNGetPaymentsRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSkip();
  if (f !== 0) {
    writer.writeUint32(
      1,
      f
    );
  }
  f = message.getTake();
  if (f !== 0) {
    writer.writeUint32(
      2,
      f
    );
  }
};


/**
 * optional uint32 Skip = 1;
 * @return {number}
 */
proto.CoreSchema.V1.LNGetPaymentsRequest.prototype.getSkip = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.CoreSchema.V1.LNGetPaymentsRequest.prototype.setSkip = function(value) {
  jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional uint32 Take = 2;
 * @return {number}
 */
proto.CoreSchema.V1.LNGetPaymentsRequest.prototype.getTake = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.CoreSchema.V1.LNGetPaymentsRequest.prototype.setTake = function(value) {
  jspb.Message.setProto3IntField(this, 2, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.CoreSchema.V1.LNGetPaymentsResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.CoreSchema.V1.LNGetPaymentsResponse.repeatedFields_, null);
};
goog.inherits(proto.CoreSchema.V1.LNGetPaymentsResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.CoreSchema.V1.LNGetPaymentsResponse.displayName = 'proto.CoreSchema.V1.LNGetPaymentsResponse';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.CoreSchema.V1.LNGetPaymentsResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.CoreSchema.V1.LNGetPaymentsResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.CoreSchema.V1.LNGetPaymentsResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.CoreSchema.V1.LNGetPaymentsResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.CoreSchema.V1.LNGetPaymentsResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    lnpaymentsList: jspb.Message.toObjectList(msg.getLnpaymentsList(),
    proto.CoreSchema.V1.LNPayment.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.CoreSchema.V1.LNGetPaymentsResponse}
 */
proto.CoreSchema.V1.LNGetPaymentsResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.CoreSchema.V1.LNGetPaymentsResponse;
  return proto.CoreSchema.V1.LNGetPaymentsResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.CoreSchema.V1.LNGetPaymentsResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.CoreSchema.V1.LNGetPaymentsResponse}
 */
proto.CoreSchema.V1.LNGetPaymentsResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.CoreSchema.V1.LNPayment;
      reader.readMessage(value,proto.CoreSchema.V1.LNPayment.deserializeBinaryFromReader);
      msg.addLnpayments(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.CoreSchema.V1.LNGetPaymentsResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.CoreSchema.V1.LNGetPaymentsResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.CoreSchema.V1.LNGetPaymentsResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.CoreSchema.V1.LNGetPaymentsResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getLnpaymentsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.CoreSchema.V1.LNPayment.serializeBinaryToWriter
    );
  }
};


/**
 * repeated LNPayment LNPayments = 1;
 * @return {!Array<!proto.CoreSchema.V1.LNPayment>}
 */
proto.CoreSchema.V1.LNGetPaymentsResponse.prototype.getLnpaymentsList = function() {
  return /** @type{!Array<!proto.CoreSchema.V1.LNPayment>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.CoreSchema.V1.LNPayment, 1));
};


/** @param {!Array<!proto.CoreSchema.V1.LNPayment>} value */
proto.CoreSchema.V1.LNGetPaymentsResponse.prototype.setLnpaymentsList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.CoreSchema.V1.LNPayment=} opt_value
 * @param {number=} opt_index
 * @return {!proto.CoreSchema.V1.LNPayment}
 */
proto.CoreSchema.V1.LNGetPaymentsResponse.prototype.addLnpayments = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.CoreSchema.V1.LNPayment, opt_index);
};


proto.CoreSchema.V1.LNGetPaymentsResponse.prototype.clearLnpaymentsList = function() {
  this.setLnpaymentsList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.CoreSchema.V1.UpdateMyProfileRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.CoreSchema.V1.UpdateMyProfileRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.CoreSchema.V1.UpdateMyProfileRequest.displayName = 'proto.CoreSchema.V1.UpdateMyProfileRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.CoreSchema.V1.UpdateMyProfileRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.CoreSchema.V1.UpdateMyProfileRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.CoreSchema.V1.UpdateMyProfileRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.CoreSchema.V1.UpdateMyProfileRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    timezone: jspb.Message.getFieldWithDefault(msg, 1, ""),
    introduction: jspb.Message.getFieldWithDefault(msg, 2, ""),
    site: jspb.Message.getFieldWithDefault(msg, 3, ""),
    salesdisabled: jspb.Message.getFieldWithDefault(msg, 4, false),
    buysdisabled: jspb.Message.getFieldWithDefault(msg, 5, false),
    defaultcurrency: jspb.Message.getFieldWithDefault(msg, 6, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.CoreSchema.V1.UpdateMyProfileRequest}
 */
proto.CoreSchema.V1.UpdateMyProfileRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.CoreSchema.V1.UpdateMyProfileRequest;
  return proto.CoreSchema.V1.UpdateMyProfileRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.CoreSchema.V1.UpdateMyProfileRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.CoreSchema.V1.UpdateMyProfileRequest}
 */
proto.CoreSchema.V1.UpdateMyProfileRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setTimezone(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setIntroduction(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setSite(value);
      break;
    case 4:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setSalesdisabled(value);
      break;
    case 5:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setBuysdisabled(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setDefaultcurrency(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.CoreSchema.V1.UpdateMyProfileRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.CoreSchema.V1.UpdateMyProfileRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.CoreSchema.V1.UpdateMyProfileRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.CoreSchema.V1.UpdateMyProfileRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTimezone();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getIntroduction();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getSite();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getSalesdisabled();
  if (f) {
    writer.writeBool(
      4,
      f
    );
  }
  f = message.getBuysdisabled();
  if (f) {
    writer.writeBool(
      5,
      f
    );
  }
  f = message.getDefaultcurrency();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
};


/**
 * optional string Timezone = 1;
 * @return {string}
 */
proto.CoreSchema.V1.UpdateMyProfileRequest.prototype.getTimezone = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.CoreSchema.V1.UpdateMyProfileRequest.prototype.setTimezone = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string Introduction = 2;
 * @return {string}
 */
proto.CoreSchema.V1.UpdateMyProfileRequest.prototype.getIntroduction = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.CoreSchema.V1.UpdateMyProfileRequest.prototype.setIntroduction = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string Site = 3;
 * @return {string}
 */
proto.CoreSchema.V1.UpdateMyProfileRequest.prototype.getSite = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.CoreSchema.V1.UpdateMyProfileRequest.prototype.setSite = function(value) {
  jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional bool SalesDisabled = 4;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.CoreSchema.V1.UpdateMyProfileRequest.prototype.getSalesdisabled = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 4, false));
};


/** @param {boolean} value */
proto.CoreSchema.V1.UpdateMyProfileRequest.prototype.setSalesdisabled = function(value) {
  jspb.Message.setProto3BooleanField(this, 4, value);
};


/**
 * optional bool BuysDisabled = 5;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.CoreSchema.V1.UpdateMyProfileRequest.prototype.getBuysdisabled = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 5, false));
};


/** @param {boolean} value */
proto.CoreSchema.V1.UpdateMyProfileRequest.prototype.setBuysdisabled = function(value) {
  jspb.Message.setProto3BooleanField(this, 5, value);
};


/**
 * optional string DefaultCurrency = 6;
 * @return {string}
 */
proto.CoreSchema.V1.UpdateMyProfileRequest.prototype.getDefaultcurrency = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/** @param {string} value */
proto.CoreSchema.V1.UpdateMyProfileRequest.prototype.setDefaultcurrency = function(value) {
  jspb.Message.setProto3StringField(this, 6, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.CoreSchema.V1.MyProfileResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.CoreSchema.V1.MyProfileResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.CoreSchema.V1.MyProfileResponse.displayName = 'proto.CoreSchema.V1.MyProfileResponse';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.CoreSchema.V1.MyProfileResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.CoreSchema.V1.MyProfileResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.CoreSchema.V1.MyProfileResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.CoreSchema.V1.MyProfileResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    userid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    username: jspb.Message.getFieldWithDefault(msg, 2, ""),
    email: jspb.Message.getFieldWithDefault(msg, 3, ""),
    enabledtwofa: jspb.Message.getFieldWithDefault(msg, 4, false),
    emailverifed: jspb.Message.getFieldWithDefault(msg, 5, false),
    timezone: jspb.Message.getFieldWithDefault(msg, 6, ""),
    introduction: jspb.Message.getFieldWithDefault(msg, 7, ""),
    site: jspb.Message.getFieldWithDefault(msg, 8, ""),
    salesdisabled: jspb.Message.getFieldWithDefault(msg, 9, false),
    buysdisabled: jspb.Message.getFieldWithDefault(msg, 10, false),
    defaultcurrency: jspb.Message.getFieldWithDefault(msg, 11, ""),
    boughtoptions: (f = msg.getBoughtoptions()) && proto.CoreSchema.V1.BoughtOptions.toObject(includeInstance, f),
    isanonymous: jspb.Message.getFieldWithDefault(msg, 13, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.CoreSchema.V1.MyProfileResponse}
 */
proto.CoreSchema.V1.MyProfileResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.CoreSchema.V1.MyProfileResponse;
  return proto.CoreSchema.V1.MyProfileResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.CoreSchema.V1.MyProfileResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.CoreSchema.V1.MyProfileResponse}
 */
proto.CoreSchema.V1.MyProfileResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setUsername(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setEmail(value);
      break;
    case 4:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setEnabledtwofa(value);
      break;
    case 5:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setEmailverifed(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setTimezone(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setIntroduction(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setSite(value);
      break;
    case 9:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setSalesdisabled(value);
      break;
    case 10:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setBuysdisabled(value);
      break;
    case 11:
      var value = /** @type {string} */ (reader.readString());
      msg.setDefaultcurrency(value);
      break;
    case 12:
      var value = new proto.CoreSchema.V1.BoughtOptions;
      reader.readMessage(value,proto.CoreSchema.V1.BoughtOptions.deserializeBinaryFromReader);
      msg.setBoughtoptions(value);
      break;
    case 13:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsanonymous(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.CoreSchema.V1.MyProfileResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.CoreSchema.V1.MyProfileResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.CoreSchema.V1.MyProfileResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.CoreSchema.V1.MyProfileResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUserid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getUsername();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getEmail();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getEnabledtwofa();
  if (f) {
    writer.writeBool(
      4,
      f
    );
  }
  f = message.getEmailverifed();
  if (f) {
    writer.writeBool(
      5,
      f
    );
  }
  f = message.getTimezone();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getIntroduction();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getSite();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getSalesdisabled();
  if (f) {
    writer.writeBool(
      9,
      f
    );
  }
  f = message.getBuysdisabled();
  if (f) {
    writer.writeBool(
      10,
      f
    );
  }
  f = message.getDefaultcurrency();
  if (f.length > 0) {
    writer.writeString(
      11,
      f
    );
  }
  f = message.getBoughtoptions();
  if (f != null) {
    writer.writeMessage(
      12,
      f,
      proto.CoreSchema.V1.BoughtOptions.serializeBinaryToWriter
    );
  }
  f = message.getIsanonymous();
  if (f) {
    writer.writeBool(
      13,
      f
    );
  }
};


/**
 * optional string UserId = 1;
 * @return {string}
 */
proto.CoreSchema.V1.MyProfileResponse.prototype.getUserid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.CoreSchema.V1.MyProfileResponse.prototype.setUserid = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string Username = 2;
 * @return {string}
 */
proto.CoreSchema.V1.MyProfileResponse.prototype.getUsername = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.CoreSchema.V1.MyProfileResponse.prototype.setUsername = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string Email = 3;
 * @return {string}
 */
proto.CoreSchema.V1.MyProfileResponse.prototype.getEmail = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.CoreSchema.V1.MyProfileResponse.prototype.setEmail = function(value) {
  jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional bool EnabledTwoFA = 4;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.CoreSchema.V1.MyProfileResponse.prototype.getEnabledtwofa = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 4, false));
};


/** @param {boolean} value */
proto.CoreSchema.V1.MyProfileResponse.prototype.setEnabledtwofa = function(value) {
  jspb.Message.setProto3BooleanField(this, 4, value);
};


/**
 * optional bool EmailVerifed = 5;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.CoreSchema.V1.MyProfileResponse.prototype.getEmailverifed = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 5, false));
};


/** @param {boolean} value */
proto.CoreSchema.V1.MyProfileResponse.prototype.setEmailverifed = function(value) {
  jspb.Message.setProto3BooleanField(this, 5, value);
};


/**
 * optional string Timezone = 6;
 * @return {string}
 */
proto.CoreSchema.V1.MyProfileResponse.prototype.getTimezone = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/** @param {string} value */
proto.CoreSchema.V1.MyProfileResponse.prototype.setTimezone = function(value) {
  jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string Introduction = 7;
 * @return {string}
 */
proto.CoreSchema.V1.MyProfileResponse.prototype.getIntroduction = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/** @param {string} value */
proto.CoreSchema.V1.MyProfileResponse.prototype.setIntroduction = function(value) {
  jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional string Site = 8;
 * @return {string}
 */
proto.CoreSchema.V1.MyProfileResponse.prototype.getSite = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/** @param {string} value */
proto.CoreSchema.V1.MyProfileResponse.prototype.setSite = function(value) {
  jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * optional bool SalesDisabled = 9;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.CoreSchema.V1.MyProfileResponse.prototype.getSalesdisabled = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 9, false));
};


/** @param {boolean} value */
proto.CoreSchema.V1.MyProfileResponse.prototype.setSalesdisabled = function(value) {
  jspb.Message.setProto3BooleanField(this, 9, value);
};


/**
 * optional bool BuysDisabled = 10;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.CoreSchema.V1.MyProfileResponse.prototype.getBuysdisabled = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 10, false));
};


/** @param {boolean} value */
proto.CoreSchema.V1.MyProfileResponse.prototype.setBuysdisabled = function(value) {
  jspb.Message.setProto3BooleanField(this, 10, value);
};


/**
 * optional string DefaultCurrency = 11;
 * @return {string}
 */
proto.CoreSchema.V1.MyProfileResponse.prototype.getDefaultcurrency = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 11, ""));
};


/** @param {string} value */
proto.CoreSchema.V1.MyProfileResponse.prototype.setDefaultcurrency = function(value) {
  jspb.Message.setProto3StringField(this, 11, value);
};


/**
 * optional BoughtOptions BoughtOptions = 12;
 * @return {?proto.CoreSchema.V1.BoughtOptions}
 */
proto.CoreSchema.V1.MyProfileResponse.prototype.getBoughtoptions = function() {
  return /** @type{?proto.CoreSchema.V1.BoughtOptions} */ (
    jspb.Message.getWrapperField(this, proto.CoreSchema.V1.BoughtOptions, 12));
};


/** @param {?proto.CoreSchema.V1.BoughtOptions|undefined} value */
proto.CoreSchema.V1.MyProfileResponse.prototype.setBoughtoptions = function(value) {
  jspb.Message.setWrapperField(this, 12, value);
};


proto.CoreSchema.V1.MyProfileResponse.prototype.clearBoughtoptions = function() {
  this.setBoughtoptions(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.CoreSchema.V1.MyProfileResponse.prototype.hasBoughtoptions = function() {
  return jspb.Message.getField(this, 12) != null;
};


/**
 * optional bool IsAnonymous = 13;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.CoreSchema.V1.MyProfileResponse.prototype.getIsanonymous = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 13, false));
};


/** @param {boolean} value */
proto.CoreSchema.V1.MyProfileResponse.prototype.setIsanonymous = function(value) {
  jspb.Message.setProto3BooleanField(this, 13, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.CoreSchema.V1.GetUserEventsResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.CoreSchema.V1.GetUserEventsResponse.repeatedFields_, null);
};
goog.inherits(proto.CoreSchema.V1.GetUserEventsResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.CoreSchema.V1.GetUserEventsResponse.displayName = 'proto.CoreSchema.V1.GetUserEventsResponse';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.CoreSchema.V1.GetUserEventsResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.CoreSchema.V1.GetUserEventsResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.CoreSchema.V1.GetUserEventsResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.CoreSchema.V1.GetUserEventsResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.CoreSchema.V1.GetUserEventsResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    eventsList: jspb.Message.toObjectList(msg.getEventsList(),
    proto.CoreSchema.V1.Event.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.CoreSchema.V1.GetUserEventsResponse}
 */
proto.CoreSchema.V1.GetUserEventsResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.CoreSchema.V1.GetUserEventsResponse;
  return proto.CoreSchema.V1.GetUserEventsResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.CoreSchema.V1.GetUserEventsResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.CoreSchema.V1.GetUserEventsResponse}
 */
proto.CoreSchema.V1.GetUserEventsResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.CoreSchema.V1.Event;
      reader.readMessage(value,proto.CoreSchema.V1.Event.deserializeBinaryFromReader);
      msg.addEvents(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.CoreSchema.V1.GetUserEventsResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.CoreSchema.V1.GetUserEventsResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.CoreSchema.V1.GetUserEventsResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.CoreSchema.V1.GetUserEventsResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEventsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.CoreSchema.V1.Event.serializeBinaryToWriter
    );
  }
};


/**
 * repeated Event Events = 1;
 * @return {!Array<!proto.CoreSchema.V1.Event>}
 */
proto.CoreSchema.V1.GetUserEventsResponse.prototype.getEventsList = function() {
  return /** @type{!Array<!proto.CoreSchema.V1.Event>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.CoreSchema.V1.Event, 1));
};


/** @param {!Array<!proto.CoreSchema.V1.Event>} value */
proto.CoreSchema.V1.GetUserEventsResponse.prototype.setEventsList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.CoreSchema.V1.Event=} opt_value
 * @param {number=} opt_index
 * @return {!proto.CoreSchema.V1.Event}
 */
proto.CoreSchema.V1.GetUserEventsResponse.prototype.addEvents = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.CoreSchema.V1.Event, opt_index);
};


proto.CoreSchema.V1.GetUserEventsResponse.prototype.clearEventsList = function() {
  this.setEventsList([]);
};


/**
 * @enum {number}
 */
proto.CoreSchema.V1.AdCurrentStatus = {
  ENABLED: 0,
  DISABLEDBYOWNER: 1,
  NOTENOUGHMONEY: 2,
  GLOBALDISABLED: 3,
  DISABLEDBYTIMETABLE: 4
};

/**
 * @enum {number}
 */
proto.CoreSchema.V1.DealStatus = {
  OPENED: 0,
  COMPLETED: 1,
  CANCELED: 2,
  DISPUTED: 3,
  WAITDEPOSIT: 4
};

/**
 * @enum {number}
 */
proto.CoreSchema.V1.LNPaymentStatus = {
  STARTED: 0,
  PENDING: 1,
  SUCCESS: 2,
  FAILED: 3
};

goog.object.extend(exports, proto.CoreSchema.V1);
